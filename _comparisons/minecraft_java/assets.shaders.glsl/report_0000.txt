Addition of "text_packs" at "21w10a" (snapshot of "1.17").

resource pack "minecraft":
	file "include/fog.glsl":
		'''
		#version 150
		
		vec4 linear_fog(vec4 inColor, float vertexDistance, float fogStart, float fogEnd, vec4 fogColor) {
		    if (vertexDistance <= fogStart) {
		        return inColor;
		    }
		
		    float fogValue = vertexDistance < fogEnd ? smoothstep(fogStart, fogEnd, vertexDistance) : 1.0;
		    return vec4(mix(inColor.rgb, fogColor.rgb, fogValue * fogColor.a), inColor.a);
		}
		
		float linear_fog_fade(float vertexDistance, float fogStart, float fogEnd) {
		    if (vertexDistance <= fogStart) {
		        return 1.0;
		    } else if (vertexDistance >= fogEnd) {
		        return 0.0;
		    }
		
		    return smoothstep(fogEnd, fogStart, vertexDistance);
		}
		'''
	file "include/light.glsl":
		'''
		#version 150
		
		#define MINECRAFT_LIGHT_POWER   (0.6)
		#define MINECRAFT_AMBIENT_LIGHT (0.4)
		
		vec4 minecraft_mix_light(vec3 lightDir0, vec3 lightDir1, vec3 normal, vec4 color) {
		    lightDir0 = normalize(lightDir0);
		    lightDir1 = normalize(lightDir1);
		    float light0 = max(0.0, dot(lightDir0, normal));
		    float light1 = max(0.0, dot(lightDir1, normal));
		    float lightAccum = min(1.0, (light0 + light1) * MINECRAFT_LIGHT_POWER + MINECRAFT_AMBIENT_LIGHT);
		    return vec4(color.rgb * lightAccum, color.a);
		}
		'''
	file "include/matrix.glsl":
		'''
		#version 150
		
		mat2 mat2_rotate_z(float radians) {
		    return mat2(
		        cos(radians), -sin(radians),
		        sin(radians), cos(radians)
		    );
		}
		'''
	file "include/projection.glsl":
		'''
		#version 150
		
		vec4 projection_from_position(vec4 position) {
		    vec4 projection = position * 0.5;
		    projection.xy = vec2(projection.x + projection.w, projection.y + projection.w);
		    projection.zw = position.zw;
		    return projection;
		}
		'''