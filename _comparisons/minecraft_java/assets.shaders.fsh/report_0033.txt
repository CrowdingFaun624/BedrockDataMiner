Difference of "text_packs" between "24w33a" (snapshot of "1.21.2") and "24w34a" (snapshot of "1.21.2").

Changed resource pack "minecraft":
	Total file: 42 (+0, -23)
	Changed file "core/particle.fsh":
		Total line: 24 (+1, -1)
		        '''
		 1  1   #version 150
		 2  2   
		    3 + #moj_import <minecraft:fog.glsl>
		 3    - #moj_import <fog.glsl>
		 4  4   
		 5  5   uniform sampler2D Sampler0;
		 6  6   
		 7  7   uniform vec4 ColorModulator;
		 8  8   uniform float FogStart;
		        ...
		        '''
	Changed file "core/position.fsh":
		Total line: 16 (+1, -1)
		        '''
		 1  1   #version 150
		 2  2   
		    3 + #moj_import <minecraft:fog.glsl>
		 3    - #moj_import <fog.glsl>
		 4  4   
		 5  5   uniform vec4 ColorModulator;
		 6  6   uniform float FogStart;
		 7  7   uniform float FogEnd;
		 8  8   uniform vec4 FogColor;
		        ...
		        '''
	Removed file "core/rendertype_armor_cutout_no_cull.fsh":
		'''
		#version 150
		
		#moj_import <fog.glsl>
		
		uniform sampler2D Sampler0;
		
		uniform vec4 ColorModulator;
		uniform float FogStart;
		uniform float FogEnd;
		uniform vec4 FogColor;
		
		in float vertexDistance;
		in vec4 vertexColor;
		in vec2 texCoord0;
		in vec2 texCoord1;
		
		out vec4 fragColor;
		
		void main() {
		    vec4 color = texture(Sampler0, texCoord0) * vertexColor * ColorModulator;
		    if (color.a < 0.1) {
		        discard;
		    }
		    fragColor = linear_fog(color, vertexDistance, FogStart, FogEnd, FogColor);
		}
		'''
	Removed file "core/rendertype_armor_entity_glint.fsh":
		'''
		#version 150
		
		#moj_import <fog.glsl>
		
		uniform sampler2D Sampler0;
		
		uniform vec4 ColorModulator;
		uniform float FogStart;
		uniform float FogEnd;
		uniform float GlintAlpha;
		
		in float vertexDistance;
		in vec2 texCoord0;
		
		out vec4 fragColor;
		
		void main() {
		    vec4 color = texture(Sampler0, texCoord0) * ColorModulator;
		    if (color.a < 0.1) {
		        discard;
		    }
		    float fade = linear_fog_fade(vertexDistance, FogStart, FogEnd) * GlintAlpha;
		    fragColor = vec4(color.rgb * fade, color.a);
		}
		'''
	Changed file "core/rendertype_beacon_beam.fsh":
		Total line: 23 (+1, -1)
		        '''
		 1  1   #version 150
		 2  2   
		    3 + #moj_import <minecraft:fog.glsl>
		 3    - #moj_import <fog.glsl>
		 4  4   
		 5  5   uniform sampler2D Sampler0;
		 6  6   
		 7  7   uniform mat4 ProjMat;
		 8  8   uniform vec4 ColorModulator;
		        ...
		        '''
	Removed file "core/rendertype_breeze_wind.fsh":
		'''
		#version 150
		
		#moj_import <fog.glsl>
		
		uniform sampler2D Sampler0;
		
		uniform vec4 ColorModulator;
		uniform float FogStart;
		uniform float FogEnd;
		
		in float vertexDistance;
		in vec4 vertexColor;
		in vec2 texCoord0;
		
		out vec4 fragColor;
		
		void main() {
		    vec4 color = texture(Sampler0, texCoord0) * vertexColor * ColorModulator;
		    if (color.a < 0.1) {
		        discard;
		    }
		    fragColor = color * linear_fog_fade(vertexDistance, FogStart, FogEnd);
		}
		'''
	Changed file "core/rendertype_clouds.fsh":
		Total line: 16 (+1, -1)
		        '''
		 1  1   #version 150
		 2  2   
		    3 + #moj_import <minecraft:fog.glsl>
		 3    - #moj_import <fog.glsl>
		 4  4   
		 5  5   uniform float FogStart;
		 6  6   uniform float FogEnd;
		 7  7   uniform vec4 FogColor;
		 8  8   
		        ...
		        '''
	Removed file "core/rendertype_cutout.fsh":
		'''
		#version 150
		
		#moj_import <fog.glsl>
		
		uniform sampler2D Sampler0;
		
		uniform vec4 ColorModulator;
		uniform float FogStart;
		uniform float FogEnd;
		uniform vec4 FogColor;
		
		in float vertexDistance;
		in vec4 vertexColor;
		in vec2 texCoord0;
		
		out vec4 fragColor;
		
		void main() {
		    vec4 color = texture(Sampler0, texCoord0) * vertexColor * ColorModulator;
		    if (color.a < 0.1) {
		        discard;
		    }
		    fragColor = linear_fog(color, vertexDistance, FogStart, FogEnd, FogColor);
		}
		'''
	Removed file "core/rendertype_cutout_mipped.fsh":
		'''
		#version 150
		
		#moj_import <fog.glsl>
		
		uniform sampler2D Sampler0;
		
		uniform vec4 ColorModulator;
		uniform float FogStart;
		uniform float FogEnd;
		uniform vec4 FogColor;
		
		in float vertexDistance;
		in vec4 vertexColor;
		in vec2 texCoord0;
		
		out vec4 fragColor;
		
		void main() {
		    vec4 color = texture(Sampler0, texCoord0) * vertexColor * ColorModulator;
		    if (color.a < 0.5) {
		        discard;
		    }
		    fragColor = linear_fog(color, vertexDistance, FogStart, FogEnd, FogColor);
		}
		'''
	Changed file "core/rendertype_end_portal.fsh":
		Total line: 62 (+1, -1)
		        '''
		 1  1   #version 150
		 2  2   
		    3 + #moj_import <minecraft:matrix.glsl>
		 3    - #moj_import <matrix.glsl>
		 4  4   
		 5  5   uniform sampler2D Sampler0;
		 6  6   uniform sampler2D Sampler1;
		 7  7   
		 8  8   uniform float GameTime;
		        ...
		        '''
	Removed file "core/rendertype_energy_swirl.fsh":
		'''
		#version 150
		
		#moj_import <fog.glsl>
		
		uniform sampler2D Sampler0;
		
		uniform vec4 ColorModulator;
		uniform float FogStart;
		uniform float FogEnd;
		
		in float vertexDistance;
		in vec4 vertexColor;
		in vec2 texCoord0;
		
		out vec4 fragColor;
		
		void main() {
		    vec4 color = texture(Sampler0, texCoord0) * vertexColor * ColorModulator;
		    if (color.a < 0.1) {
		        discard;
		    }
		    fragColor = color * linear_fog_fade(vertexDistance, FogStart, FogEnd);
		}
		'''
	Moved file from "core/rendertype_entity_cutout.fsh" to "core/entity.fsh".
	Changed file "core/entity.fsh":
		Total line: 35 (+8, -2)
		        '''
		 1  1   #version 150
		 2  2   
		    3 + #moj_import <minecraft:fog.glsl>
		 3    - #moj_import <fog.glsl>
		 4  4   
		 5  5   uniform sampler2D Sampler0;
		 6  6   
		 7  7   uniform vec4 ColorModulator;
		 8  8   uniform float FogStart;
		        ...
		17 17   
		18 18   out vec4 fragColor;
		19 19   
		20 20   void main() {
		21 21       vec4 color = texture(Sampler0, texCoord0);
		   22 + #ifdef ALPHA_CUTOUT
		   23 +     if (color.a < ALPHA_CUTOUT) {
		22    -     if (color.a < 0.1) {
		23 24           discard;
		24 25       }
		   26 + #endif
		25 27       color *= vertexColor * ColorModulator;
		   28 + #ifndef NO_OVERLAY
		26 29       color.rgb = mix(overlayColor.rgb, color.rgb, overlayColor.a);
		   30 + #endif
		   31 + #ifndef EMISSIVE
		27 32       color *= lightMapColor;
		   33 + #endif
		28 34       fragColor = linear_fog(color, vertexDistance, FogStart, FogEnd, FogColor);
		29 35   }
		        '''
	Removed file "core/rendertype_entity_cutout_no_cull.fsh":
		'''
		#version 150
		
		#moj_import <fog.glsl>
		
		uniform sampler2D Sampler0;
		
		uniform vec4 ColorModulator;
		uniform float FogStart;
		uniform float FogEnd;
		uniform vec4 FogColor;
		
		in float vertexDistance;
		in vec4 vertexColor;
		in vec4 lightMapColor;
		in vec4 overlayColor;
		in vec2 texCoord0;
		
		out vec4 fragColor;
		
		void main() {
		    vec4 color = texture(Sampler0, texCoord0);
		    if (color.a < 0.1) {
		        discard;
		    }
		    color *= vertexColor * ColorModulator;
		    color.rgb = mix(overlayColor.rgb, color.rgb, overlayColor.a);
		    color *= lightMapColor;
		    fragColor = linear_fog(color, vertexDistance, FogStart, FogEnd, FogColor);
		}
		'''
	Removed file "core/rendertype_entity_cutout_no_cull_z_offset.fsh":
		'''
		#version 150
		
		#moj_import <fog.glsl>
		
		uniform sampler2D Sampler0;
		
		uniform vec4 ColorModulator;
		uniform float FogStart;
		uniform float FogEnd;
		uniform vec4 FogColor;
		
		in float vertexDistance;
		in vec4 vertexColor;
		in vec4 lightMapColor;
		in vec4 overlayColor;
		in vec2 texCoord0;
		
		out vec4 fragColor;
		
		void main() {
		    vec4 color = texture(Sampler0, texCoord0);
		    if (color.a < 0.1) {
		        discard;
		    }
		    color *= vertexColor * ColorModulator;
		    color.rgb = mix(overlayColor.rgb, color.rgb, overlayColor.a);
		    color *= lightMapColor;
		    fragColor = linear_fog(color, vertexDistance, FogStart, FogEnd, FogColor);
		}
		'''
	Changed file "core/rendertype_entity_decal.fsh":
		Total line: 27 (+1, -1)
		        '''
		 1  1   #version 150
		 2  2   
		    3 + #moj_import <minecraft:fog.glsl>
		 3    - #moj_import <fog.glsl>
		 4  4   
		 5  5   uniform sampler2D Sampler0;
		 6  6   
		 7  7   uniform vec4 ColorModulator;
		 8  8   uniform float FogStart;
		        ...
		        '''
	Removed file "core/rendertype_entity_glint.fsh":
		'''
		#version 150
		
		#moj_import <fog.glsl>
		
		uniform sampler2D Sampler0;
		
		uniform vec4 ColorModulator;
		uniform float FogStart;
		uniform float FogEnd;
		uniform float GlintAlpha;
		
		in float vertexDistance;
		in vec2 texCoord0;
		
		out vec4 fragColor;
		
		void main() {
		    vec4 color = texture(Sampler0, texCoord0) * ColorModulator;
		    if (color.a < 0.1) {
		        discard;
		    }
		    float fade = linear_fog_fade(vertexDistance, FogStart, FogEnd) * GlintAlpha;
		    fragColor = vec4(color.rgb * fade, color.a);
		}
		'''
	Removed file "core/rendertype_entity_glint_direct.fsh":
		'''
		#version 150
		
		#moj_import <fog.glsl>
		
		uniform sampler2D Sampler0;
		
		uniform vec4 ColorModulator;
		uniform float FogStart;
		uniform float FogEnd;
		uniform float GlintAlpha;
		
		in float vertexDistance;
		in vec2 texCoord0;
		
		out vec4 fragColor;
		
		void main() {
		    vec4 color = texture(Sampler0, texCoord0) * ColorModulator;
		    if (color.a < 0.1) {
		        discard;
		    }
		    float fade = linear_fog_fade(vertexDistance, FogStart, FogEnd) * GlintAlpha;
		    fragColor = vec4(color.rgb * fade, color.a);
		}
		'''
	Removed file "core/rendertype_entity_no_outline.fsh":
		'''
		#version 150
		
		#moj_import <fog.glsl>
		
		uniform sampler2D Sampler0;
		
		uniform vec4 ColorModulator;
		uniform float FogStart;
		uniform float FogEnd;
		uniform vec4 FogColor;
		
		in float vertexDistance;
		in vec4 vertexColor;
		in vec2 texCoord0;
		
		out vec4 fragColor;
		
		void main() {
		    vec4 color = texture(Sampler0, texCoord0) * vertexColor * ColorModulator;
		    fragColor = linear_fog(color, vertexDistance, FogStart, FogEnd, FogColor);
		}
		'''
	Changed file "core/rendertype_entity_shadow.fsh":
		Total line: 22 (+1, -1)
		        '''
		 1  1   #version 150
		 2  2   
		    3 + #moj_import <minecraft:fog.glsl>
		 3    - #moj_import <fog.glsl>
		 4  4   
		 5  5   uniform sampler2D Sampler0;
		 6  6   
		 7  7   uniform vec4 ColorModulator;
		 8  8   uniform float FogStart;
		        ...
		        '''
	Removed file "core/rendertype_entity_smooth_cutout.fsh":
		'''
		#version 150
		
		#moj_import <fog.glsl>
		
		uniform sampler2D Sampler0;
		
		uniform vec4 ColorModulator;
		uniform float FogStart;
		uniform float FogEnd;
		uniform vec4 FogColor;
		
		in float vertexDistance;
		in vec4 vertexColor;
		in vec4 lightMapColor;
		in vec4 overlayColor;
		in vec2 texCoord0;
		
		out vec4 fragColor;
		
		void main() {
		    vec4 color = texture(Sampler0, texCoord0);
		    if (color.a < 0.1) {
		        discard;
		    }
		    color *= vertexColor * ColorModulator;
		    color.rgb = mix(overlayColor.rgb, color.rgb, overlayColor.a);
		    color *= lightMapColor;
		    fragColor = linear_fog(color, vertexDistance, FogStart, FogEnd, FogColor);
		}
		'''
	Removed file "core/rendertype_entity_solid.fsh":
		'''
		#version 150
		
		#moj_import <fog.glsl>
		
		uniform sampler2D Sampler0;
		
		uniform vec4 ColorModulator;
		uniform float FogStart;
		uniform float FogEnd;
		uniform vec4 FogColor;
		
		in float vertexDistance;
		in vec4 vertexColor;
		in vec4 lightMapColor;
		in vec4 overlayColor;
		in vec2 texCoord0;
		
		out vec4 fragColor;
		
		void main() {
		    vec4 color = texture(Sampler0, texCoord0) * vertexColor * ColorModulator;
		    color.rgb = mix(overlayColor.rgb, color.rgb, overlayColor.a);
		    color *= lightMapColor;
		    fragColor = linear_fog(color, vertexDistance, FogStart, FogEnd, FogColor);
		}
		'''
	Removed file "core/rendertype_entity_translucent.fsh":
		'''
		#version 150
		
		#moj_import <fog.glsl>
		
		uniform sampler2D Sampler0;
		
		uniform vec4 ColorModulator;
		uniform float FogStart;
		uniform float FogEnd;
		uniform vec4 FogColor;
		
		in float vertexDistance;
		in vec4 vertexColor;
		in vec4 lightMapColor;
		in vec4 overlayColor;
		in vec2 texCoord0;
		
		out vec4 fragColor;
		
		void main() {
		    vec4 color = texture(Sampler0, texCoord0);
		    if (color.a < 0.1) {
		        discard;
		    }
		    color *= vertexColor * ColorModulator;
		    color.rgb = mix(overlayColor.rgb, color.rgb, overlayColor.a);
		    color *= lightMapColor;
		    fragColor = linear_fog(color, vertexDistance, FogStart, FogEnd, FogColor);
		}
		'''
	Removed file "core/rendertype_entity_translucent_cull.fsh":
		'''
		#version 150
		
		#moj_import <fog.glsl>
		
		uniform sampler2D Sampler0;
		
		uniform vec4 ColorModulator;
		uniform float FogStart;
		uniform float FogEnd;
		uniform vec4 FogColor;
		
		in float vertexDistance;
		in vec4 vertexColor;
		in vec2 texCoord0;
		in vec2 texCoord1;
		
		out vec4 fragColor;
		
		void main() {
		    vec4 color = texture(Sampler0, texCoord0) * vertexColor * ColorModulator;
		    if (color.a < 0.1) {
		        discard;
		    }
		    fragColor = linear_fog(color, vertexDistance, FogStart, FogEnd, FogColor);
		}
		'''
	Removed file "core/rendertype_entity_translucent_emissive.fsh":
		'''
		#version 150
		
		#moj_import <fog.glsl>
		
		uniform sampler2D Sampler0;
		
		uniform vec4 ColorModulator;
		uniform float FogStart;
		uniform float FogEnd;
		
		in float vertexDistance;
		in vec4 vertexColor;
		in vec4 overlayColor;
		in vec2 texCoord0;
		
		out vec4 fragColor;
		
		void main() {
		    vec4 color = texture(Sampler0, texCoord0);
		    if (color.a < 0.1) {
		        discard;
		    }
		    color *= vertexColor * ColorModulator;
		    color.rgb = mix(overlayColor.rgb, color.rgb, overlayColor.a);
		    fragColor = color * linear_fog_fade(vertexDistance, FogStart, FogEnd);
		}
		'''
	Removed file "core/rendertype_eyes.fsh":
		'''
		#version 150
		
		#moj_import <fog.glsl>
		
		uniform sampler2D Sampler0;
		
		uniform vec4 ColorModulator;
		uniform float FogStart;
		uniform float FogEnd;
		
		in float vertexDistance;
		in vec4 vertexColor;
		in vec2 texCoord0;
		
		out vec4 fragColor;
		
		void main() {
		    vec4 color = texture(Sampler0, texCoord0) * vertexColor;
		    fragColor = color * ColorModulator * linear_fog_fade(vertexDistance, FogStart, FogEnd);
		}
		'''
	Moved file from "core/rendertype_glint.fsh" to "core/glint.fsh".
	Changed file "core/glint.fsh":
		Total line: 24 (+1, -1)
		        '''
		 1  1   #version 150
		 2  2   
		    3 + #moj_import <minecraft:fog.glsl>
		 3    - #moj_import <fog.glsl>
		 4  4   
		 5  5   uniform sampler2D Sampler0;
		 6  6   
		 7  7   uniform vec4 ColorModulator;
		 8  8   uniform float FogStart;
		        ...
		        '''
	Removed file "core/rendertype_glint_translucent.fsh":
		'''
		#version 150
		
		#moj_import <fog.glsl>
		
		uniform sampler2D Sampler0;
		
		uniform vec4 ColorModulator;
		uniform float FogStart;
		uniform float FogEnd;
		uniform float GlintAlpha;
		
		in float vertexDistance;
		in vec2 texCoord0;
		
		out vec4 fragColor;
		
		void main() {
		    vec4 color = texture(Sampler0, texCoord0) * ColorModulator;
		    if (color.a < 0.1) {
		        discard;
		    }
		    float fade = linear_fog_fade(vertexDistance, FogStart, FogEnd) * GlintAlpha;
		    fragColor = vec4(color.rgb * fade, color.a);
		}
		'''
	Moved file from "core/rendertype_gui.fsh" to "core/gui.fsh".
	Removed file "core/rendertype_gui_ghost_recipe_overlay.fsh":
		'''
		#version 150
		
		in vec4 vertexColor;
		
		uniform vec4 ColorModulator;
		
		out vec4 fragColor;
		
		void main() {
		    vec4 color = vertexColor;
		    if (color.a == 0.0) {
		        discard;
		    }
		    fragColor = color * ColorModulator;
		}
		'''
	Removed file "core/rendertype_gui_overlay.fsh":
		'''
		#version 150
		
		in vec4 vertexColor;
		
		uniform vec4 ColorModulator;
		
		out vec4 fragColor;
		
		void main() {
		    vec4 color = vertexColor;
		    if (color.a == 0.0) {
		        discard;
		    }
		    fragColor = color * ColorModulator;
		}
		'''
	Removed file "core/rendertype_gui_text_highlight.fsh":
		'''
		#version 150
		
		in vec4 vertexColor;
		
		uniform vec4 ColorModulator;
		
		out vec4 fragColor;
		
		void main() {
		    vec4 color = vertexColor;
		    if (color.a == 0.0) {
		        discard;
		    }
		    fragColor = color * ColorModulator;
		}
		'''
	Changed file "core/rendertype_item_entity_translucent_cull.fsh":
		Total line: 25 (+1, -1)
		        '''
		 1  1   #version 150
		 2  2   
		    3 + #moj_import <minecraft:fog.glsl>
		 3    - #moj_import <fog.glsl>
		 4  4   
		 5  5   uniform sampler2D Sampler0;
		 6  6   
		 7  7   uniform vec4 ColorModulator;
		 8  8   uniform float FogStart;
		        ...
		        '''
	Changed file "core/rendertype_leash.fsh":
		Total line: 16 (+1, -1)
		        '''
		 1  1   #version 150
		 2  2   
		    3 + #moj_import <minecraft:fog.glsl>
		 3    - #moj_import <fog.glsl>
		 4  4   
		 5  5   uniform float FogStart;
		 6  6   uniform float FogEnd;
		 7  7   uniform vec4 FogColor;
		 8  8   
		        ...
		        '''
	Changed file "core/rendertype_lightning.fsh":
		Total line: 16 (+1, -1)
		        '''
		 1  1   #version 150
		 2  2   
		    3 + #moj_import <minecraft:fog.glsl>
		 3    - #moj_import <fog.glsl>
		 4  4   
		 5  5   uniform vec4 ColorModulator;
		 6  6   uniform float FogStart;
		 7  7   uniform float FogEnd;
		 8  8   
		        ...
		        '''
	Changed file "core/rendertype_lines.fsh":
		Total line: 18 (+1, -1)
		        '''
		 1  1   #version 150
		 2  2   
		    3 + #moj_import <minecraft:fog.glsl>
		 3    - #moj_import <fog.glsl>
		 4  4   
		 5  5   uniform vec4 ColorModulator;
		 6  6   uniform float FogStart;
		 7  7   uniform float FogEnd;
		 8  8   uniform vec4 FogColor;
		        ...
		        '''
	Removed file "core/rendertype_solid.fsh":
		'''
		#version 150
		
		#moj_import <fog.glsl>
		
		uniform sampler2D Sampler0;
		
		uniform vec4 ColorModulator;
		uniform float FogStart;
		uniform float FogEnd;
		uniform vec4 FogColor;
		
		in float vertexDistance;
		in vec4 vertexColor;
		in vec2 texCoord0;
		
		out vec4 fragColor;
		
		void main() {
		    vec4 color = texture(Sampler0, texCoord0) * vertexColor * ColorModulator;
		    fragColor = linear_fog(color, vertexDistance, FogStart, FogEnd, FogColor);
		}
		'''
	Changed file "core/rendertype_text.fsh":
		Total line: 24 (+1, -1)
		        '''
		 1  1   #version 150
		 2  2   
		    3 + #moj_import <minecraft:fog.glsl>
		 3    - #moj_import <fog.glsl>
		 4  4   
		 5  5   uniform sampler2D Sampler0;
		 6  6   
		 7  7   uniform vec4 ColorModulator;
		 8  8   uniform float FogStart;
		        ...
		        '''
	Changed file "core/rendertype_text_background.fsh":
		Total line: 24 (+1, -1)
		        '''
		 1  1   #version 150
		 2  2   
		    3 + #moj_import <minecraft:fog.glsl>
		 3    - #moj_import <fog.glsl>
		 4  4   
		 5  5   uniform sampler2D Sampler0;
		 6  6   
		 7  7   uniform vec4 ColorModulator;
		 8  8   uniform float FogStart;
		        ...
		        '''
	Changed file "core/rendertype_text_intensity.fsh":
		Total line: 24 (+1, -1)
		        '''
		 1  1   #version 150
		 2  2   
		    3 + #moj_import <minecraft:fog.glsl>
		 3    - #moj_import <fog.glsl>
		 4  4   
		 5  5   uniform sampler2D Sampler0;
		 6  6   
		 7  7   uniform vec4 ColorModulator;
		 8  8   uniform float FogStart;
		        ...
		        '''
	Removed file "core/rendertype_translucent.fsh":
		'''
		#version 150
		
		#moj_import <fog.glsl>
		
		uniform sampler2D Sampler0;
		
		uniform vec4 ColorModulator;
		uniform float FogStart;
		uniform float FogEnd;
		uniform vec4 FogColor;
		
		in float vertexDistance;
		in vec4 vertexColor;
		in vec2 texCoord0;
		
		out vec4 fragColor;
		
		void main() {
		    vec4 color = texture(Sampler0, texCoord0) * vertexColor * ColorModulator;
		    fragColor = linear_fog(color, vertexDistance, FogStart, FogEnd, FogColor);
		}
		'''
	Moved file from "core/rendertype_tripwire.fsh" to "core/terrain.fsh".
	Changed file "core/terrain.fsh":
		Total line: 26 (+4, -2)
		        '''
		 1  1   #version 150
		 2  2   
		    3 + #moj_import <minecraft:fog.glsl>
		 3    - #moj_import <fog.glsl>
		 4  4   
		 5  5   uniform sampler2D Sampler0;
		 6  6   
		 7  7   uniform vec4 ColorModulator;
		 8  8   uniform float FogStart;
		        ...
		15 15   
		16 16   out vec4 fragColor;
		17 17   
		18 18   void main() {
		19 19       vec4 color = texture(Sampler0, texCoord0) * vertexColor * ColorModulator;
		   20 + #ifdef ALPHA_CUTOUT
		   21 +     if (color.a < ALPHA_CUTOUT) {
		20    -     if (color.a < 0.1) {
		21 22           discard;
		22 23       }
		   24 + #endif
		23 25       fragColor = linear_fog(color, vertexDistance, FogStart, FogEnd, FogColor);
		24 26   }
		        '''
	Moved file from "program/bits.fsh" to "post/bits.fsh".
	Moved file from "program/blit.fsh" to "post/blit.fsh".
	Moved file from "program/box_blur.fsh" to "post/box_blur.fsh".
	Moved file from "program/color_convolve.fsh" to "post/color_convolve.fsh".
	Moved file from "program/entity_outline_box_blur.fsh" to "post/entity_outline_box_blur.fsh".
	Moved file from "program/entity_sobel.fsh" to "post/entity_sobel.fsh".
	Moved file from "program/invert.fsh" to "post/invert.fsh".
	Moved file from "program/spiderclip.fsh" to "post/spiderclip.fsh".
	Moved file from "program/transparency.fsh" to "post/transparency.fsh".