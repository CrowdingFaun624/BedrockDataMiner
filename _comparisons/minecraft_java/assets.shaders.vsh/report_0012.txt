Difference of "text_packs" between "1.18.1-pre1" (pre-release of "1.18.1") and "1.18.1-rc1" (release candidate of "1.18.1").

Changed resource pack "minecraft":
	Changed file "core/rendertype_entity_cutout.vsh":
		Total line: 39 (+2, -1)
		        '''
		        ...
		13 13   uniform sampler2D Sampler1;
		14 14   uniform sampler2D Sampler2;
		15 15   
		16 16   uniform mat4 ModelViewMat;
		17 17   uniform mat4 ProjMat;
		   18 + uniform mat3 IViewRotMat;
		18 19   
		19 20   uniform vec3 Light0_Direction;
		20 21   uniform vec3 Light1_Direction;
		21 22   
		22 23   out float vertexDistance;
		        ...
		27 28   out vec4 normal;
		28 29   
		29 30   void main() {
		30 31       gl_Position = ProjMat * ModelViewMat * vec4(Position, 1.0);
		31 32   
		   33 +     vertexDistance = cylindrical_distance(ModelViewMat, IViewRotMat * Position);
		32    -     vertexDistance = cylindrical_distance(ModelViewMat, Position);
		33 34       vertexColor = minecraft_mix_light(Light0_Direction, Light1_Direction, Normal, Color);
		34 35       lightMapColor = texelFetch(Sampler2, UV2 / 16, 0);
		35 36       overlayColor = texelFetch(Sampler1, UV1, 0);
		36 37       texCoord0 = UV0;
		37 38       normal = ProjMat * ModelViewMat * vec4(Normal, 0.0);
		        ...
		        '''
	Changed file "core/rendertype_entity_cutout_no_cull.vsh":
		Total line: 39 (+2, -1)
		        '''
		        ...
		13 13   uniform sampler2D Sampler1;
		14 14   uniform sampler2D Sampler2;
		15 15   
		16 16   uniform mat4 ModelViewMat;
		17 17   uniform mat4 ProjMat;
		   18 + uniform mat3 IViewRotMat;
		18 19   
		19 20   uniform vec3 Light0_Direction;
		20 21   uniform vec3 Light1_Direction;
		21 22   
		22 23   out float vertexDistance;
		        ...
		27 28   out vec4 normal;
		28 29   
		29 30   void main() {
		30 31       gl_Position = ProjMat * ModelViewMat * vec4(Position, 1.0);
		31 32   
		   33 +     vertexDistance = cylindrical_distance(ModelViewMat, IViewRotMat * Position);
		32    -     vertexDistance = cylindrical_distance(ModelViewMat, Position);
		33 34       vertexColor = minecraft_mix_light(Light0_Direction, Light1_Direction, Normal, Color);
		34 35       lightMapColor = texelFetch(Sampler2, UV2 / 16, 0);
		35 36       overlayColor = texelFetch(Sampler1, UV1, 0);
		36 37       texCoord0 = UV0;
		37 38       normal = ProjMat * ModelViewMat * vec4(Normal, 0.0);
		        ...
		        '''
	Changed file "core/rendertype_entity_cutout_no_cull_z_offset.vsh":
		Total line: 39 (+2, -1)
		        '''
		        ...
		13 13   uniform sampler2D Sampler1;
		14 14   uniform sampler2D Sampler2;
		15 15   
		16 16   uniform mat4 ModelViewMat;
		17 17   uniform mat4 ProjMat;
		   18 + uniform mat3 IViewRotMat;
		18 19   
		19 20   uniform vec3 Light0_Direction;
		20 21   uniform vec3 Light1_Direction;
		21 22   
		22 23   out float vertexDistance;
		        ...
		27 28   out vec4 normal;
		28 29   
		29 30   void main() {
		30 31       gl_Position = ProjMat * ModelViewMat * vec4(Position, 1.0);
		31 32   
		   33 +     vertexDistance = cylindrical_distance(ModelViewMat, IViewRotMat * Position);
		32    -     vertexDistance = cylindrical_distance(ModelViewMat, Position);
		33 34       vertexColor = minecraft_mix_light(Light0_Direction, Light1_Direction, Normal, Color);
		34 35       lightMapColor = texelFetch(Sampler2, UV2 / 16, 0);
		35 36       overlayColor = texelFetch(Sampler1, UV1, 0);
		36 37       texCoord0 = UV0;
		37 38       normal = ProjMat * ModelViewMat * vec4(Normal, 0.0);
		        ...
		        '''
	Changed file "core/rendertype_entity_decal.vsh":
		Total line: 37 (+2, -1)
		        '''
		        ...
		13 13   uniform sampler2D Sampler1;
		14 14   uniform sampler2D Sampler2;
		15 15   
		16 16   uniform mat4 ModelViewMat;
		17 17   uniform mat4 ProjMat;
		   18 + uniform mat3 IViewRotMat;
		18 19   
		19 20   uniform vec3 Light0_Direction;
		20 21   uniform vec3 Light1_Direction;
		21 22   
		22 23   out float vertexDistance;
		        ...
		26 27   out vec4 normal;
		27 28   
		28 29   void main() {
		29 30       gl_Position = ProjMat * ModelViewMat * vec4(Position, 1.0);
		30 31   
		   32 +     vertexDistance = cylindrical_distance(ModelViewMat, IViewRotMat * Position);
		31    -     vertexDistance = cylindrical_distance(ModelViewMat, Position);
		32 33       vertexColor = minecraft_mix_light(Light0_Direction, Light1_Direction, Normal, Color) * texelFetch(Sampler2, UV2 / 16, 0);
		33 34       overlayColor = texelFetch(Sampler1, UV1, 0);
		34 35       texCoord0 = UV0;
		35 36       normal = ProjMat * ModelViewMat * vec4(Normal, 0.0);
		36 37   }
		        '''
	Changed file "core/rendertype_entity_glint.vsh":
		Total line: 21 (+2, -1)
		        '''
		        ...
		 5  5   in vec3 Position;
		 6  6   in vec2 UV0;
		 7  7   
		 8  8   uniform mat4 ModelViewMat;
		 9  9   uniform mat4 ProjMat;
		   10 + uniform mat3 IViewRotMat;
		10 11   uniform mat4 TextureMat;
		11 12   
		12 13   out float vertexDistance;
		13 14   out vec2 texCoord0;
		14 15   
		15 16   void main() {
		16 17       gl_Position = ProjMat * ModelViewMat * vec4(Position, 1.0);
		17 18   
		   19 +     vertexDistance = cylindrical_distance(ModelViewMat, IViewRotMat * Position);
		18    -     vertexDistance = cylindrical_distance(ModelViewMat, Position);
		19 20       texCoord0 = (TextureMat * vec4(UV0, 0.0, 1.0)).xy;
		20 21   }
		        '''
	Changed file "core/rendertype_entity_glint_direct.vsh":
		Total line: 21 (+2, -1)
		        '''
		        ...
		 5  5   in vec3 Position;
		 6  6   in vec2 UV0;
		 7  7   
		 8  8   uniform mat4 ModelViewMat;
		 9  9   uniform mat4 ProjMat;
		   10 + uniform mat3 IViewRotMat;
		10 11   uniform mat4 TextureMat;
		11 12   
		12 13   out float vertexDistance;
		13 14   out vec2 texCoord0;
		14 15   
		15 16   void main() {
		16 17       gl_Position = ProjMat * ModelViewMat * vec4(Position, 1.0);
		17 18   
		   19 +     vertexDistance = cylindrical_distance(ModelViewMat, IViewRotMat * Position);
		18    -     vertexDistance = cylindrical_distance(ModelViewMat, Position);
		19 20       texCoord0 = (TextureMat * vec4(UV0, 0.0, 1.0)).xy;
		20 21   }
		        '''
	Changed file "core/rendertype_entity_no_outline.vsh":
		Total line: 33 (+2, -1)
		        '''
		        ...
		11 11   
		12 12   uniform sampler2D Sampler2;
		13 13   
		14 14   uniform mat4 ModelViewMat;
		15 15   uniform mat4 ProjMat;
		   16 + uniform mat3 IViewRotMat;
		16 17   
		17 18   uniform vec3 Light0_Direction;
		18 19   uniform vec3 Light1_Direction;
		19 20   
		20 21   out float vertexDistance;
		        ...
		23 24   out vec4 normal;
		24 25   
		25 26   void main() {
		26 27       gl_Position = ProjMat * ModelViewMat * vec4(Position, 1.0);
		27 28   
		   29 +     vertexDistance = cylindrical_distance(ModelViewMat, IViewRotMat * Position);
		28    -     vertexDistance = cylindrical_distance(ModelViewMat, Position);
		29 30       vertexColor = minecraft_mix_light(Light0_Direction, Light1_Direction, Normal, Color) * texelFetch(Sampler2, UV2 / 16, 0);
		30 31       texCoord0 = UV0;
		31 32       normal = ProjMat * ModelViewMat * vec4(Normal, 0.0);
		32 33   }
		        '''
	Changed file "core/rendertype_entity_shadow.vsh":
		Total line: 23 (+2, -1)
		        '''
		        ...
		 6  6   in vec4 Color;
		 7  7   in vec2 UV0;
		 8  8   
		 9  9   uniform mat4 ModelViewMat;
		10 10   uniform mat4 ProjMat;
		   11 + uniform mat3 IViewRotMat;
		11 12   
		12 13   out float vertexDistance;
		13 14   out vec4 vertexColor;
		14 15   out vec2 texCoord0;
		15 16   
		16 17   void main() {
		17 18       gl_Position = ProjMat * ModelViewMat * vec4(Position, 1.0);
		18 19   
		   20 +     vertexDistance = cylindrical_distance(ModelViewMat, IViewRotMat * Position);
		19    -     vertexDistance = cylindrical_distance(ModelViewMat, Position);
		20 21       vertexColor = Color;
		21 22       texCoord0 = UV0;
		22 23   }
		        '''
	Changed file "core/rendertype_entity_smooth_cutout.vsh":
		Total line: 39 (+2, -1)
		        '''
		        ...
		13 13   uniform sampler2D Sampler1;
		14 14   uniform sampler2D Sampler2;
		15 15   
		16 16   uniform mat4 ModelViewMat;
		17 17   uniform mat4 ProjMat;
		   18 + uniform mat3 IViewRotMat;
		18 19   
		19 20   uniform vec3 Light0_Direction;
		20 21   uniform vec3 Light1_Direction;
		21 22   
		22 23   out float vertexDistance;
		        ...
		27 28   out vec4 normal;
		28 29   
		29 30   void main() {
		30 31       gl_Position = ProjMat * ModelViewMat * vec4(Position, 1.0);
		31 32   
		   33 +     vertexDistance = cylindrical_distance(ModelViewMat, IViewRotMat * Position);
		32    -     vertexDistance = cylindrical_distance(ModelViewMat, Position);
		33 34       vertexColor = minecraft_mix_light(Light0_Direction, Light1_Direction, Normal, Color);
		34 35       lightMapColor = texelFetch(Sampler2, UV2 / 16, 0);
		35 36       overlayColor = texelFetch(Sampler1, UV1, 0);
		36 37       texCoord0 = UV0;
		37 38       normal = ProjMat * ModelViewMat * vec4(Normal, 0.0);
		        ...
		        '''
	Changed file "core/rendertype_entity_solid.vsh":
		Total line: 39 (+2, -1)
		        '''
		        ...
		13 13   uniform sampler2D Sampler1;
		14 14   uniform sampler2D Sampler2;
		15 15   
		16 16   uniform mat4 ModelViewMat;
		17 17   uniform mat4 ProjMat;
		   18 + uniform mat3 IViewRotMat;
		18 19   
		19 20   uniform vec3 Light0_Direction;
		20 21   uniform vec3 Light1_Direction;
		21 22   
		22 23   out float vertexDistance;
		        ...
		27 28   out vec4 normal;
		28 29   
		29 30   void main() {
		30 31       gl_Position = ProjMat * ModelViewMat * vec4(Position, 1.0);
		31 32   
		   33 +     vertexDistance = cylindrical_distance(ModelViewMat, IViewRotMat * Position);
		32    -     vertexDistance = cylindrical_distance(ModelViewMat, Position);
		33 34       vertexColor = minecraft_mix_light(Light0_Direction, Light1_Direction, Normal, Color);
		34 35       lightMapColor = texelFetch(Sampler2, UV2 / 16, 0);
		35 36       overlayColor = texelFetch(Sampler1, UV1, 0);
		36 37       texCoord0 = UV0;
		37 38       normal = ProjMat * ModelViewMat * vec4(Normal, 0.0);
		        ...
		        '''
	Changed file "core/rendertype_entity_translucent.vsh":
		Total line: 39 (+2, -1)
		        '''
		        ...
		13 13   uniform sampler2D Sampler1;
		14 14   uniform sampler2D Sampler2;
		15 15   
		16 16   uniform mat4 ModelViewMat;
		17 17   uniform mat4 ProjMat;
		   18 + uniform mat3 IViewRotMat;
		18 19   
		19 20   uniform vec3 Light0_Direction;
		20 21   uniform vec3 Light1_Direction;
		21 22   
		22 23   out float vertexDistance;
		        ...
		27 28   out vec4 normal;
		28 29   
		29 30   void main() {
		30 31       gl_Position = ProjMat * ModelViewMat * vec4(Position, 1.0);
		31 32   
		   33 +     vertexDistance = cylindrical_distance(ModelViewMat, IViewRotMat * Position);
		32    -     vertexDistance = cylindrical_distance(ModelViewMat, Position);
		33 34       vertexColor = minecraft_mix_light(Light0_Direction, Light1_Direction, Normal, Color);
		34 35       lightMapColor = texelFetch(Sampler2, UV2 / 16, 0);
		35 36       overlayColor = texelFetch(Sampler1, UV1, 0);
		36 37       texCoord0 = UV0;
		37 38       normal = ProjMat * ModelViewMat * vec4(Normal, 0.0);
		        ...
		        '''
	Changed file "core/rendertype_entity_translucent_cull.vsh":
		Total line: 38 (+2, -1)
		        '''
		        ...
		12 12   
		13 13   uniform sampler2D Sampler2;
		14 14   
		15 15   uniform mat4 ModelViewMat;
		16 16   uniform mat4 ProjMat;
		   17 + uniform mat3 IViewRotMat;
		17 18   
		18 19   uniform vec3 Light0_Direction;
		19 20   uniform vec3 Light1_Direction;
		20 21   
		21 22   out float vertexDistance;
		        ...
		26 27   out vec4 normal;
		27 28   
		28 29   void main() {
		29 30       gl_Position = ProjMat * ModelViewMat * vec4(Position, 1.0);
		30 31   
		   32 +     vertexDistance = cylindrical_distance(ModelViewMat, IViewRotMat * Position);
		31    -     vertexDistance = cylindrical_distance(ModelViewMat, Position);
		32 33       vertexColor = minecraft_mix_light(Light0_Direction, Light1_Direction, Normal, Color) * texelFetch(Sampler2, UV2 / 16, 0);
		33 34       texCoord0 = UV0;
		34 35       texCoord1 = UV1;
		35 36       texCoord2 = UV2;
		36 37       normal = ProjMat * ModelViewMat * vec4(Normal, 0.0);
		        ...
		        '''
	Changed file "core/rendertype_eyes.vsh":
		Total line: 23 (+2, -1)
		        '''
		        ...
		 6  6   in vec4 Color;
		 7  7   in vec2 UV0;
		 8  8   
		 9  9   uniform mat4 ModelViewMat;
		10 10   uniform mat4 ProjMat;
		   11 + uniform mat3 IViewRotMat;
		11 12   
		12 13   out float vertexDistance;
		13 14   out vec4 vertexColor;
		14 15   out vec2 texCoord0;
		15 16   
		16 17   void main() {
		17 18       gl_Position = ProjMat * ModelViewMat * vec4(Position, 1.0);
		18 19   
		   20 +     vertexDistance = cylindrical_distance(ModelViewMat, IViewRotMat * Position);
		19    -     vertexDistance = cylindrical_distance(ModelViewMat, Position);
		20 21       vertexColor = Color;
		21 22       texCoord0 = UV0;
		22 23   }
		        '''
	Changed file "core/rendertype_glint.vsh":
		Total line: 21 (+2, -1)
		        '''
		        ...
		 5  5   in vec3 Position;
		 6  6   in vec2 UV0;
		 7  7   
		 8  8   uniform mat4 ModelViewMat;
		 9  9   uniform mat4 ProjMat;
		   10 + uniform mat3 IViewRotMat;
		10 11   uniform mat4 TextureMat;
		11 12   
		12 13   out float vertexDistance;
		13 14   out vec2 texCoord0;
		14 15   
		15 16   void main() {
		16 17       gl_Position = ProjMat * ModelViewMat * vec4(Position, 1.0);
		17 18   
		   19 +     vertexDistance = cylindrical_distance(ModelViewMat, IViewRotMat * Position);
		18    -     vertexDistance = cylindrical_distance(ModelViewMat, Position);
		19 20       texCoord0 = (TextureMat * vec4(UV0, 0.0, 1.0)).xy;
		20 21   }
		        '''
	Changed file "core/rendertype_glint_direct.vsh":
		Total line: 21 (+2, -1)
		        '''
		        ...
		 5  5   in vec3 Position;
		 6  6   in vec2 UV0;
		 7  7   
		 8  8   uniform mat4 ModelViewMat;
		 9  9   uniform mat4 ProjMat;
		   10 + uniform mat3 IViewRotMat;
		10 11   uniform mat4 TextureMat;
		11 12   
		12 13   out float vertexDistance;
		13 14   out vec2 texCoord0;
		14 15   
		15 16   void main() {
		16 17       gl_Position = ProjMat * ModelViewMat * vec4(Position, 1.0);
		17 18   
		   19 +     vertexDistance = cylindrical_distance(ModelViewMat, IViewRotMat * Position);
		18    -     vertexDistance = cylindrical_distance(ModelViewMat, Position);
		19 20       texCoord0 = (TextureMat * vec4(UV0, 0.0, 1.0)).xy;
		20 21   }
		        '''
	Changed file "core/rendertype_glint_translucent.vsh":
		Total line: 21 (+2, -1)
		        '''
		        ...
		 5  5   in vec3 Position;
		 6  6   in vec2 UV0;
		 7  7   
		 8  8   uniform mat4 ModelViewMat;
		 9  9   uniform mat4 ProjMat;
		   10 + uniform mat3 IViewRotMat;
		10 11   uniform mat4 TextureMat;
		11 12   
		12 13   out float vertexDistance;
		13 14   out vec2 texCoord0;
		14 15   
		15 16   void main() {
		16 17       gl_Position = ProjMat * ModelViewMat * vec4(Position, 1.0);
		17 18   
		   19 +     vertexDistance = cylindrical_distance(ModelViewMat, IViewRotMat * Position);
		18    -     vertexDistance = cylindrical_distance(ModelViewMat, Position);
		19 20       texCoord0 = (TextureMat * vec4(UV0, 0.0, 1.0)).xy;
		20 21   }
		        '''
	Changed file "core/rendertype_item_entity_translucent_cull.vsh":
		Total line: 38 (+2, -1)
		        '''
		        ...
		12 12   
		13 13   uniform sampler2D Sampler2;
		14 14   
		15 15   uniform mat4 ModelViewMat;
		16 16   uniform mat4 ProjMat;
		   17 + uniform mat3 IViewRotMat;
		17 18   
		18 19   uniform vec3 Light0_Direction;
		19 20   uniform vec3 Light1_Direction;
		20 21   
		21 22   out float vertexDistance;
		        ...
		26 27   out vec4 normal;
		27 28   
		28 29   void main() {
		29 30       gl_Position = ProjMat * ModelViewMat * vec4(Position, 1.0);
		30 31   
		   32 +     vertexDistance = cylindrical_distance(ModelViewMat, IViewRotMat * Position);
		31    -     vertexDistance = cylindrical_distance(ModelViewMat, Position);
		32 33       vertexColor = minecraft_mix_light(Light0_Direction, Light1_Direction, Normal, Color) * texelFetch(Sampler2, UV2 / 16, 0);
		33 34       texCoord0 = UV0;
		34 35       texCoord1 = UV1;
		35 36       texCoord2 = UV2;
		36 37       normal = ProjMat * ModelViewMat * vec4(Normal, 0.0);
		        ...
		        '''
	Changed file "core/rendertype_leash.vsh":
		Total line: 24 (+2, -1)
		        '''
		        ...
		 8  8   
		 9  9   uniform sampler2D Sampler2;
		10 10   
		11 11   uniform mat4 ModelViewMat;
		12 12   uniform mat4 ProjMat;
		   13 + uniform mat3 IViewRotMat;
		13 14   uniform vec4 ColorModulator;
		14 15   
		15 16   out float vertexDistance;
		16 17   flat out vec4 vertexColor;
		17 18   
		18 19   void main() {
		19 20       gl_Position = ProjMat * ModelViewMat * vec4(Position, 1.0);
		20 21   
		   22 +     vertexDistance = cylindrical_distance(ModelViewMat, IViewRotMat * Position);
		21    -     vertexDistance = cylindrical_distance(ModelViewMat, Position);
		22 23       vertexColor = Color * ColorModulator * texelFetch(Sampler2, UV2 / 16, 0);
		23 24   }
		        '''
	Changed file "core/rendertype_lightning.vsh":
		Total line: 20 (+2, -1)
		        '''
		        ...
		 5  5   in vec3 Position;
		 6  6   in vec4 Color;
		 7  7   
		 8  8   uniform mat4 ModelViewMat;
		 9  9   uniform mat4 ProjMat;
		   10 + uniform mat3 IViewRotMat;
		10 11   
		11 12   out float vertexDistance;
		12 13   out vec4 vertexColor;
		13 14   
		14 15   void main() {
		15 16       gl_Position = ProjMat * ModelViewMat * vec4(Position, 1.0);
		16 17   
		   18 +     vertexDistance = cylindrical_distance(ModelViewMat, IViewRotMat * Position);
		17    -     vertexDistance = cylindrical_distance(ModelViewMat, Position);
		18 19       vertexColor = Color;
		19 20   }
		        '''
	Changed file "core/rendertype_text.vsh":
		Total line: 26 (+2, -1)
		        '''
		        ...
		 9  9   
		10 10   uniform sampler2D Sampler2;
		11 11   
		12 12   uniform mat4 ModelViewMat;
		13 13   uniform mat4 ProjMat;
		   14 + uniform mat3 IViewRotMat;
		14 15   
		15 16   out float vertexDistance;
		16 17   out vec4 vertexColor;
		17 18   out vec2 texCoord0;
		18 19   
		19 20   void main() {
		20 21       gl_Position = ProjMat * ModelViewMat * vec4(Position, 1.0);
		21 22   
		   23 +     vertexDistance = cylindrical_distance(ModelViewMat, IViewRotMat * Position);
		22    -     vertexDistance = cylindrical_distance(ModelViewMat, Position);
		23 24       vertexColor = Color * texelFetch(Sampler2, UV2 / 16, 0);
		24 25       texCoord0 = UV0;
		25 26   }
		        '''
	Changed file "core/rendertype_text_intensity.vsh":
		Total line: 26 (+2, -1)
		        '''
		        ...
		 9  9   
		10 10   uniform sampler2D Sampler2;
		11 11   
		12 12   uniform mat4 ModelViewMat;
		13 13   uniform mat4 ProjMat;
		   14 + uniform mat3 IViewRotMat;
		14 15   
		15 16   out float vertexDistance;
		16 17   out vec4 vertexColor;
		17 18   out vec2 texCoord0;
		18 19   
		19 20   void main() {
		20 21       gl_Position = ProjMat * ModelViewMat * vec4(Position, 1.0);
		21 22   
		   23 +     vertexDistance = cylindrical_distance(ModelViewMat, IViewRotMat * Position);
		22    -     vertexDistance = cylindrical_distance(ModelViewMat, Position);
		23 24       vertexColor = Color * texelFetch(Sampler2, UV2 / 16, 0);
		24 25       texCoord0 = UV0;
		25 26   }
		        '''