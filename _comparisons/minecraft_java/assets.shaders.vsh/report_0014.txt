Difference of "text_packs" between "1.18.2" and "1.19-exp1" (experimental snapshot of "1.19").

Changed resource pack "minecraft":
	Total file: 66 (+1, -0)
	Changed file "core/particle.vsh":
		Total line: 25 (+1, -2)
		        '''
		        ...
		 9  9   
		10 10   uniform sampler2D Sampler2;
		11 11   
		12 12   uniform mat4 ModelViewMat;
		13 13   uniform mat4 ProjMat;
		14    - uniform int FogShape;
		15 14   
		16 15   out float vertexDistance;
		17 16   out vec2 texCoord0;
		18 17   out vec4 vertexColor;
		19 18   
		20 19   void main() {
		21 20       gl_Position = ProjMat * ModelViewMat * vec4(Position, 1.0);
		22 21   
		   22 +     vertexDistance = cylindrical_distance(ModelViewMat, Position);
		23    -     vertexDistance = fog_distance(ModelViewMat, Position, FogShape);
		24 23       texCoord0 = UV0;
		25 24       vertexColor = Color * texelFetch(Sampler2, UV2 / 16, 0);
		26 25   }
		        '''
	Changed file "core/position.vsh":
		Total line: 16 (+2, -3)
		        '''
		        ...
		 2  2   
		 3  3   #moj_import <fog.glsl>
		 4  4   
		 5  5   in vec3 Position;
		 6  6   
		    7 + uniform mat4 ModelViewMat;
		 7  8   uniform mat4 ProjMat;
		 8    - uniform mat4 ModelViewMat;
		 9    - uniform int FogShape;
		10  9   
		11 10   out float vertexDistance;
		12 11   
		13 12   void main() {
		14 13       gl_Position = ProjMat * ModelViewMat * vec4(Position, 1.0);
		15 14   
		   15 +     vertexDistance = cylindrical_distance(ModelViewMat, Position);
		16    -     vertexDistance = fog_distance(ModelViewMat, Position, FogShape);
		17 16   }
		        '''
	Changed file "core/position_color_normal.vsh":
		Total line: 22 (+1, -2)
		        '''
		        ...
		 6  6   in vec4 Color;
		 7  7   in vec3 Normal;
		 8  8   
		 9  9   uniform mat4 ModelViewMat;
		10 10   uniform mat4 ModelViewProjMat;
		11    - uniform int FogShape;
		12 11   
		13 12   out float vertexDistance;
		14 13   out vec4 vertexColor;
		15 14   out vec4 normal;
		16 15   
		17 16   void main() {
		18 17       gl_Position = ModelViewProjMat * vec4(Position, 1.0);
		19 18   
		   19 +     vertexDistance = cylindrical_distance(ModelViewMat, Position);
		20    -     vertexDistance = fog_distance(ModelViewMat, Position, FogShape);
		21 20       vertexColor = Color;
		22 21       normal = ModelViewProjMat * vec4(Normal, 0.0);
		23 22   }
		        '''
	Changed file "core/position_tex_color_normal.vsh":
		Total line: 25 (+1, -2)
		        '''
		        ...
		 7  7   in vec4 Color;
		 8  8   in vec3 Normal;
		 9  9   
		10 10   uniform mat4 ModelViewMat;
		11 11   uniform mat4 ProjMat;
		12    - uniform int FogShape;
		13 12   
		14 13   out vec2 texCoord0;
		15 14   out float vertexDistance;
		16 15   out vec4 vertexColor;
		17 16   out vec4 normal;
		18 17   
		19 18   void main() {
		20 19       gl_Position = ProjMat * ModelViewMat * vec4(Position, 1.0);
		21 20   
		22 21       texCoord0 = UV0;
		   22 +     vertexDistance = cylindrical_distance(ModelViewMat, Position);
		23    -     vertexDistance = fog_distance(ModelViewMat, Position, FogShape);
		24 23       vertexColor = Color;
		25 24       normal = ProjMat * ModelViewMat * vec4(Normal, 0.0);
		26 25   }
		        '''
	Changed file "core/rendertype_armor_cutout_no_cull.vsh":
		Total line: 35 (+1, -2)
		        '''
		        ...
		12 12   
		13 13   uniform sampler2D Sampler2;
		14 14   
		15 15   uniform mat4 ModelViewMat;
		16 16   uniform mat4 ProjMat;
		17    - uniform int FogShape;
		18 17   
		19 18   uniform vec3 Light0_Direction;
		20 19   uniform vec3 Light1_Direction;
		21 20   
		22 21   out float vertexDistance;
		        ...
		26 25   out vec4 normal;
		27 26   
		28 27   void main() {
		29 28       gl_Position = ProjMat * ModelViewMat * vec4(Position, 1.0);
		30 29   
		   30 +     vertexDistance = cylindrical_distance(ModelViewMat, Position);
		31    -     vertexDistance = fog_distance(ModelViewMat, Position, FogShape);
		32 31       vertexColor = minecraft_mix_light(Light0_Direction, Light1_Direction, Normal, Color) * texelFetch(Sampler2, UV2 / 16, 0);
		33 32       texCoord0 = UV0;
		34 33       texCoord1 = UV1;
		35 34       normal = ProjMat * ModelViewMat * vec4(Normal, 0.0);
		36 35   }
		        '''
	Changed file "core/rendertype_armor_entity_glint.vsh":
		Total line: 20 (+1, -2)
		        '''
		        ...
		 6  6   in vec2 UV0;
		 7  7   
		 8  8   uniform mat4 ModelViewMat;
		 9  9   uniform mat4 ProjMat;
		10 10   uniform mat4 TextureMat;
		11    - uniform int FogShape;
		12 11   
		13 12   out float vertexDistance;
		14 13   out vec2 texCoord0;
		15 14   
		16 15   void main() {
		17 16       gl_Position = ProjMat * ModelViewMat * vec4(Position, 1.0);
		18 17   
		   18 +     vertexDistance = cylindrical_distance(ModelViewMat, Position);
		19    -     vertexDistance = fog_distance(ModelViewMat, Position, FogShape);
		20 19       texCoord0 = (TextureMat * vec4(UV0, 0.0, 1.0)).xy;
		21 20   }
		        '''
	Changed file "core/rendertype_armor_glint.vsh":
		Total line: 20 (+1, -2)
		        '''
		        ...
		 6  6   in vec2 UV0;
		 7  7   
		 8  8   uniform mat4 ModelViewMat;
		 9  9   uniform mat4 ProjMat;
		10 10   uniform mat4 TextureMat;
		11    - uniform int FogShape;
		12 11   
		13 12   out float vertexDistance;
		14 13   out vec2 texCoord0;
		15 14   
		16 15   void main() {
		17 16       gl_Position = ProjMat * ModelViewMat * vec4(Position, 1.0);
		18 17   
		   18 +     vertexDistance = cylindrical_distance(ModelViewMat, Position);
		19    -     vertexDistance = fog_distance(ModelViewMat, Position, FogShape);
		20 19       texCoord0 = (TextureMat * vec4(UV0, 0.0, 1.0)).xy;
		21 20   }
		        '''
	Changed file "core/rendertype_cutout.vsh":
		Total line: 31 (+1, -2)
		        '''
		        ...
		12 12   uniform sampler2D Sampler2;
		13 13   
		14 14   uniform mat4 ModelViewMat;
		15 15   uniform mat4 ProjMat;
		16 16   uniform vec3 ChunkOffset;
		17    - uniform int FogShape;
		18 17   
		19 18   out float vertexDistance;
		20 19   out vec4 vertexColor;
		21 20   out vec2 texCoord0;
		22 21   out vec4 normal;
		23 22   
		24 23   void main() {
		25 24       vec3 pos = Position + ChunkOffset;
		26 25       gl_Position = ProjMat * ModelViewMat * vec4(pos, 1.0);
		27 26   
		   27 +     vertexDistance = cylindrical_distance(ModelViewMat, pos);
		28    -     vertexDistance = fog_distance(ModelViewMat, pos, FogShape);
		29 28       vertexColor = Color * minecraft_sample_lightmap(Sampler2, UV2);
		30 29       texCoord0 = UV0;
		31 30       normal = ProjMat * ModelViewMat * vec4(Normal, 0.0);
		32 31   }
		        '''
	Changed file "core/rendertype_cutout_mipped.vsh":
		Total line: 31 (+1, -2)
		        '''
		        ...
		12 12   uniform sampler2D Sampler2;
		13 13   
		14 14   uniform mat4 ModelViewMat;
		15 15   uniform mat4 ProjMat;
		16 16   uniform vec3 ChunkOffset;
		17    - uniform int FogShape;
		18 17   
		19 18   out float vertexDistance;
		20 19   out vec4 vertexColor;
		21 20   out vec2 texCoord0;
		22 21   out vec4 normal;
		23 22   
		24 23   void main() {
		25 24       vec3 pos = Position + ChunkOffset;
		26 25       gl_Position = ProjMat * ModelViewMat * vec4(pos, 1.0);
		27 26   
		   27 +     vertexDistance = cylindrical_distance(ModelViewMat, pos);
		28    -     vertexDistance = fog_distance(ModelViewMat, pos, FogShape);
		29 28       vertexColor = Color * minecraft_sample_lightmap(Sampler2, UV2);
		30 29       texCoord0 = UV0;
		31 30       normal = ProjMat * ModelViewMat * vec4(Normal, 0.0);
		32 31   }
		        '''
	Changed file "core/rendertype_energy_swirl.vsh":
		Total line: 23 (+1, -2)
		        '''
		        ...
		 7  7   in vec2 UV0;
		 8  8   
		 9  9   uniform mat4 ModelViewMat;
		10 10   uniform mat4 ProjMat;
		11 11   uniform mat4 TextureMat;
		12    - uniform int FogShape;
		13 12   
		14 13   out float vertexDistance;
		15 14   out vec4 vertexColor;
		16 15   out vec2 texCoord0;
		17 16   
		18 17   void main() {
		19 18       gl_Position = ProjMat * ModelViewMat * vec4(Position, 1.0);
		20 19   
		   20 +     vertexDistance = cylindrical_distance(ModelViewMat, Position);
		21    -     vertexDistance = fog_distance(ModelViewMat, Position, FogShape);
		22 21       vertexColor = Color;
		23 22       texCoord0 = (TextureMat * vec4(UV0, 0.0, 1.0)).xy;
		24 23   }
		        '''
	Changed file "core/rendertype_entity_cutout.vsh":
		Total line: 39 (+1, -2)
		        '''
		        ...
		14 14   uniform sampler2D Sampler2;
		15 15   
		16 16   uniform mat4 ModelViewMat;
		17 17   uniform mat4 ProjMat;
		18 18   uniform mat3 IViewRotMat;
		19    - uniform int FogShape;
		20 19   
		21 20   uniform vec3 Light0_Direction;
		22 21   uniform vec3 Light1_Direction;
		23 22   
		24 23   out float vertexDistance;
		        ...
		29 28   out vec4 normal;
		30 29   
		31 30   void main() {
		32 31       gl_Position = ProjMat * ModelViewMat * vec4(Position, 1.0);
		33 32   
		   33 +     vertexDistance = cylindrical_distance(ModelViewMat, IViewRotMat * Position);
		34    -     vertexDistance = fog_distance(ModelViewMat, IViewRotMat * Position, FogShape);
		35 34       vertexColor = minecraft_mix_light(Light0_Direction, Light1_Direction, Normal, Color);
		36 35       lightMapColor = texelFetch(Sampler2, UV2 / 16, 0);
		37 36       overlayColor = texelFetch(Sampler1, UV1, 0);
		38 37       texCoord0 = UV0;
		39 38       normal = ProjMat * ModelViewMat * vec4(Normal, 0.0);
		        ...
		        '''
	Changed file "core/rendertype_entity_cutout_no_cull.vsh":
		Total line: 39 (+1, -2)
		        '''
		        ...
		14 14   uniform sampler2D Sampler2;
		15 15   
		16 16   uniform mat4 ModelViewMat;
		17 17   uniform mat4 ProjMat;
		18 18   uniform mat3 IViewRotMat;
		19    - uniform int FogShape;
		20 19   
		21 20   uniform vec3 Light0_Direction;
		22 21   uniform vec3 Light1_Direction;
		23 22   
		24 23   out float vertexDistance;
		        ...
		29 28   out vec4 normal;
		30 29   
		31 30   void main() {
		32 31       gl_Position = ProjMat * ModelViewMat * vec4(Position, 1.0);
		33 32   
		   33 +     vertexDistance = cylindrical_distance(ModelViewMat, IViewRotMat * Position);
		34    -     vertexDistance = fog_distance(ModelViewMat, IViewRotMat * Position, FogShape);
		35 34       vertexColor = minecraft_mix_light(Light0_Direction, Light1_Direction, Normal, Color);
		36 35       lightMapColor = texelFetch(Sampler2, UV2 / 16, 0);
		37 36       overlayColor = texelFetch(Sampler1, UV1, 0);
		38 37       texCoord0 = UV0;
		39 38       normal = ProjMat * ModelViewMat * vec4(Normal, 0.0);
		        ...
		        '''
	Changed file "core/rendertype_entity_cutout_no_cull_z_offset.vsh":
		Total line: 39 (+1, -2)
		        '''
		        ...
		14 14   uniform sampler2D Sampler2;
		15 15   
		16 16   uniform mat4 ModelViewMat;
		17 17   uniform mat4 ProjMat;
		18 18   uniform mat3 IViewRotMat;
		19    - uniform int FogShape;
		20 19   
		21 20   uniform vec3 Light0_Direction;
		22 21   uniform vec3 Light1_Direction;
		23 22   
		24 23   out float vertexDistance;
		        ...
		29 28   out vec4 normal;
		30 29   
		31 30   void main() {
		32 31       gl_Position = ProjMat * ModelViewMat * vec4(Position, 1.0);
		33 32   
		   33 +     vertexDistance = cylindrical_distance(ModelViewMat, IViewRotMat * Position);
		34    -     vertexDistance = fog_distance(ModelViewMat, IViewRotMat * Position, FogShape);
		35 34       vertexColor = minecraft_mix_light(Light0_Direction, Light1_Direction, Normal, Color);
		36 35       lightMapColor = texelFetch(Sampler2, UV2 / 16, 0);
		37 36       overlayColor = texelFetch(Sampler1, UV1, 0);
		38 37       texCoord0 = UV0;
		39 38       normal = ProjMat * ModelViewMat * vec4(Normal, 0.0);
		        ...
		        '''
	Changed file "core/rendertype_entity_decal.vsh":
		Total line: 37 (+1, -2)
		        '''
		        ...
		14 14   uniform sampler2D Sampler2;
		15 15   
		16 16   uniform mat4 ModelViewMat;
		17 17   uniform mat4 ProjMat;
		18 18   uniform mat3 IViewRotMat;
		19    - uniform int FogShape;
		20 19   
		21 20   uniform vec3 Light0_Direction;
		22 21   uniform vec3 Light1_Direction;
		23 22   
		24 23   out float vertexDistance;
		        ...
		28 27   out vec4 normal;
		29 28   
		30 29   void main() {
		31 30       gl_Position = ProjMat * ModelViewMat * vec4(Position, 1.0);
		32 31   
		   32 +     vertexDistance = cylindrical_distance(ModelViewMat, IViewRotMat * Position);
		33    -     vertexDistance = fog_distance(ModelViewMat, IViewRotMat * Position, FogShape);
		34 33       vertexColor = minecraft_mix_light(Light0_Direction, Light1_Direction, Normal, Color) * texelFetch(Sampler2, UV2 / 16, 0);
		35 34       overlayColor = texelFetch(Sampler1, UV1, 0);
		36 35       texCoord0 = UV0;
		37 36       normal = ProjMat * ModelViewMat * vec4(Normal, 0.0);
		38 37   }
		        '''
	Changed file "core/rendertype_entity_glint.vsh":
		Total line: 21 (+1, -2)
		        '''
		        ...
		 7  7   
		 8  8   uniform mat4 ModelViewMat;
		 9  9   uniform mat4 ProjMat;
		10 10   uniform mat3 IViewRotMat;
		11 11   uniform mat4 TextureMat;
		12    - uniform int FogShape;
		13 12   
		14 13   out float vertexDistance;
		15 14   out vec2 texCoord0;
		16 15   
		17 16   void main() {
		18 17       gl_Position = ProjMat * ModelViewMat * vec4(Position, 1.0);
		19 18   
		   19 +     vertexDistance = cylindrical_distance(ModelViewMat, IViewRotMat * Position);
		20    -     vertexDistance = fog_distance(ModelViewMat, IViewRotMat * Position, FogShape);
		21 20       texCoord0 = (TextureMat * vec4(UV0, 0.0, 1.0)).xy;
		22 21   }
		        '''
	Changed file "core/rendertype_entity_glint_direct.vsh":
		Total line: 21 (+1, -2)
		        '''
		        ...
		 7  7   
		 8  8   uniform mat4 ModelViewMat;
		 9  9   uniform mat4 ProjMat;
		10 10   uniform mat3 IViewRotMat;
		11 11   uniform mat4 TextureMat;
		12    - uniform int FogShape;
		13 12   
		14 13   out float vertexDistance;
		15 14   out vec2 texCoord0;
		16 15   
		17 16   void main() {
		18 17       gl_Position = ProjMat * ModelViewMat * vec4(Position, 1.0);
		19 18   
		   19 +     vertexDistance = cylindrical_distance(ModelViewMat, IViewRotMat * Position);
		20    -     vertexDistance = fog_distance(ModelViewMat, IViewRotMat * Position, FogShape);
		21 20       texCoord0 = (TextureMat * vec4(UV0, 0.0, 1.0)).xy;
		22 21   }
		        '''
	Changed file "core/rendertype_entity_no_outline.vsh":
		Total line: 33 (+1, -2)
		        '''
		        ...
		12 12   uniform sampler2D Sampler2;
		13 13   
		14 14   uniform mat4 ModelViewMat;
		15 15   uniform mat4 ProjMat;
		16 16   uniform mat3 IViewRotMat;
		17    - uniform int FogShape;
		18 17   
		19 18   uniform vec3 Light0_Direction;
		20 19   uniform vec3 Light1_Direction;
		21 20   
		22 21   out float vertexDistance;
		        ...
		25 24   out vec4 normal;
		26 25   
		27 26   void main() {
		28 27       gl_Position = ProjMat * ModelViewMat * vec4(Position, 1.0);
		29 28   
		   29 +     vertexDistance = cylindrical_distance(ModelViewMat, IViewRotMat * Position);
		30    -     vertexDistance = fog_distance(ModelViewMat, IViewRotMat * Position, FogShape);
		31 30       vertexColor = minecraft_mix_light(Light0_Direction, Light1_Direction, Normal, Color) * texelFetch(Sampler2, UV2 / 16, 0);
		32 31       texCoord0 = UV0;
		33 32       normal = ProjMat * ModelViewMat * vec4(Normal, 0.0);
		34 33   }
		        '''
	Changed file "core/rendertype_entity_shadow.vsh":
		Total line: 23 (+1, -2)
		        '''
		        ...
		 7  7   in vec2 UV0;
		 8  8   
		 9  9   uniform mat4 ModelViewMat;
		10 10   uniform mat4 ProjMat;
		11 11   uniform mat3 IViewRotMat;
		12    - uniform int FogShape;
		13 12   
		14 13   out float vertexDistance;
		15 14   out vec4 vertexColor;
		16 15   out vec2 texCoord0;
		17 16   
		18 17   void main() {
		19 18       gl_Position = ProjMat * ModelViewMat * vec4(Position, 1.0);
		20 19   
		   20 +     vertexDistance = cylindrical_distance(ModelViewMat, IViewRotMat * Position);
		21    -     vertexDistance = fog_distance(ModelViewMat, IViewRotMat * Position, FogShape);
		22 21       vertexColor = Color;
		23 22       texCoord0 = UV0;
		24 23   }
		        '''
	Changed file "core/rendertype_entity_smooth_cutout.vsh":
		Total line: 39 (+1, -2)
		        '''
		        ...
		14 14   uniform sampler2D Sampler2;
		15 15   
		16 16   uniform mat4 ModelViewMat;
		17 17   uniform mat4 ProjMat;
		18 18   uniform mat3 IViewRotMat;
		19    - uniform int FogShape;
		20 19   
		21 20   uniform vec3 Light0_Direction;
		22 21   uniform vec3 Light1_Direction;
		23 22   
		24 23   out float vertexDistance;
		        ...
		29 28   out vec4 normal;
		30 29   
		31 30   void main() {
		32 31       gl_Position = ProjMat * ModelViewMat * vec4(Position, 1.0);
		33 32   
		   33 +     vertexDistance = cylindrical_distance(ModelViewMat, IViewRotMat * Position);
		34    -     vertexDistance = fog_distance(ModelViewMat, IViewRotMat * Position, FogShape);
		35 34       vertexColor = minecraft_mix_light(Light0_Direction, Light1_Direction, Normal, Color);
		36 35       lightMapColor = texelFetch(Sampler2, UV2 / 16, 0);
		37 36       overlayColor = texelFetch(Sampler1, UV1, 0);
		38 37       texCoord0 = UV0;
		39 38       normal = ProjMat * ModelViewMat * vec4(Normal, 0.0);
		        ...
		        '''
	Changed file "core/rendertype_entity_solid.vsh":
		Total line: 39 (+1, -2)
		        '''
		        ...
		14 14   uniform sampler2D Sampler2;
		15 15   
		16 16   uniform mat4 ModelViewMat;
		17 17   uniform mat4 ProjMat;
		18 18   uniform mat3 IViewRotMat;
		19    - uniform int FogShape;
		20 19   
		21 20   uniform vec3 Light0_Direction;
		22 21   uniform vec3 Light1_Direction;
		23 22   
		24 23   out float vertexDistance;
		        ...
		29 28   out vec4 normal;
		30 29   
		31 30   void main() {
		32 31       gl_Position = ProjMat * ModelViewMat * vec4(Position, 1.0);
		33 32   
		   33 +     vertexDistance = cylindrical_distance(ModelViewMat, IViewRotMat * Position);
		34    -     vertexDistance = fog_distance(ModelViewMat, IViewRotMat * Position, FogShape);
		35 34       vertexColor = minecraft_mix_light(Light0_Direction, Light1_Direction, Normal, Color);
		36 35       lightMapColor = texelFetch(Sampler2, UV2 / 16, 0);
		37 36       overlayColor = texelFetch(Sampler1, UV1, 0);
		38 37       texCoord0 = UV0;
		39 38       normal = ProjMat * ModelViewMat * vec4(Normal, 0.0);
		        ...
		        '''
	Changed file "core/rendertype_entity_translucent.vsh":
		Total line: 39 (+1, -2)
		        '''
		        ...
		14 14   uniform sampler2D Sampler2;
		15 15   
		16 16   uniform mat4 ModelViewMat;
		17 17   uniform mat4 ProjMat;
		18 18   uniform mat3 IViewRotMat;
		19    - uniform int FogShape;
		20 19   
		21 20   uniform vec3 Light0_Direction;
		22 21   uniform vec3 Light1_Direction;
		23 22   
		24 23   out float vertexDistance;
		        ...
		29 28   out vec4 normal;
		30 29   
		31 30   void main() {
		32 31       gl_Position = ProjMat * ModelViewMat * vec4(Position, 1.0);
		33 32   
		   33 +     vertexDistance = cylindrical_distance(ModelViewMat, IViewRotMat * Position);
		34    -     vertexDistance = fog_distance(ModelViewMat, IViewRotMat * Position, FogShape);
		35 34       vertexColor = minecraft_mix_light(Light0_Direction, Light1_Direction, Normal, Color);
		36 35       lightMapColor = texelFetch(Sampler2, UV2 / 16, 0);
		37 36       overlayColor = texelFetch(Sampler1, UV1, 0);
		38 37       texCoord0 = UV0;
		39 38       normal = ProjMat * ModelViewMat * vec4(Normal, 0.0);
		        ...
		        '''
	Changed file "core/rendertype_entity_translucent_cull.vsh":
		Total line: 38 (+1, -2)
		        '''
		        ...
		13 13   uniform sampler2D Sampler2;
		14 14   
		15 15   uniform mat4 ModelViewMat;
		16 16   uniform mat4 ProjMat;
		17 17   uniform mat3 IViewRotMat;
		18    - uniform int FogShape;
		19 18   
		20 19   uniform vec3 Light0_Direction;
		21 20   uniform vec3 Light1_Direction;
		22 21   
		23 22   out float vertexDistance;
		        ...
		28 27   out vec4 normal;
		29 28   
		30 29   void main() {
		31 30       gl_Position = ProjMat * ModelViewMat * vec4(Position, 1.0);
		32 31   
		   32 +     vertexDistance = cylindrical_distance(ModelViewMat, IViewRotMat * Position);
		33    -     vertexDistance = fog_distance(ModelViewMat, IViewRotMat * Position, FogShape);
		34 33       vertexColor = minecraft_mix_light(Light0_Direction, Light1_Direction, Normal, Color) * texelFetch(Sampler2, UV2 / 16, 0);
		35 34       texCoord0 = UV0;
		36 35       texCoord1 = UV1;
		37 36       texCoord2 = UV2;
		38 37       normal = ProjMat * ModelViewMat * vec4(Normal, 0.0);
		        ...
		        '''
	Changed file "core/rendertype_eyes.vsh":
		Total line: 23 (+1, -2)
		        '''
		        ...
		 7  7   in vec2 UV0;
		 8  8   
		 9  9   uniform mat4 ModelViewMat;
		10 10   uniform mat4 ProjMat;
		11 11   uniform mat3 IViewRotMat;
		12    - uniform int FogShape;
		13 12   
		14 13   out float vertexDistance;
		15 14   out vec4 vertexColor;
		16 15   out vec2 texCoord0;
		17 16   
		18 17   void main() {
		19 18       gl_Position = ProjMat * ModelViewMat * vec4(Position, 1.0);
		20 19   
		   20 +     vertexDistance = cylindrical_distance(ModelViewMat, IViewRotMat * Position);
		21    -     vertexDistance = fog_distance(ModelViewMat, IViewRotMat * Position, FogShape);
		22 21       vertexColor = Color;
		23 22       texCoord0 = UV0;
		24 23   }
		        '''
	Changed file "core/rendertype_glint.vsh":
		Total line: 21 (+1, -2)
		        '''
		        ...
		 7  7   
		 8  8   uniform mat4 ModelViewMat;
		 9  9   uniform mat4 ProjMat;
		10 10   uniform mat3 IViewRotMat;
		11 11   uniform mat4 TextureMat;
		12    - uniform int FogShape;
		13 12   
		14 13   out float vertexDistance;
		15 14   out vec2 texCoord0;
		16 15   
		17 16   void main() {
		18 17       gl_Position = ProjMat * ModelViewMat * vec4(Position, 1.0);
		19 18   
		   19 +     vertexDistance = cylindrical_distance(ModelViewMat, IViewRotMat * Position);
		20    -     vertexDistance = fog_distance(ModelViewMat, IViewRotMat * Position, FogShape);
		21 20       texCoord0 = (TextureMat * vec4(UV0, 0.0, 1.0)).xy;
		22 21   }
		        '''
	Changed file "core/rendertype_glint_direct.vsh":
		Total line: 21 (+1, -2)
		        '''
		        ...
		 7  7   
		 8  8   uniform mat4 ModelViewMat;
		 9  9   uniform mat4 ProjMat;
		10 10   uniform mat3 IViewRotMat;
		11 11   uniform mat4 TextureMat;
		12    - uniform int FogShape;
		13 12   
		14 13   out float vertexDistance;
		15 14   out vec2 texCoord0;
		16 15   
		17 16   void main() {
		18 17       gl_Position = ProjMat * ModelViewMat * vec4(Position, 1.0);
		19 18   
		   19 +     vertexDistance = cylindrical_distance(ModelViewMat, IViewRotMat * Position);
		20    -     vertexDistance = fog_distance(ModelViewMat, IViewRotMat * Position, FogShape);
		21 20       texCoord0 = (TextureMat * vec4(UV0, 0.0, 1.0)).xy;
		22 21   }
		        '''
	Changed file "core/rendertype_glint_translucent.vsh":
		Total line: 21 (+1, -2)
		        '''
		        ...
		 7  7   
		 8  8   uniform mat4 ModelViewMat;
		 9  9   uniform mat4 ProjMat;
		10 10   uniform mat3 IViewRotMat;
		11 11   uniform mat4 TextureMat;
		12    - uniform int FogShape;
		13 12   
		14 13   out float vertexDistance;
		15 14   out vec2 texCoord0;
		16 15   
		17 16   void main() {
		18 17       gl_Position = ProjMat * ModelViewMat * vec4(Position, 1.0);
		19 18   
		   19 +     vertexDistance = cylindrical_distance(ModelViewMat, IViewRotMat * Position);
		20    -     vertexDistance = fog_distance(ModelViewMat, IViewRotMat * Position, FogShape);
		21 20       texCoord0 = (TextureMat * vec4(UV0, 0.0, 1.0)).xy;
		22 21   }
		        '''
	Changed file "core/rendertype_item_entity_translucent_cull.vsh":
		Total line: 38 (+1, -2)
		        '''
		        ...
		13 13   uniform sampler2D Sampler2;
		14 14   
		15 15   uniform mat4 ModelViewMat;
		16 16   uniform mat4 ProjMat;
		17 17   uniform mat3 IViewRotMat;
		18    - uniform int FogShape;
		19 18   
		20 19   uniform vec3 Light0_Direction;
		21 20   uniform vec3 Light1_Direction;
		22 21   
		23 22   out float vertexDistance;
		        ...
		28 27   out vec4 normal;
		29 28   
		30 29   void main() {
		31 30       gl_Position = ProjMat * ModelViewMat * vec4(Position, 1.0);
		32 31   
		   32 +     vertexDistance = cylindrical_distance(ModelViewMat, IViewRotMat * Position);
		33    -     vertexDistance = fog_distance(ModelViewMat, IViewRotMat * Position, FogShape);
		34 33       vertexColor = minecraft_mix_light(Light0_Direction, Light1_Direction, Normal, Color) * texelFetch(Sampler2, UV2 / 16, 0);
		35 34       texCoord0 = UV0;
		36 35       texCoord1 = UV1;
		37 36       texCoord2 = UV2;
		38 37       normal = ProjMat * ModelViewMat * vec4(Normal, 0.0);
		        ...
		        '''
	Changed file "core/rendertype_leash.vsh":
		Total line: 24 (+1, -2)
		        '''
		        ...
		10 10   
		11 11   uniform mat4 ModelViewMat;
		12 12   uniform mat4 ProjMat;
		13 13   uniform mat3 IViewRotMat;
		14 14   uniform vec4 ColorModulator;
		15    - uniform int FogShape;
		16 15   
		17 16   out float vertexDistance;
		18 17   flat out vec4 vertexColor;
		19 18   
		20 19   void main() {
		21 20       gl_Position = ProjMat * ModelViewMat * vec4(Position, 1.0);
		22 21   
		   22 +     vertexDistance = cylindrical_distance(ModelViewMat, IViewRotMat * Position);
		23    -     vertexDistance = fog_distance(ModelViewMat, IViewRotMat * Position, FogShape);
		24 23       vertexColor = Color * ColorModulator * texelFetch(Sampler2, UV2 / 16, 0);
		25 24   }
		        '''
	Changed file "core/rendertype_lightning.vsh":
		Total line: 20 (+1, -2)
		        '''
		        ...
		 6  6   in vec4 Color;
		 7  7   
		 8  8   uniform mat4 ModelViewMat;
		 9  9   uniform mat4 ProjMat;
		10 10   uniform mat3 IViewRotMat;
		11    - uniform int FogShape;
		12 11   
		13 12   out float vertexDistance;
		14 13   out vec4 vertexColor;
		15 14   
		16 15   void main() {
		17 16       gl_Position = ProjMat * ModelViewMat * vec4(Position, 1.0);
		18 17   
		   18 +     vertexDistance = cylindrical_distance(ModelViewMat, IViewRotMat * Position);
		19    -     vertexDistance = fog_distance(ModelViewMat, IViewRotMat * Position, FogShape);
		20 19       vertexColor = Color;
		21 20   }
		        '''
	Changed file "core/rendertype_lines.vsh":
		Total line: 47 (+1, -2)
		        '''
		        ...
		 8  8   
		 9  9   uniform mat4 ModelViewMat;
		10 10   uniform mat4 ProjMat;
		11 11   uniform float LineWidth;
		12 12   uniform vec2 ScreenSize;
		13    - uniform int FogShape;
		14 13   
		15 14   out float vertexDistance;
		16 15   out vec4 vertexColor;
		17 16   
		18 17   const float VIEW_SHRINK = 1.0 - (1.0 / 256.0);
		        ...
		41 40           gl_Position = vec4((ndc1 + vec3(lineOffset, 0.0)) * linePosStart.w, linePosStart.w);
		42 41       } else {
		43 42           gl_Position = vec4((ndc1 - vec3(lineOffset, 0.0)) * linePosStart.w, linePosStart.w);
		44 43       }
		45 44   
		   45 +     vertexDistance = cylindrical_distance(ModelViewMat, Position);
		46    -     vertexDistance = fog_distance(ModelViewMat, Position, FogShape);
		47 46       vertexColor = Color;
		48 47   }
		        '''
	Changed file "core/rendertype_solid.vsh":
		Total line: 31 (+1, -2)
		        '''
		        ...
		12 12   uniform sampler2D Sampler2;
		13 13   
		14 14   uniform mat4 ModelViewMat;
		15 15   uniform mat4 ProjMat;
		16 16   uniform vec3 ChunkOffset;
		17    - uniform int FogShape;
		18 17   
		19 18   out float vertexDistance;
		20 19   out vec4 vertexColor;
		21 20   out vec2 texCoord0;
		22 21   out vec4 normal;
		23 22   
		24 23   void main() {
		25 24       vec3 pos = Position + ChunkOffset;
		26 25       gl_Position = ProjMat * ModelViewMat * vec4(pos, 1.0);
		27 26   
		   27 +     vertexDistance = cylindrical_distance(ModelViewMat, pos);
		28    -     vertexDistance = fog_distance(ModelViewMat, pos, FogShape);
		29 28       vertexColor = Color * minecraft_sample_lightmap(Sampler2, UV2);
		30 29       texCoord0 = UV0;
		31 30       normal = ProjMat * ModelViewMat * vec4(Normal, 0.0);
		32 31   }
		        '''
	Changed file "core/rendertype_text.vsh":
		Total line: 26 (+1, -2)
		        '''
		        ...
		10 10   uniform sampler2D Sampler2;
		11 11   
		12 12   uniform mat4 ModelViewMat;
		13 13   uniform mat4 ProjMat;
		14 14   uniform mat3 IViewRotMat;
		15    - uniform int FogShape;
		16 15   
		17 16   out float vertexDistance;
		18 17   out vec4 vertexColor;
		19 18   out vec2 texCoord0;
		20 19   
		21 20   void main() {
		22 21       gl_Position = ProjMat * ModelViewMat * vec4(Position, 1.0);
		23 22   
		   23 +     vertexDistance = cylindrical_distance(ModelViewMat, IViewRotMat * Position);
		24    -     vertexDistance = fog_distance(ModelViewMat, IViewRotMat * Position, FogShape);
		25 24       vertexColor = Color * texelFetch(Sampler2, UV2 / 16, 0);
		26 25       texCoord0 = UV0;
		27 26   }
		        '''
	Changed file "core/rendertype_text_intensity.vsh":
		Total line: 26 (+1, -2)
		        '''
		        ...
		10 10   uniform sampler2D Sampler2;
		11 11   
		12 12   uniform mat4 ModelViewMat;
		13 13   uniform mat4 ProjMat;
		14 14   uniform mat3 IViewRotMat;
		15    - uniform int FogShape;
		16 15   
		17 16   out float vertexDistance;
		18 17   out vec4 vertexColor;
		19 18   out vec2 texCoord0;
		20 19   
		21 20   void main() {
		22 21       gl_Position = ProjMat * ModelViewMat * vec4(Position, 1.0);
		23 22   
		   23 +     vertexDistance = cylindrical_distance(ModelViewMat, IViewRotMat * Position);
		24    -     vertexDistance = fog_distance(ModelViewMat, IViewRotMat * Position, FogShape);
		25 24       vertexColor = Color * texelFetch(Sampler2, UV2 / 16, 0);
		26 25       texCoord0 = UV0;
		27 26   }
		        '''
	Changed file "core/rendertype_translucent.vsh":
		Total line: 31 (+1, -2)
		        '''
		        ...
		12 12   uniform sampler2D Sampler2;
		13 13   
		14 14   uniform mat4 ModelViewMat;
		15 15   uniform mat4 ProjMat;
		16 16   uniform vec3 ChunkOffset;
		17    - uniform int FogShape;
		18 17   
		19 18   out float vertexDistance;
		20 19   out vec4 vertexColor;
		21 20   out vec2 texCoord0;
		22 21   out vec4 normal;
		23 22   
		24 23   void main() {
		25 24       vec3 pos = Position + ChunkOffset;
		26 25       gl_Position = ProjMat * ModelViewMat * vec4(pos, 1.0);
		27 26   
		   27 +     vertexDistance = cylindrical_distance(ModelViewMat, pos);
		28    -     vertexDistance = fog_distance(ModelViewMat, pos, FogShape);
		29 28       vertexColor = Color * minecraft_sample_lightmap(Sampler2, UV2);
		30 29       texCoord0 = UV0;
		31 30       normal = ProjMat * ModelViewMat * vec4(Normal, 0.0);
		32 31   }
		        '''
	Changed file "core/rendertype_tripwire.vsh":
		Total line: 31 (+1, -2)
		        '''
		        ...
		12 12   uniform sampler2D Sampler2;
		13 13   
		14 14   uniform mat4 ModelViewMat;
		15 15   uniform mat4 ProjMat;
		16 16   uniform vec3 ChunkOffset;
		17    - uniform int FogShape;
		18 17   
		19 18   out float vertexDistance;
		20 19   out vec4 vertexColor;
		21 20   out vec2 texCoord0;
		22 21   out vec4 normal;
		23 22   
		24 23   void main() {
		25 24       vec3 pos = Position + ChunkOffset;
		26 25       gl_Position = ProjMat * ModelViewMat * vec4(pos, 1.0);
		27 26   
		   27 +     vertexDistance = cylindrical_distance(ModelViewMat, pos);
		28    -     vertexDistance = fog_distance(ModelViewMat, pos, FogShape);
		29 28       vertexColor = Color * minecraft_sample_lightmap(Sampler2, UV2);
		30 29       texCoord0 = UV0;
		31 30       normal = ProjMat * ModelViewMat * vec4(Normal, 0.0);
		32 31   }
		        '''
	Added file "core/rendertype_entity_translucent_emissive.vsh":
		'''
		#version 150
		
		#moj_import <light.glsl>
		
		in vec3 Position;
		in vec4 Color;
		in vec2 UV0;
		in ivec2 UV1;
		in ivec2 UV2;
		in vec3 Normal;
		
		uniform sampler2D Sampler1;
		uniform sampler2D Sampler2;
		
		uniform mat4 ModelViewMat;
		uniform mat4 ProjMat;
		
		uniform vec3 Light0_Direction;
		uniform vec3 Light1_Direction;
		
		out float vertexDistance;
		out vec4 vertexColor;
		out vec4 overlayColor;
		out vec2 texCoord0;
		out vec4 normal;
		
		void main() {
		    gl_Position = ProjMat * ModelViewMat * vec4(Position, 1.0);
		
		    vertexDistance = length((ModelViewMat * vec4(Position, 1.0)).xyz);
		    vertexColor = minecraft_mix_light(Light0_Direction, Light1_Direction, Normal, Color);
		    overlayColor = texelFetch(Sampler1, UV1, 0);
		    texCoord0 = UV0;
		    normal = ProjMat * ModelViewMat * vec4(Normal, 0.0);
		}
		'''