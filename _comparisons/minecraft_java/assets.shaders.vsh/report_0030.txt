Difference of "text_packs" between "25w18a" (snapshot of "1.21.6") and "25w19a" (snapshot of "1.21.6").

Changed resource pack "minecraft":
	Total file: 42 (+1, -0)
	Changed file "core/entity.vsh":
		Total line: 42 (+4, -2)
		        '''
		        ...
		13 13   in vec3 Normal;
		14 14   
		15 15   uniform sampler2D Sampler1;
		16 16   uniform sampler2D Sampler2;
		17 17   
		   18 + out float sphericalVertexDistance;
		   19 + out float cylindricalVertexDistance;
		18    - out float vertexDistance;
		19 20   out vec4 vertexColor;
		20 21   out vec4 lightMapColor;
		21 22   out vec4 overlayColor;
		22 23   out vec2 texCoord0;
		23 24   
		24 25   void main() {
		25 26       gl_Position = ProjMat * ModelViewMat * vec4(Position, 1.0);
		26 27   
		   28 +     sphericalVertexDistance = fog_spherical_distance(Position);
		   29 +     cylindricalVertexDistance = fog_cylindrical_distance(Position);
		27    -     vertexDistance = fog_distance(Position, FogShape);
		28 30   #ifdef NO_CARDINAL_LIGHTING
		29 31       vertexColor = Color;
		30 32   #else
		31 33       vertexColor = minecraft_mix_light(Light0_Direction, Light1_Direction, Normal, Color);
		32 34   #endif
		        ...
		        '''
	Changed file "core/glint.vsh":
		Total line: 20 (+4, -2)
		        '''
		        ...
		 5  5   #moj_import <minecraft:projection.glsl>
		 6  6   
		 7  7   in vec3 Position;
		 8  8   in vec2 UV0;
		 9  9   
		   10 + out float sphericalVertexDistance;
		   11 + out float cylindricalVertexDistance;
		10    - out float vertexDistance;
		11 12   out vec2 texCoord0;
		12 13   
		13 14   void main() {
		14 15       gl_Position = ProjMat * ModelViewMat * vec4(Position, 1.0);
		15 16   
		   17 +     sphericalVertexDistance = fog_spherical_distance(Position);
		   18 +     cylindricalVertexDistance = fog_cylindrical_distance(Position);
		16    -     vertexDistance = fog_distance(Position, FogShape);
		17 19       texCoord0 = (TextureMat * vec4(UV0, 0.0, 1.0)).xy;
		18 20   }
		        '''
	Changed file "core/particle.vsh":
		Total line: 26 (+4, -2)
		        '''
		        ...
		 9  9   in vec4 Color;
		10 10   in ivec2 UV2;
		11 11   
		12 12   uniform sampler2D Sampler2;
		13 13   
		   14 + out float sphericalVertexDistance;
		   15 + out float cylindricalVertexDistance;
		14    - out float vertexDistance;
		15 16   out vec2 texCoord0;
		16 17   out vec4 vertexColor;
		17 18   
		18 19   void main() {
		19 20       gl_Position = ProjMat * ModelViewMat * vec4(Position, 1.0);
		20 21   
		   22 +     sphericalVertexDistance = fog_spherical_distance(Position);
		   23 +     cylindricalVertexDistance = fog_cylindrical_distance(Position);
		21    -     vertexDistance = fog_distance(Position, FogShape);
		22 24       texCoord0 = UV0;
		23 25       vertexColor = Color * texelFetch(Sampler2, UV2 / 16, 0);
		24 26   }
		        '''
	Changed file "core/position.vsh":
		Total line: 17 (+4, -2)
		        '''
		        ...
		 4  4   #moj_import <minecraft:dynamictransforms.glsl>
		 5  5   #moj_import <minecraft:projection.glsl>
		 6  6   
		 7  7   in vec3 Position;
		 8  8   
		    9 + out float sphericalVertexDistance;
		   10 + out float cylindricalVertexDistance;
		 9    - out float vertexDistance;
		10 11   
		11 12   void main() {
		12 13       gl_Position = ProjMat * ModelViewMat * vec4(Position, 1.0);
		13 14   
		   15 +     sphericalVertexDistance = fog_spherical_distance(Position);
		   16 +     cylindricalVertexDistance = fog_cylindrical_distance(Position);
		14    -     vertexDistance = fog_distance(Position, FogShape);
		15 17   }
		        '''
	Changed file "core/rendertype_clouds.vsh":
		Total line: 88 (+1, -1)
		        '''
		        ...
		81 81       cellZ = (cellZ << 1) | ((dirAndFlags & FLAG_EXTRA_Z) >> 6);
		82 82       vec3 faceVertex = vertices[(direction * 4) + (isInsideFace ? 3 - gl_VertexID : gl_VertexID)];
		83 83       vec3 pos = (faceVertex * CellSize) + (vec3(cellX, 0, cellZ) * CellSize) + CloudOffset;
		84 84       gl_Position = ProjMat * ModelViewMat * vec4(pos, 1.0);
		85 85   
		   86 +     vertexDistance = fog_spherical_distance(pos);
		86    -     vertexDistance = fog_distance(pos, FogShape);
		87 87       vertexColor = (useTopColor ? faceColors[1] : faceColors[direction]) * CloudColor;
		88 88   }
		        '''
	Changed file "core/rendertype_end_portal.vsh":
		Total line: 20 (+4, -2)
		        '''
		        ...
		 6  6   #moj_import <minecraft:projection.glsl>
		 7  7   
		 8  8   in vec3 Position;
		 9  9   
		10 10   out vec4 texProj0;
		   11 + out float sphericalVertexDistance;
		   12 + out float cylindricalVertexDistance;
		11    - out float vertexDistance;
		12 13   
		13 14   void main() {
		14 15       gl_Position = ProjMat * ModelViewMat * vec4(Position, 1.0);
		15 16   
		16 17       texProj0 = projection_from_position(gl_Position);
		   18 +     sphericalVertexDistance = fog_spherical_distance(Position);
		   19 +     cylindricalVertexDistance = fog_cylindrical_distance(Position);
		17    -     vertexDistance = fog_distance(Position, FogShape);
		18 20   }
		        '''
	Changed file "core/rendertype_entity_decal.vsh":
		Total line: 33 (+4, -2)
		        '''
		        ...
		14 14   
		15 15   uniform sampler2D Sampler1;
		16 16   uniform sampler2D Sampler2;
		17 17   
		18 18   
		   19 + out float sphericalVertexDistance;
		   20 + out float cylindricalVertexDistance;
		19    - out float vertexDistance;
		20 21   out vec4 vertexColor;
		21 22   out vec4 overlayColor;
		22 23   out vec2 texCoord0;
		23 24   
		24 25   void main() {
		25 26       gl_Position = ProjMat * ModelViewMat * vec4(Position, 1.0);
		26 27   
		   28 +     sphericalVertexDistance = fog_spherical_distance(Position);
		   29 +     cylindricalVertexDistance = fog_cylindrical_distance(Position);
		27    -     vertexDistance = fog_distance(Position, FogShape);
		28 30       vertexColor = minecraft_mix_light(Light0_Direction, Light1_Direction, Normal, Color) * texelFetch(Sampler2, UV2 / 16, 0);
		29 31       overlayColor = texelFetch(Sampler1, UV1, 0);
		30 32       texCoord0 = UV0;
		31 33   }
		        '''
	Changed file "core/rendertype_entity_shadow.vsh":
		Total line: 23 (+4, -2)
		        '''
		        ...
		 6  6   
		 7  7   in vec3 Position;
		 8  8   in vec4 Color;
		 9  9   in vec2 UV0;
		10 10   
		   11 + out float sphericalVertexDistance;
		   12 + out float cylindricalVertexDistance;
		11    - out float vertexDistance;
		12 13   out vec4 vertexColor;
		13 14   out vec2 texCoord0;
		14 15   
		15 16   void main() {
		16 17       gl_Position = ProjMat * ModelViewMat * vec4(Position, 1.0);
		17 18   
		   19 +     sphericalVertexDistance = fog_spherical_distance(Position);
		   20 +     cylindricalVertexDistance = fog_cylindrical_distance(Position);
		18    -     vertexDistance = fog_distance(Position, FogShape);
		19 21       vertexColor = Color;
		20 22       texCoord0 = UV0;
		21 23   }
		        '''
	Changed file "core/rendertype_item_entity_translucent_cull.vsh":
		Total line: 34 (+4, -2)
		        '''
		        ...
		13 13   in vec3 Normal;
		14 14   
		15 15   uniform sampler2D Sampler2;
		16 16   
		17 17   
		   18 + out float sphericalVertexDistance;
		   19 + out float cylindricalVertexDistance;
		18    - out float vertexDistance;
		19 20   out vec4 vertexColor;
		20 21   out vec2 texCoord0;
		21 22   out vec2 texCoord1;
		22 23   out vec2 texCoord2;
		23 24   
		24 25   void main() {
		25 26       gl_Position = ProjMat * ModelViewMat * vec4(Position, 1.0);
		26 27   
		   28 +     sphericalVertexDistance = fog_spherical_distance(Position);
		   29 +     cylindricalVertexDistance = fog_cylindrical_distance(Position);
		27    -     vertexDistance = fog_distance(Position, FogShape);
		28 30       vertexColor = minecraft_mix_light(Light0_Direction, Light1_Direction, Normal, Color) * texelFetch(Sampler2, UV2 / 16, 0);
		29 31       texCoord0 = UV0;
		30 32       texCoord1 = UV1;
		31 33       texCoord2 = UV2;
		32 34   }
		        '''
	Changed file "core/rendertype_leash.vsh":
		Total line: 23 (+4, -2)
		        '''
		        ...
		 8  8   in vec4 Color;
		 9  9   in ivec2 UV2;
		10 10   
		11 11   uniform sampler2D Sampler2;
		12 12   
		   13 + out float sphericalVertexDistance;
		   14 + out float cylindricalVertexDistance;
		13    - out float vertexDistance;
		14 15   flat out vec4 vertexColor;
		15 16   
		16 17   void main() {
		17 18       gl_Position = ProjMat * ModelViewMat * vec4(Position, 1.0);
		18 19   
		   20 +     sphericalVertexDistance = fog_spherical_distance(Position);
		   21 +     cylindricalVertexDistance = fog_cylindrical_distance(Position);
		19    -     vertexDistance = fog_distance(Position, FogShape);
		20 22       vertexColor = Color * ColorModulator * texelFetch(Sampler2, UV2 / 16, 0);
		21 23   }
		        '''
	Changed file "core/rendertype_lightning.vsh":
		Total line: 20 (+4, -2)
		        '''
		        ...
		 5  5   #moj_import <minecraft:projection.glsl>
		 6  6   
		 7  7   in vec3 Position;
		 8  8   in vec4 Color;
		 9  9   
		   10 + out float sphericalVertexDistance;
		   11 + out float cylindricalVertexDistance;
		10    - out float vertexDistance;
		11 12   out vec4 vertexColor;
		12 13   
		13 14   void main() {
		14 15       gl_Position = ProjMat * ModelViewMat * vec4(Position, 1.0);
		15 16   
		   17 +     sphericalVertexDistance = fog_spherical_distance(Position);
		   18 +     cylindricalVertexDistance = fog_cylindrical_distance(Position);
		16    -     vertexDistance = fog_distance(Position, FogShape);
		17 19       vertexColor = Color;
		18 20   }
		        '''
	Changed file "core/rendertype_lines.vsh":
		Total line: 47 (+4, -2)
		        '''
		        ...
		 7  7   
		 8  8   in vec3 Position;
		 9  9   in vec4 Color;
		10 10   in vec3 Normal;
		11 11   
		   12 + out float sphericalVertexDistance;
		   13 + out float cylindricalVertexDistance;
		12    - out float vertexDistance;
		13 14   out vec4 vertexColor;
		14 15   
		15 16   const float VIEW_SHRINK = 1.0 - (1.0 / 256.0);
		16 17   const mat4 VIEW_SCALE = mat4(
		17 18       VIEW_SHRINK, 0.0, 0.0, 0.0,
		        ...
		38 39           gl_Position = vec4((ndc1 + vec3(lineOffset, 0.0)) * linePosStart.w, linePosStart.w);
		39 40       } else {
		40 41           gl_Position = vec4((ndc1 - vec3(lineOffset, 0.0)) * linePosStart.w, linePosStart.w);
		41 42       }
		42 43   
		   44 +     sphericalVertexDistance = fog_spherical_distance(Position);
		   45 +     cylindricalVertexDistance = fog_cylindrical_distance(Position);
		43    -     vertexDistance = fog_distance(Position, FogShape);
		44 46       vertexColor = Color;
		45 47   }
		        '''
	Changed file "core/rendertype_text.vsh":
		Total line: 26 (+4, -2)
		        '''
		        ...
		 9  9   in vec2 UV0;
		10 10   in ivec2 UV2;
		11 11   
		12 12   uniform sampler2D Sampler2;
		13 13   
		   14 + out float sphericalVertexDistance;
		   15 + out float cylindricalVertexDistance;
		14    - out float vertexDistance;
		15 16   out vec4 vertexColor;
		16 17   out vec2 texCoord0;
		17 18   
		18 19   void main() {
		19 20       gl_Position = ProjMat * ModelViewMat * vec4(Position, 1.0);
		20 21   
		   22 +     sphericalVertexDistance = fog_spherical_distance(Position);
		   23 +     cylindricalVertexDistance = fog_cylindrical_distance(Position);
		21    -     vertexDistance = fog_distance(Position, FogShape);
		22 24       vertexColor = Color * texelFetch(Sampler2, UV2 / 16, 0);
		23 25       texCoord0 = UV0;
		24 26   }
		        '''
	Changed file "core/rendertype_text_background.vsh":
		Total line: 23 (+4, -2)
		        '''
		        ...
		 8  8   in vec4 Color;
		 9  9   in ivec2 UV2;
		10 10   
		11 11   uniform sampler2D Sampler2;
		12 12   
		   13 + out float sphericalVertexDistance;
		   14 + out float cylindricalVertexDistance;
		13    - out float vertexDistance;
		14 15   out vec4 vertexColor;
		15 16   
		16 17   void main() {
		17 18       gl_Position = ProjMat * ModelViewMat * vec4(Position, 1.0);
		18 19   
		   20 +     sphericalVertexDistance = fog_spherical_distance(Position);
		   21 +     cylindricalVertexDistance = fog_cylindrical_distance(Position);
		19    -     vertexDistance = fog_distance(Position, FogShape);
		20 22       vertexColor = Color * texelFetch(Sampler2, UV2 / 16, 0);
		21 23   }
		        '''
	Changed file "core/rendertype_text_intensity.vsh":
		Total line: 26 (+4, -2)
		        '''
		        ...
		 9  9   in vec2 UV0;
		10 10   in ivec2 UV2;
		11 11   
		12 12   uniform sampler2D Sampler2;
		13 13   
		   14 + out float sphericalVertexDistance;
		   15 + out float cylindricalVertexDistance;
		14    - out float vertexDistance;
		15 16   out vec4 vertexColor;
		16 17   out vec2 texCoord0;
		17 18   
		18 19   void main() {
		19 20       gl_Position = ProjMat * ModelViewMat * vec4(Position, 1.0);
		20 21   
		   22 +     sphericalVertexDistance = fog_spherical_distance(Position);
		   23 +     cylindricalVertexDistance = fog_cylindrical_distance(Position);
		21    -     vertexDistance = fog_distance(Position, FogShape);
		22 24       vertexColor = Color * texelFetch(Sampler2, UV2 / 16, 0);
		23 25       texCoord0 = UV0;
		24 26   }
		        '''
	Changed file "core/sky.vsh":
		Total line: 17 (+4, -2)
		        '''
		        ...
		 4  4   #moj_import <minecraft:dynamictransforms.glsl>
		 5  5   #moj_import <minecraft:projection.glsl>
		 6  6   
		 7  7   in vec3 Position;
		 8  8   
		    9 + out float sphericalVertexDistance;
		   10 + out float cylindricalVertexDistance;
		 9    - out float vertexDistance;
		10 11   
		11 12   void main() {
		12 13       gl_Position = ProjMat * ModelViewMat * vec4(Position, 1.0);
		13 14   
		   15 +     sphericalVertexDistance = fog_spherical_distance(Position);
		   16 +     cylindricalVertexDistance = fog_cylindrical_distance(Position);
		14    -     vertexDistance = fog_distance(Position, FOG_SHAPE_CYLINDER);
		15 17   }
		        '''
	Changed file "core/terrain.vsh":
		Total line: 32 (+4, -2)
		        '''
		        ...
		10 10   in ivec2 UV2;
		11 11   in vec3 Normal;
		12 12   
		13 13   uniform sampler2D Sampler2;
		14 14   
		   15 + out float sphericalVertexDistance;
		   16 + out float cylindricalVertexDistance;
		15    - out float vertexDistance;
		16 17   out vec4 vertexColor;
		17 18   out vec2 texCoord0;
		18 19   
		19 20   vec4 minecraft_sample_lightmap(sampler2D lightMap, ivec2 uv) {
		20 21       return texture(lightMap, clamp(uv / 256.0, vec2(0.5 / 16.0), vec2(15.5 / 16.0)));
		        ...
		22 23   
		23 24   void main() {
		24 25       vec3 pos = Position + ModelOffset;
		25 26       gl_Position = ProjMat * ModelViewMat * vec4(pos, 1.0);
		26 27   
		   28 +     sphericalVertexDistance = fog_spherical_distance(pos);
		   29 +     cylindricalVertexDistance = fog_cylindrical_distance(pos);
		27    -     vertexDistance = fog_distance(pos, FogShape);
		28 30       vertexColor = Color * minecraft_sample_lightmap(Sampler2, UV2);
		29 31       texCoord0 = UV0;
		30 32   }
		        '''
	Added file "core/panorama.vsh":
		'''
		#version 150
		
		#moj_import <minecraft:dynamictransforms.glsl>
		#moj_import <minecraft:projection.glsl>
		
		in vec3 Position;
		out vec3 texCoord0;
		
		void main() {
		    gl_Position = ProjMat * ModelViewMat * vec4(Position, 1.0);
		
		    texCoord0 = Position;
		}
		'''