Difference of "text_packs" between "25w19a" (snapshot of "1.21.6") and "25w20a" (snapshot of "1.21.6").

Changed resource pack "minecraft":
	Changed file "core/entity.vsh":
		Total line: 44 (+2, -0)
		        '''
		        ...
		30 30   #ifdef NO_CARDINAL_LIGHTING
		31 31       vertexColor = Color;
		32 32   #else
		33 33       vertexColor = minecraft_mix_light(Light0_Direction, Light1_Direction, Normal, Color);
		34 34   #endif
		   35 + #ifndef EMISSIVE
		35 36       lightMapColor = texelFetch(Sampler2, UV2 / 16, 0);
		   37 + #endif
		36 38       overlayColor = texelFetch(Sampler1, UV1, 0);
		37 39   
		38 40       texCoord0 = UV0;
		39 41   #ifdef APPLY_TEXTURE_MATRIX
		40 42       texCoord0 = (TextureMat * vec4(UV0, 0.0, 1.0)).xy;
		        ...
		        '''
	Changed file "core/rendertype_clouds.vsh":
		Total line: 101 (+29, -16)
		          '''
		          ...
		 24  24   const vec3[] vertices = vec3[](
		 25  25       // Bottom face
		 26  26       vec3(1, 0, 0),
		 27  27       vec3(1, 0, 1),
		 28  28       vec3(0, 0, 1),
		     29 +     vec3(0, 0, 1),
		 29  30       vec3(0, 0, 0),
		     31 +     vec3(1, 0, 0),
		 30  32       // Top face
		 31  33       vec3(0, 1, 0),
		 32  34       vec3(0, 1, 1),
		     35 +     vec3(1, 1, 1),
		     36 +     vec3(1, 1, 1),
		     37 +     vec3(1, 1, 0),
		     38 +     vec3(0, 1, 0),
		     39 +     // North face
		     40 +     vec3(0, 0, 0),
		     41 +     vec3(0, 1, 0),
		 33     -     vec3(1, 1, 1),
		 34  42       vec3(1, 1, 0),
		 35     -     // North face
		     43 +     vec3(1, 1, 0),
		     44 +     vec3(1, 0, 0),
		 36  45       vec3(0, 0, 0),
		     46 +     // South face
		     47 +     vec3(1, 0, 1),
		     48 +     vec3(1, 1, 1),
		     49 +     vec3(0, 1, 1),
		 37     -     vec3(0, 1, 0),
		 38     -     vec3(1, 1, 0),
		 39     -     vec3(1, 0, 0),
		 40     -     // South face
		 41     -     vec3(1, 0, 1),
		 42     -     vec3(1, 1, 1),
		 43  50       vec3(0, 1, 1),
		 44  51       vec3(0, 0, 1),
		     52 +     vec3(1, 0, 1),
		 45  53       // West face
		 46  54       vec3(0, 0, 1),
		 47  55       vec3(0, 1, 1),
		     56 +     vec3(0, 1, 0),
		     57 +     vec3(0, 1, 0),
		     58 +     vec3(0, 0, 0),
		     59 +     vec3(0, 0, 1),
		     60 +     // East face
		     61 +     vec3(1, 0, 0),
		     62 +     vec3(1, 1, 0),
		     63 +     vec3(1, 1, 1),
		 48     -     vec3(0, 1, 0),
		 49     -     vec3(0, 0, 0),
		 50     -     // East face
		 51     -     vec3(1, 0, 0),
		 52     -     vec3(1, 1, 0),
		 53  64       vec3(1, 1, 1),
		     65 +     vec3(1, 0, 1),
		     66 +     vec3(1, 0, 0)
		 54     -     vec3(1, 0, 1)
		 55  67   );
		 56  68   
		 57  69   const vec4[] faceColors = vec4[](
		 58  70       // Bottom face
		 59  71       vec4(0.7, 0.7, 0.7, 0.8),
		          ...
		 68  80       // East face
		 69  81       vec4(0.9, 0.9, 0.9, 0.8)
		 70  82   );
		 71  83   
		 72  84   void main() {
		     85 +     int quadVertex = gl_VertexID % 6;
		     86 +     int index = (gl_VertexID / 6) * 3;
		 73     -     int index = gl_InstanceID * 3;
		 74  87       int cellX = texelFetch(CloudFaces, index).r;
		 75  88       int cellZ = texelFetch(CloudFaces, index + 1).r;
		 76  89       int dirAndFlags = texelFetch(CloudFaces, index + 2).r;
		 77  90       int direction = dirAndFlags & FLAG_MASK_DIR;
		 78  91       bool isInsideFace = (dirAndFlags & FLAG_INSIDE_FACE) == FLAG_INSIDE_FACE;
		 79  92       bool useTopColor = (dirAndFlags & FLAG_USE_TOP_COLOR) == FLAG_USE_TOP_COLOR;
		 80  93       cellX = (cellX << 1) | ((dirAndFlags & FLAG_EXTRA_X) >> 7);
		 81  94       cellZ = (cellZ << 1) | ((dirAndFlags & FLAG_EXTRA_Z) >> 6);
		     95 +     vec3 faceVertex = vertices[(direction * 6) + (isInsideFace ? 5 - quadVertex : quadVertex)];
		 82     -     vec3 faceVertex = vertices[(direction * 4) + (isInsideFace ? 3 - gl_VertexID : gl_VertexID)];
		 83  96       vec3 pos = (faceVertex * CellSize) + (vec3(cellX, 0, cellZ) * CellSize) + CloudOffset;
		 84  97       gl_Position = ProjMat * ModelViewMat * vec4(pos, 1.0);
		 85  98   
		 86  99       vertexDistance = fog_spherical_distance(pos);
		 87 100       vertexColor = (useTopColor ? faceColors[1] : faceColors[direction]) * CloudColor;
		          ...
		          '''
	Changed file "core/rendertype_crumbling.vsh":
		Total line: 27 (+5, -0)
		        '''
		 1  1   #version 150
		 2  2   
		    3 + #moj_import <minecraft:fog.glsl>
		 3  4   #moj_import <minecraft:dynamictransforms.glsl>
		 4  5   #moj_import <minecraft:projection.glsl>
		 5  6   
		 6  7   in vec3 Position;
		 7  8   in vec4 Color;
		 8  9   in vec2 UV0;
		 9 10   in vec2 UV2;
		10 11   in vec3 Normal;
		11 12   
		   13 + out float sphericalVertexDistance;
		   14 + out float cylindricalVertexDistance;
		12 15   out vec4 vertexColor;
		13 16   out vec2 texCoord0;
		14 17   out vec2 texCoord2;
		15 18   
		16 19   void main() {
		17 20       gl_Position = ProjMat * ModelViewMat * vec4(Position, 1.0);
		18 21   
		   22 +     sphericalVertexDistance = fog_spherical_distance(Position);
		   23 +     cylindricalVertexDistance = fog_cylindrical_distance(Position);
		19 24       vertexColor = Color;
		20 25       texCoord0 = UV0;
		21 26       texCoord2 = UV2;
		22 27   }
		        '''
	Changed file "core/rendertype_translucent_moving_block.vsh":
		Total line: 27 (+5, -0)
		        '''
		 1  1   #version 150
		 2  2   
		    3 + #moj_import <minecraft:fog.glsl>
		 3  4   #moj_import <minecraft:dynamictransforms.glsl>
		 4  5   #moj_import <minecraft:projection.glsl>
		 5  6   
		 6  7   in vec3 Position;
		 7  8   in vec4 Color;
		        ...
		 9 10   in ivec2 UV2;
		10 11   in vec3 Normal;
		11 12   
		12 13   uniform sampler2D Sampler2;
		13 14   
		   15 + out float sphericalVertexDistance;
		   16 + out float cylindricalVertexDistance;
		14 17   out vec4 vertexColor;
		15 18   out vec2 texCoord0;
		16 19   
		17 20   void main() {
		18 21       gl_Position = ProjMat * ModelViewMat * vec4(Position, 1.0);
		19 22   
		   23 +     sphericalVertexDistance = fog_spherical_distance(Position);
		   24 +     cylindricalVertexDistance = fog_cylindrical_distance(Position);
		20 25       vertexColor = Color * texelFetch(Sampler2, UV2 / 16, 0);
		21 26       texCoord0 = UV0;
		22 27   }
		        '''