Difference of "shaders_resource_packs" between "1.16.210.57" (beta of "1.16.210") and "1.16.210.58" (beta of "1.16.210").

Changed resource pack "banner.fragment":
	Changed file "vanilla":
		Total line: 50 (+0, -0)
		        '''
		 1  1   // __multiversion__
		 2  2   // This signals the loading code to prepend either #version 100 or #version 300 es as apropriate.
		 3  3   
		    4 + #include "fragmentVersionCentroid.glslh"
		    5 + #include "uniformShaderConstants.glslh"
		 4    - #include "fragmentVersionCentroid.h"
		 5    - #include "uniformShaderConstants.h"
		 6  6   
		 7  7   LAYOUT_BINDING(0) uniform sampler2D TEXTURE_0;
		 8  8   
		 9  9   #if __VERSION__ >= 300
		10 10   _centroid varying vec4 uv;
		        ...
		        '''
Changed resource pack "banner.vertex":
	Changed file "vanilla":
		Total line: 122 (+0, -0)
		          '''
		  1   1   // __multiversion__
		  2   2   // This signals the loading code to prepend either #version 100 or #version 300 es as apropriate.
		  3   3   
		      4 + #include "vertexVersionCentroid.glslh"
		  4     - #include "vertexVersionCentroid.h"
		  5   5   
		      6 + #include "uniformWorldConstants.glslh"
		      7 + #include "uniformEntityConstants.glslh"
		      8 + #include "uniformPerFrameConstants.glslh"
		      9 + #include "uniformBannerConstants.glslh"
		  6     - #include "uniformWorldConstants.h"
		  7     - #include "uniformEntityConstants.h"
		  8     - #include "uniformPerFrameConstants.h"
		  9     - #include "uniformBannerConstants.h"
		 10  10   #ifdef USE_SKINNING
		     11 + #include "uniformAnimationConstants.glslh"
		 11     - #include "uniformAnimationConstants.h"
		 12  12   #endif
		 13  13   
		 14  14   attribute mediump vec4 POSITION;
		 15  15   attribute vec2 TEXCOORD_0;
		 16  16   attribute vec4 NORMAL;
		          ...
		          '''
Changed resource pack "barrier.vertex":
	Changed file "vanilla":
		Total line: 61 (+0, -0)
		        '''
		 1  1   // __multiversion__
		 2  2   
		    3 + #include "vertexVersionCentroid.glslh"
		 3    - #include "vertexVersionCentroid.h"
		 4  4   
		    5 + #include "uniformWorldConstants.glslh"
		    6 + #include "uniformPerFrameConstants.glslh"
		    7 + #include "uniformShaderConstants.glslh"
		    8 + #include "uniformRenderChunkConstants.glslh"
		 5    - #include "uniformWorldConstants.h"
		 6    - #include "uniformPerFrameConstants.h"
		 7    - #include "uniformShaderConstants.h"
		 8    - #include "uniformRenderChunkConstants.h"
		 9  9   
		10 10   attribute mediump vec4 POSITION;
		11 11   
		12 12   attribute vec4 COLOR;
		13 13   attribute vec2 TEXCOORD_0;
		        ...
		        '''
Changed resource pack "blur.fragment":
	Changed file "vanilla":
		Total line: 13 (+0, -0)
		        '''
		 1  1   // __multiversion__
		 2  2   // This signals the loading code to prepend either #version 100 or #version 300 es as apropriate.
		 3  3   
		    4 + #include "fragmentVersionCentroidUV.glslh"
		 4    - #include "fragmentVersionCentroidUV.h"
		 5  5   
		 6  6   LAYOUT_BINDING(0) uniform sampler2D TEXTURE_0;
		 7  7   
		 8  8   
		 9  9   void main() {
		        ...
		        '''
Changed resource pack "cloud.vertex":
	Changed file "vanilla":
		Total line: 32 (+0, -0)
		        '''
		 1  1   // __multiversion__
		 2  2   // This signals the loading code to prepend either #version 100 or #version 300 es as apropriate.
		 3  3   
		    4 + #include "vertexVersionSimple.glslh"
		 4    - #include "vertexVersionSimple.h"
		 5  5   
		    6 + #include "uniformWorldConstants.glslh"
		    7 + #include "uniformPerFrameConstants.glslh"
		    8 + #include "uniformShaderConstants.glslh"
		 6    - #include "uniformWorldConstants.h"
		 7    - #include "uniformPerFrameConstants.h"
		 8    - #include "uniformShaderConstants.h"
		 9  9   
		10 10   attribute mediump vec4 POSITION;
		11 11   attribute vec4 COLOR;
		12 12   
		13 13   varying vec4 color;
		        ...
		        '''
Changed resource pack "color.fragment":
	Changed file "vanilla":
		Total line: 11 (+0, -0)
		        '''
		 1  1   // __multiversion__
		 2  2   // This signals the loading code to prepend either #version 100 or #version 300 es as apropriate.
		 3  3   
		    4 + #include "fragmentVersionSimple.glslh"
		 4    - #include "fragmentVersionSimple.h"
		 5  5   
		 6  6   varying vec4 color;
		 7  7   
		 8  8   void main()
		 9  9   {
		        ...
		        '''
Changed resource pack "color.vertex":
	Changed file "vanilla":
		Total line: 18 (+0, -0)
		        '''
		 1  1   // __multiversion__
		 2  2   // This signals the loading code to prepend either #version 100 or #version 300 es as apropriate.
		 3  3   
		    4 + #include "vertexVersionSimple.glslh"
		 4    - #include "vertexVersionSimple.h"
		 5  5   
		    6 + #include "uniformWorldConstants.glslh"
		 6    - #include "uniformWorldConstants.h"
		 7  7   
		 8  8   attribute mediump vec4 POSITION;
		 9  9   attribute vec4 COLOR;
		10 10   
		11 11   varying vec4 color;
		        ...
		        '''
Changed resource pack "color_ex.fragment":
	Changed file "vanilla":
		Total line: 13 (+0, -0)
		        '''
		 1  1   // __multiversion__
		 2  2   // This signals the loading code to prepend either #version 100 or #version 300 es as apropriate.
		 3  3   
		    4 + #include "fragmentVersionSimple.glslh"
		 4    - #include "fragmentVersionSimple.h"
		 5  5   
		    6 + #include "uniformShaderConstants.glslh"
		 6    - #include "uniformShaderConstants.h"
		 7  7   
		 8  8   varying vec4 color;
		 9  9   
		10 10   void main()
		11 11   {
		        ...
		        '''
Changed resource pack "color_grayscale.fragment":
	Changed file "vanilla":
		Total line: 25 (+0, -0)
		        '''
		 1  1   // __multiversion__
		 2  2   // This signals the loading code to prepend either #version 100 or #version 300 es as apropriate.
		 3  3   
		    4 + #include "fragmentVersionCentroidUV.glslh"
		 4    - #include "fragmentVersionCentroidUV.h"
		 5  5   
		    6 + #include "uniformShaderConstants.glslh"
		 6    - #include "uniformShaderConstants.h"
		 7  7   
		 8  8   LAYOUT_BINDING(0) uniform sampler2D TEXTURE_0;
		 9  9   
		10 10   void main()
		11 11   {
		        ...
		        '''
Changed resource pack "color_texture.fragment":
	Changed file "vanilla":
		Total line: 101 (+0, -0)
		          '''
		  1   1   // __multiversion__
		  2   2   // This signals the loading code to prepend either #version 100 or #version 300 es as apropriate.
		  3   3   
		      4 + #include "fragmentVersionCentroidUV.glslh"
		  4     - #include "fragmentVersionCentroidUV.h"
		  5   5   
		      6 + #include "uniformEntityConstants.glslh"
		      7 + #include "uniformShaderConstants.glslh"
		  6     - #include "uniformEntityConstants.h"
		  7     - #include "uniformShaderConstants.h"
		  8   8   
		  9   9   LAYOUT_BINDING(0) uniform sampler2D TEXTURE_0;
		 10  10   LAYOUT_BINDING(1) uniform sampler2D TEXTURE_1;
		 11  11   
		 12  12   #ifdef EFFECTS_OFFSET
		     13 + #include "uniformEffectsConstants.glslh"
		 13     - #include "uniformEffectsConstants.h"
		 14  14   #endif
		 15  15   
		 16  16   varying vec4 color;
		 17  17   
		 18  18   #ifdef ENABLE_FOG
		          ...
		          '''
Changed resource pack "color_uv.vertex":
	Changed file "vanilla":
		Total line: 58 (+0, -0)
		        '''
		 1  1   // __multiversion__
		 2  2   // This signals the loading code to prepend either #version 100 or #version 300 es as apropriate.
		 3  3   
		    4 + #include "vertexVersionCentroidUV.glslh"
		 4    - #include "vertexVersionCentroidUV.h"
		 5  5   
		    6 + #include "uniformWorldConstants.glslh"
		    7 + #include "uniformEntityConstants.glslh"
		    8 + #include "uniformPerFrameConstants.glslh"
		 6    - #include "uniformWorldConstants.h"
		 7    - #include "uniformEntityConstants.h"
		 8    - #include "uniformPerFrameConstants.h"
		 9  9   
		10 10   attribute mediump vec4 POSITION;
		11 11   attribute vec4 COLOR;
		12 12   attribute vec2 TEXCOORD_0;
		13 13   
		        ...
		        '''
Changed resource pack "current_color.fragment":
	Changed file "vanilla":
		Total line: 15 (+0, -0)
		        '''
		 1  1   // __multiversion__
		 2  2   // This signals the loading code to prepend either #version 100 or #version 300 es as apropriate.
		 3  3   
		    4 + #include "fragmentVersionSimple.glslh"
		 4    - #include "fragmentVersionSimple.h"
		 5  5   
		    6 + #include "uniformShaderConstants.glslh"
		 6    - #include "uniformShaderConstants.h"
		 7  7   
		 8  8   void main()
		 9  9   {
		10 10   	gl_FragColor = CURRENT_COLOR;
		11 11   
		        ...
		        '''
Changed resource pack "depth_downsample.fragment":
	Changed file "vanilla":
		Total line: 18 (+0, -0)
		        '''
		        ...
		 4  4   // To use centroid sampling we need to have version 300 es shaders, which requires changing:
		 5  5   // attribute to in
		 6  6   // __multiversion__
		 7  7   // This signals the loading code to prepend either #version 100 or #version 300 es as apropriate.
		 8  8   
		    9 + #include "fragmentVersionCentroidUV.glslh"
		 9    - #include "fragmentVersionCentroidUV.h"
		10 10   
		11 11   LAYOUT_BINDING(0) uniform sampler2D TEXTURE_0;
		12 12   
		13 13   
		14 14   void main()
		        ...
		        '''
Changed resource pack "depth_of_field.fragment":
	Changed file "vanilla":
		Total line: 13 (+0, -0)
		        '''
		 1  1   // __multiversion__
		 2  2   // This signals the loading code to prepend either #version 100 or #version 300 es as apropriate.
		 3  3   
		    4 + #include "fragmentVersionCentroidUV.glslh"
		 4    - #include "fragmentVersionCentroidUV.h"
		 5  5   
		 6  6   LAYOUT_BINDING(0) uniform sampler2D TEXTURE_0;
		 7  7   
		 8  8   void main()
		 9  9   {
		        ...
		        '''
Changed resource pack "end_portal.fragment":
	Changed file "vanilla":
		Total line: 66 (+0, -0)
		        '''
		 1  1   // __multiversion__
		 2  2   // This signals the loading code to prepend either #version 100 or #version 300 es as apropriate.
		 3  3   
		    4 + #include "fragmentVersionCentroid.glslh"
		    5 + #include "uniformMacro.glslh"
		 4    - #include "fragmentVersionCentroid.h"
		 5    - #include "uniformMacro.h"
		 6  6   
		 7  7   #if __VERSION__ >= 300
		 8  8   	#ifndef BYPASS_PIXEL_SHADER
		 9  9   		#if defined(TEXEL_AA) && defined(TEXEL_AA_FEATURE)
		10 10   			_centroid in highp vec2 colorLookupUV;
		        ...
		        '''
Changed resource pack "end_portal.vertex":
	Changed file "vanilla":
		Total line: 116 (+0, -0)
		          '''
		          ...
		  7   7   // defining an out vec4 FragColor and replacing uses of gl_FragColor with FragColor
		  8   8   // texture2D to texture
		  9   9   
		 10  10   precision highp float;
		 11  11   
		     12 + #include "vertexVersionCentroid.glslh"
		 12     - #include "vertexVersionCentroid.h"
		 13  13   
		 14  14   #if __VERSION__ >= 300
		 15  15   	#ifndef BYPASS_PIXEL_SHADER
		 16  16   		_centroid out vec2 colorLookupUV;
		 17  17   		_centroid out vec2 parallaxUV;
		          ...
		 28  28   	#ifdef FOG
		 29  29   		varying vec4 fogColor;
		 30  30   	#endif
		 31  31   #endif
		 32  32   
		     33 + #include "uniformWorldConstants.glslh"
		     34 + #include "uniformPerFrameConstants.glslh"
		     35 + #include "uniformShaderConstants.glslh"
		     36 + #include "uniformRenderChunkConstants.glslh"
		 33     - #include "uniformWorldConstants.h"
		 34     - #include "uniformPerFrameConstants.h"
		 35     - #include "uniformShaderConstants.h"
		 36     - #include "uniformRenderChunkConstants.h"
		 37  37   
		 38  38   #ifndef BYPASS_PIXEL_SHADER
		 39  39   	attribute POS4 POSITION;
		 40  40   	attribute vec4 COLOR;
		 41  41   	attribute vec2 TEXCOORD_0;
		          ...
		          '''
Changed resource pack "entity.fragment":
	Changed file "vanilla":
		Total line: 188 (+0, -0)
		          '''
		  1   1   // __multiversion__
		  2   2   // This signals the loading code to prepend either #version 100 or #version 300 es as apropriate.
		  3   3   
		  4   4   
		      5 + #include "fragmentVersionCentroidUV.glslh"
		      6 + #include "uniformEntityConstants.glslh"
		  5     - #include "fragmentVersionCentroidUV.h"
		  6     - #include "uniformEntityConstants.h"
		  7   7   
		  8   8   
		      9 + #include "uniformShaderConstants.glslh"
		     10 + #include "util.glslh"
		  9     - #include "uniformShaderConstants.h"
		 10     - #include "util.h"
		 11  11   
		 12  12   LAYOUT_BINDING(0) uniform sampler2D TEXTURE_0;
		 13  13   LAYOUT_BINDING(1) uniform sampler2D TEXTURE_1;
		 14  14   
		 15  15   #ifdef USE_MULTITEXTURE
		          ...
		          '''
Changed resource pack "entity.vertex":
	Changed file "vanilla":
		Total line: 148 (+0, -0)
		          '''
		  1   1   // __multiversion__
		  2   2   // This signals the loading code to prepend either #version 100 or #version 300 es as apropriate.
		  3   3   
		      4 + #include "vertexVersionCentroidUV.glslh"
		  4     - #include "vertexVersionCentroidUV.h"
		  5   5   
		      6 + #include "uniformWorldConstants.glslh"
		      7 + #include "uniformEntityConstants.glslh"
		      8 + #include "uniformPerFrameConstants.glslh"
		  6     - #include "uniformWorldConstants.h"
		  7     - #include "uniformEntityConstants.h"
		  8     - #include "uniformPerFrameConstants.h"
		  9   9   #ifdef USE_SKINNING
		     10 + #include "uniformAnimationConstants.glslh"
		 10     - #include "uniformAnimationConstants.h"
		 11  11   #endif
		 12  12   
		 13  13   #line 13
		 14  14   
		 15  15   attribute mediump vec4 POSITION;
		          ...
		          '''
Changed resource pack "flat_white.fragment":
	Changed file "vanilla":
		Total line: 9 (+0, -0)
		      '''
		1 1   // __multiversion__
		2 2   // This signals the loading code to prepend either #version 100 or #version 300 es as apropriate.
		3 3   
		  4 + #include "fragmentVersionSimple.glslh"
		4   - #include "fragmentVersionSimple.h"
		5 5   
		6 6   void main()
		7 7   {
		8 8   	gl_FragColor = vec4(1.0);
		9 9   }
		      '''
Moved resource pack "fragmentVersionCentroid.h" to "fragmentVersionCentroid.glslh".
Moved resource pack "fragmentVersionCentroidUV.h" to "fragmentVersionCentroidUV.glslh".
Moved resource pack "fragmentVersionSimple.h" to "fragmentVersionSimple.glslh".
Changed resource pack "hb_batched.fragment":
	Changed file "vanilla":
		Total line: 74 (+0, -0)
		        '''
		        ...
		 2  2   // This shader is from the Gameface library modified to work in the
		 3  3   // Bedrock engine and heavily depends on Gameface's functionality, why
		 4  4   // some numbers and values seem arbitrary or "magic".
		 5  5   
		 6  6   #if __VERSION__ >= 300
		    7 + 	#include "fragmentVersionSimple.glslh"
		    8 + 	#include "uniformMacro.glslh"
		 7    - 	#include "fragmentVersionSimple.h"
		 8    - 	#include "uniformMacro.h"
		 9  9   
		10 10   	LAYOUT_BINDING(0) uniform sampler2D TEXTURE_0;
		11 11   	LAYOUT_BINDING(1) uniform sampler2D TEXTURE_1;
		12 12   	LAYOUT_BINDING(2) uniform sampler2D TEXTURE_2;
		13 13   
		        ...
		        '''
Changed resource pack "hb_batched.vertex":
	Changed file "vanilla":
		Total line: 36 (+0, -0)
		        '''
		        ...
		 2  2   // This shader is from the Gameface library modified to work in the
		 3  3   // Bedrock engine and heavily depends on Gameface's functionality, why
		 4  4   // some numbers and values seem arbitrary or "magic".
		 5  5   
		 6  6   #if __VERSION__ >= 300
		    7 + 	#include "vertexVersionSimple.glslh"
		 7    - 	#include "vertexVersionSimple.h"
		 8  8   
		 9  9   	attribute highp vec3 HB_POSITION;
		10 10   	attribute vec4 HB_COLOR;
		11 11   	attribute vec4 HB_ADDITIONAL;
		12 12   
		        ...
		        '''
Changed resource pack "hb_blur.fragment":
	Changed file "vanilla":
		Total line: 33 (+0, -0)
		        '''
		 1  1   // __multiversion__
		 2  2   // This shader is from the Gameface library modified to work in the
		 3  3   // Bedrock engine and heavily depends on Gameface's functionality, why
		 4  4   // some numbers and values seem arbitrary or "magic".
		 5  5   
		    6 + #include "uniformUIEffectsPixelConstants.glslh"
		    7 + #include "fragmentVersionCentroidUV.glslh"
		 6    - #include "uniformUIEffectsPixelConstants.h"
		 7    - #include "fragmentVersionCentroidUV.h"
		 8  8   
		 9  9   varying vec4 ColorOut;
		10 10   varying vec4 AdditionalOut;
		11 11   // We need this here even if we do not use it as some drivers require
		12 12   // the verying variables to match between the vertex and fragment shaders.
		        ...
		        '''
Changed resource pack "hb_hairline.fragment":
	Changed file "vanilla":
		Total line: 19 (+0, -0)
		        '''
		 1  1   // __multiversion__
		 2  2   // This shader is from the Gameface library modified to work in the
		 3  3   // Bedrock engine and heavily depends on Gameface's functionality, why
		 4  4   // some numbers and values seem arbitrary or "magic".
		 5  5   
		    6 + #include "uniformMacro.glslh"
		    7 + #include "fragmentVersionCentroidUV.glslh"
		 6    - #include "uniformMacro.h"
		 7    - #include "fragmentVersionCentroidUV.h"
		 8  8   
		 9  9   varying vec4 ColorOut;
		10 10   varying vec4 AdditionalOut;
		11 11   varying vec3 ScreenNormalPosition;
		12 12   
		        ...
		        '''
Changed resource pack "hb_path.fragment":
	Changed file "vanilla":
		Total line: 14 (+0, -0)
		        '''
		 1  1   // __multiversion__
		 2  2   // This shader is from the Gameface library modified to work in the
		 3  3   // Bedrock engine and heavily depends on Gameface's functionality, why
		 4  4   // some numbers and values seem arbitrary or "magic".
		 5  5   
		    6 + #include "fragmentVersionSimple.glslh"
		 6    - #include "fragmentVersionSimple.h"
		 7  7   
		    8 + #include "uniformUIStandardPrimitiveAdditionalPixelConstants.glslh"
		 8    - #include "uniformUIStandardPrimitiveAdditionalPixelConstants.h"
		 9  9   
		10 10   varying vec2 ExtraParams;
		11 11   
		12 12   void main() {
		13 13   	gl_FragColor = PRIM_PROPS_0 * ExtraParams.y;
		        ...
		        '''
Changed resource pack "hb_path.vertex":
	Changed file "vanilla":
		Total line: 24 (+0, -0)
		        '''
		 1  1   // __multiversion__
		 2  2   // This shader is from the Gameface library modified to work in the
		 3  3   // Bedrock engine and heavily depends on Gameface's functionality, why
		 4  4   // some numbers and values seem arbitrary or "magic".
		 5  5   
		    6 + #include "vertexVersionSimple.glslh"
		    7 + #include "uniformUITransformsConstants.glslh"
		 6    - #include "vertexVersionSimple.h"
		 7    - #include "uniformUITransformsConstants.h"
		 8  8   
		 9  9   attribute highp vec4 HB_POSITION;
		10 10   
		11 11   varying vec2 ExtraParams;
		12 12   
		        ...
		        '''
Changed resource pack "hb_path_hairline.fragment":
	Changed file "vanilla":
		Total line: 37 (+0, -0)
		        '''
		 1  1   // __multiversion__
		 2  2   // This shader is from the Gameface library modified to work in the
		 3  3   // Bedrock engine and heavily depends on Gameface's functionality, why
		 4  4   // some numbers and values seem arbitrary or "magic".
		 5  5   
		    6 + #include "fragmentVersionSimple.glslh"
		 6    - #include "fragmentVersionSimple.h"
		 7  7   
		    8 + #include "uniformUIStandardPrimitivePixelConstants.glslh"
		    9 + #include "uniformUIStandardPrimitiveAdditionalPixelConstants.glslh"
		 8    - #include "uniformUIStandardPrimitivePixelConstants.h"
		 9    - #include "uniformUIStandardPrimitiveAdditionalPixelConstants.h"
		10 10   
		11 11   varying vec2 ExtraParams;
		12 12   
		13 13   void main() {
		14 14   	if (SHADER_TYPE == 14) {
		        ...
		        '''
Changed resource pack "hb_renoir.fragment":
	Changed file "vanilla":
		Total line: 52 (+0, -0)
		        '''
		 1  1   // __multiversion__
		 2  2   // This shader is from the Gameface library modified to work in the
		 3  3   // Bedrock engine and heavily depends on Gameface's functionality, why
		 4  4   // some numbers and values seem arbitrary or "magic".
		 5  5   
		    6 + #include "fragmentVersionSimple.glslh"
		 6    - #include "fragmentVersionSimple.h"
		 7  7   
		    8 + #include "uniformUIRenoirShaderPSConstants.glslh"
		 8    - #include "uniformUIRenoirShaderPSConstants.h"
		 9  9   
		10 10   varying vec4 ColorOut;
		11 11   varying vec4 AdditionalOut;
		12 12   // We need this here even if we do not use it as some drivers require
		13 13   // the verying variables to match between the vertex and fragment shaders.
		        ...
		        '''
Changed resource pack "hb_renoir.vertex":
	Changed file "vanilla":
		Total line: 45 (+0, -0)
		        '''
		 1  1   // __multiversion__
		 2  2   // This shader is from the Gameface library modified to work in the
		 3  3   // Bedrock engine and heavily depends on Gameface's functionality, why
		 4  4   // some numbers and values seem arbitrary or "magic".
		 5  5   
		    6 + #include "vertexVersionSimple.glslh"
		 6    - #include "vertexVersionSimple.h"
		 7  7   
		    8 + #include "uniformUITransformsConstants.glslh"
		    9 + #include "uniformUIRenoirShaderVSConstants.glslh"
		 8    - #include "uniformUITransformsConstants.h"
		 9    - #include "uniformUIRenoirShaderVSConstants.h"
		10 10   
		11 11   attribute highp vec3 HB_POSITION;
		12 12   attribute vec4 HB_COLOR;
		13 13   attribute vec4 HB_ADDITIONAL;
		14 14   
		        ...
		        '''
Changed resource pack "hb_standard.fragment":
	Changed file "vanilla":
		Total line: 18 (+0, -0)
		        '''
		 1  1   // __multiversion__
		 2  2   // This shader is from the Gameface library modified to work in the
		 3  3   // Bedrock engine and heavily depends on Gameface's functionality, why
		 4  4   // some numbers and values seem arbitrary or "magic".
		 5  5   
		    6 + #include "fragmentVersionSimple.glslh"
		 6    - #include "fragmentVersionSimple.h"
		 7  7   
		 8  8   varying vec4 ColorOut;
		 9  9   varying vec4 AdditionalOut;
		10 10   // We need this here even if we do not use it as some drivers require
		11 11   // the verying variables to match between the vertex and fragment shaders.
		        ...
		        '''
Changed resource pack "hb_standard.vertex":
	Changed file "vanilla":
		Total line: 31 (+0, -0)
		        '''
		 1  1   // __multiversion__
		 2  2   // This shader is from the Gameface library modified to work in the
		 3  3   // Bedrock engine and heavily depends on Gameface's functionality, why
		 4  4   // some numbers and values seem arbitrary or "magic".
		 5  5   
		    6 + #include "vertexVersionSimple.glslh"
		 6    - #include "vertexVersionSimple.h"
		 7  7   
		    8 + #include "uniformUITransformsConstants.glslh"
		 8    - #include "uniformUITransformsConstants.h"
		 9  9   
		10 10   attribute highp vec3 HB_POSITION;
		11 11   attribute vec4 HB_COLOR;
		12 12   attribute vec4 HB_ADDITIONAL;
		13 13   
		        ...
		        '''
Changed resource pack "hb_standard_circle.fragment":
	Changed file "vanilla":
		Total line: 23 (+0, -0)
		        '''
		 1  1   // __multiversion__
		 2  2   // This shader is from the Gameface library modified to work in the
		 3  3   // Bedrock engine and heavily depends on Gameface's functionality, why
		 4  4   // some numbers and values seem arbitrary or "magic".
		 5  5   
		    6 + #include "fragmentVersionSimple.glslh"
		 6    - #include "fragmentVersionSimple.h"
		 7  7   
		    8 + #include "uniformUIGlobalPixelConstants.glslh"
		 8    - #include "uniformUIGlobalPixelConstants.h"
		 9  9   
		10 10   varying vec4 ColorOut;
		11 11   varying vec4 AdditionalOut;
		12 12   varying vec3 ScreenNormalPosition;
		13 13   
		        ...
		        '''
Changed resource pack "hb_standard_ellipse.fragment":
	Changed file "vanilla":
		Total line: 51 (+0, -0)
		        '''
		 1  1   // __multiversion__
		 2  2   // This shader is from the Gameface library modified to work in the
		 3  3   // Bedrock engine and heavily depends on Gameface's functionality, why
		 4  4   // some numbers and values seem arbitrary or "magic".
		 5  5   
		    6 + #include "fragmentVersionSimple.glslh"
		 6    - #include "fragmentVersionSimple.h"
		 7  7   
		    8 + #include "uniformUIGlobalPixelConstants.glslh"
		 8    - #include "uniformUIGlobalPixelConstants.h"
		 9  9   
		10 10   varying vec4 ColorOut;
		11 11   varying vec4 AdditionalOut;
		12 12   varying vec3 ScreenNormalPosition;
		13 13   
		        ...
		        '''
Changed resource pack "hb_standard_stroke_circle.fragment":
	Changed file "vanilla":
		Total line: 24 (+0, -0)
		        '''
		 1  1   // __multiversion__
		 2  2   // This shader is from the Gameface library modified to work in the
		 3  3   // Bedrock engine and heavily depends on Gameface's functionality, why
		 4  4   // some numbers and values seem arbitrary or "magic".
		 5  5   
		    6 + #include "fragmentVersionSimple.glslh"
		 6    - #include "fragmentVersionSimple.h"
		 7  7   
		 8  8   varying vec4 ColorOut;
		 9  9   varying vec4 AdditionalOut;
		10 10   varying vec3 ScreenNormalPosition;
		11 11   
		        ...
		        '''
Changed resource pack "hb_standard_stroke_ellipse.fragment":
	Changed file "vanilla":
		Total line: 75 (+0, -0)
		        '''
		 1  1   // __multiversion__
		 2  2   // This shader is from the Gameface library modified to work in the
		 3  3   // Bedrock engine and heavily depends on Gameface's functionality, why
		 4  4   // some numbers and values seem arbitrary or "magic".
		 5  5   
		    6 + #include "fragmentVersionSimple.glslh"
		 6    - #include "fragmentVersionSimple.h"
		 7  7   
		    8 + #include "uniformUIStandardPrimitiveAdditionalPixelConstants.glslh"
		 8    - #include "uniformUIStandardPrimitiveAdditionalPixelConstants.h"
		 9  9   
		10 10   varying vec4 ColorOut;
		11 11   varying vec4 AdditionalOut;
		12 12   varying vec3 ScreenNormalPosition;
		13 13   
		        ...
		        '''
Changed resource pack "hb_standard_texture.fragment":
	Changed file "vanilla":
		Total line: 40 (+0, -0)
		        '''
		 1  1   // __multiversion__
		 2  2   // This shader is from the Gameface library modified to work in the
		 3  3   // Bedrock engine and heavily depends on Gameface's functionality, why
		 4  4   // some numbers and values seem arbitrary or "magic".
		 5  5   
		    6 + #include "fragmentVersionSimple.glslh"
		 6    - #include "fragmentVersionSimple.h"
		 7  7   
		    8 + #include "uniformUIEffectsPixelConstants.glslh"
		    9 + #include "uniformUIStandardPrimitivePixelConstants.glslh"
		 8    - #include "uniformUIEffectsPixelConstants.h"
		 9    - #include "uniformUIStandardPrimitivePixelConstants.h"
		10 10   
		11 11   varying vec4 ColorOut;
		12 12   varying vec4 AdditionalOut;
		13 13   // We need this here even if we do not use it as some drivers require
		14 14   // the verying variables to match between the vertex and fragment shaders.
		        ...
		        '''
Changed resource pack "hb_standard_texture_with_color_matrix.fragment":
	Changed file "vanilla":
		Total line: 32 (+0, -0)
		        '''
		 1  1   // __multiversion__
		 2  2   // This shader is from the Gameface library modified to work in the
		 3  3   // Bedrock engine and heavily depends on Gameface's functionality, why
		 4  4   // some numbers and values seem arbitrary or "magic".
		 5  5   
		    6 + #include "fragmentVersionSimple.glslh"
		 6    - #include "fragmentVersionSimple.h"
		 7  7   
		    8 + #include "uniformUIEffectsPixelConstants.glslh"
		 8    - #include "uniformUIEffectsPixelConstants.h"
		 9  9   
		10 10   varying vec4 ColorOut;
		11 11   varying vec4 AdditionalOut;
		12 12   // We need this here even if we do not use it as some drivers require
		13 13   // the verying variables to match between the vertex and fragment shaders.
		        ...
		        '''
Changed resource pack "hb_stencil.fragment":
	Changed file "vanilla":
		Total line: 22 (+0, -0)
		        '''
		 1  1   // __multiversion__
		 2  2   // This shader is from the Gameface library modified to work in the
		 3  3   // Bedrock engine and heavily depends on Gameface's functionality, why
		 4  4   // some numbers and values seem arbitrary or "magic".
		 5  5   
		    6 + #include "fragmentVersionSimple.glslh"
		 6    - #include "fragmentVersionSimple.h"
		 7  7   
		 8  8   // We need this here even if we do not use it as some drivers require
		 9  9   // the verying variables to match between the vertex and fragment shaders.
		10 10   varying vec4 ColorOut;
		11 11   varying vec4 AdditionalOut;
		        ...
		        '''
Changed resource pack "hb_stencil_circle.fragment":
	Changed file "vanilla":
		Total line: 25 (+0, -0)
		        '''
		 1  1   // __multiversion__
		 2  2   // This shader is from the Gameface library modified to work in the
		 3  3   // Bedrock engine and heavily depends on Gameface's functionality, why
		 4  4   // some numbers and values seem arbitrary or "magic".
		 5  5   
		    6 + #include "fragmentVersionSimple.glslh"
		 6    - #include "fragmentVersionSimple.h"
		 7  7   
		 8  8   varying vec4 ColorOut;
		 9  9   varying vec4 AdditionalOut;
		10 10   varying vec3 ScreenNormalPosition;
		11 11   
		        ...
		        '''
Changed resource pack "hb_stencil_path.fragment":
	Changed file "vanilla":
		Total line: 16 (+0, -0)
		        '''
		 1  1   // __multiversion__
		 2  2   // This shader is from the Gameface library modified to work in the
		 3  3   // Bedrock engine and heavily depends on Gameface's functionality, why
		 4  4   // some numbers and values seem arbitrary or "magic".
		 5  5   
		    6 + #include "fragmentVersionSimple.glslh"
		 6    - #include "fragmentVersionSimple.h"
		 7  7   
		 8  8   varying vec2 ExtraParams;
		 9  9   
		10 10   void main() {
		11 11   	if (ExtraParams.y < 0.00390625) {
		        ...
		        '''
Changed resource pack "hb_stencil_texture.fragment":
	Changed file "vanilla":
		Total line: 25 (+0, -0)
		        '''
		 1  1   // __multiversion__
		 2  2   // This shader is from the Gameface library modified to work in the
		 3  3   // Bedrock engine and heavily depends on Gameface's functionality, why
		 4  4   // some numbers and values seem arbitrary or "magic".
		 5  5   
		    6 + #include "fragmentVersionSimple.glslh"
		    7 + #include "uniformMacro.glslh"
		 6    - #include "fragmentVersionSimple.h"
		 7    - #include "uniformMacro.h"
		 8  8   
		 9  9   // We need this here even if we do not use it as some drivers require
		10 10   // the verying variables to match between the vertex and fragment shaders.
		11 11   varying vec4 ColorOut;
		12 12   varying vec4 AdditionalOut;
		        ...
		        '''
Changed resource pack "hb_text.fragment":
	Changed file "vanilla":
		Total line: 42 (+0, -0)
		        '''
		 1  1   // __multiversion__
		 2  2   // This shader is from the Gameface library modified to work in the
		 3  3   // Bedrock engine and heavily depends on Gameface's functionality, why
		 4  4   // some numbers and values seem arbitrary or "magic".
		 5  5   
		    6 + #include "fragmentVersionSimple.glslh"
		    7 + #include "uniformMacro.glslh"
		 6    - #include "fragmentVersionSimple.h"
		 7    - #include "uniformMacro.h"
		 8  8   
		    9 + #include "uniformUITextPSConstants.glslh"
		 9    - #include "uniformUITextPSConstants.h"
		10 10   
		11 11   varying vec4 ColorOut;
		12 12   varying vec4 AdditionalOut;
		13 13   // We need this here even if we do not use it as some drivers require
		14 14   // the verying variables to match between the vertex and fragment shaders.
		        ...
		        '''
Changed resource pack "hb_text_sdf.fragment":
	Changed file "vanilla":
		Total line: 42 (+0, -0)
		        '''
		 1  1   // __multiversion__
		 2  2   // This shader is from the Gameface library modified to work in the
		 3  3   // Bedrock engine and heavily depends on Gameface's functionality, why
		 4  4   // some numbers and values seem arbitrary or "magic".
		 5  5   
		    6 + #include "fragmentVersionSimple.glslh"
		 6    - #include "fragmentVersionSimple.h"
		 7  7   
		    8 + #include "uniformUIStandardPrimitiveAdditionalPixelConstants.glslh"
		 8    - #include "uniformUIStandardPrimitiveAdditionalPixelConstants.h"
		 9  9   
		10 10   varying vec4 ColorOut;
		11 11   varying vec4 AdditionalOut;
		12 12   // We need this here even if we do not use it as some drivers require
		13 13   // the verying variables to match between the vertex and fragment shaders.
		        ...
		        '''
Changed resource pack "hb_text_stroke_sdf.fragment":
	Changed file "vanilla":
		Total line: 36 (+0, -0)
		        '''
		 1  1   // __multiversion__
		 2  2   // This shader is from the Gameface library modified to work in the
		 3  3   // Bedrock engine and heavily depends on Gameface's functionality, why
		 4  4   // some numbers and values seem arbitrary or "magic".
		 5  5   
		    6 + #include "fragmentVersionSimple.glslh"
		 6    - #include "fragmentVersionSimple.h"
		 7  7   
		    8 + #include "uniformUIStandardPrimitiveAdditionalPixelConstants.glslh"
		 8    - #include "uniformUIStandardPrimitiveAdditionalPixelConstants.h"
		 9  9   
		10 10   varying vec4 ColorOut;
		11 11   varying vec4 AdditionalOut;
		12 12   // We need this here even if we do not use it as some drivers require
		13 13   // the verying variables to match between the vertex and fragment shaders.
		        ...
		        '''
Changed resource pack "hb_textures_with_color_mix.fragment":
	Changed file "vanilla":
		Total line: 248 (+0, -0)
		          '''
		          ...
		  2   2   // This shader is an HLSL to GLSL adaptation of the CohColorMixingPS.hlsl
		  3   3   // shader from the Gameface library. Modifications have been made to make
		  4   4   // it work in the Bedrock engine and heavily depends on Gameface's
		  5   5   // functionality, why some numbers and values seem arbitrary or "magic".
		  6   6   
		      7 + #include "fragmentVersionSimple.glslh"
		      8 + #include "uniformMacro.glslh"
		  7     - #include "fragmentVersionSimple.h"
		  8     - #include "uniformMacro.h"
		  9   9   
		     10 + #include "uniformUIStandardPrimitiveAdditionalPixelConstants.glslh"
		 10     - #include "uniformUIStandardPrimitiveAdditionalPixelConstants.h"
		 11  11   
		 12  12   varying vec4 ColorOut;
		 13  13   varying vec4 AdditionalOut;
		 14  14   // We need this here even if we do not use it as some drivers require
		 15  15   // the verying variables to match between the vertex and fragment shaders.
		          ...
		          '''
Changed resource pack "hb_yuv_2_rgb.fragment":
	Changed file "vanilla":
		Total line: 32 (+0, -0)
		        '''
		 1  1   // __multiversion__
		 2  2   // This shader is from the Gameface library modified to work in the
		 3  3   // Bedrock engine and heavily depends on Gameface's functionality, why
		 4  4   // some numbers and values seem arbitrary or "magic".
		 5  5   
		    6 + #include "fragmentVersionSimple.glslh"
		    7 + #include "uniformMacro.glslh"
		 6    - #include "fragmentVersionSimple.h"
		 7    - #include "uniformMacro.h"
		 8  8   
		 9  9   varying vec4 ColorOut;
		10 10   varying vec4 AdditionalOut;
		11 11   // We need this here even if we do not use it as some drivers require
		12 12   // the verying variables to match between the vertex and fragment shaders.
		        ...
		        '''
Changed resource pack "hologram_texture_stereo.fragment":
	Changed file "vanilla":
		Total line: 11 (+0, -0)
		        '''
		 1  1   // __multiversion__
		 2  2   // This signals the loading code to prepend either #version 100 or #version 300 es as apropriate.
		 3  3   
		    4 + #include "fragmentVersionCentroidUV.glslh"
		 4    - #include "fragmentVersionCentroidUV.h"
		 5  5   
		 6  6   //This file is purely here to let the code compile. It is used only for HoloWall, which currently runs only on DX11 compatible devices
		 7  7   
		 8  8   void main()
		 9  9   {
		        ...
		        '''
Changed resource pack "iteminhand.fragment":
	Changed file "vanilla":
		Total line: 17 (+0, -0)
		        '''
		 1  1   // __multiversion__
		 2  2   // This signals the loading code to prepend either #version 100 or #version 300 es as apropriate.
		 3  3   
		    4 + #include "fragmentVersionSimple.glslh"
		 4    - #include "fragmentVersionSimple.h"
		 5  5   
		    6 + #include "uniformEntityConstants.glslh"
		 6    - #include "uniformEntityConstants.h"
		 7  7   
		 8  8   varying vec4 light;
		 9  9   
		10 10   void main()
		11 11   {
		        ...
		        '''
Changed resource pack "levelstage_copy_vr.fragment":
	Changed file "vanilla":
		Total line: 11 (+0, -0)
		        '''
		 1  1   // __multiversion__
		 2  2   // This signals the loading code to prepend either #version 100 or #version 300 es as apropriate.
		 3  3   
		    4 + #include "fragmentVersionCentroidUV.glslh"
		 4    - #include "fragmentVersionCentroidUV.h"
		 5  5   
		 6  6   // This shader isn't actually used in OGL, we have to have an OGL shader since a material refers to the DX version
		 7  7   // and thus this also needs to exist on the OGL side.
		 8  8   void main()
		 9  9   {
		        ...
		        '''
Changed resource pack "normal_as_color.vertex":
	Changed file "vanilla":
		Total line: 19 (+0, -0)
		        '''
		 1  1   // __multiversion__
		 2  2   // This signals the loading code to prepend either #version 100 or #version 300 es as apropriate.
		 3  3   
		    4 + #include "vertexVersionSimple.glslh"
		 4    - #include "vertexVersionSimple.h"
		 5  5   
		    6 + #include "uniformWorldConstants.glslh"
		 6    - #include "uniformWorldConstants.h"
		 7  7   
		 8  8   attribute mediump vec4 POSITION;
		 9  9   attribute vec4 NORMAL;
		10 10   
		11 11   varying vec4 color;
		        ...
		        '''
Moved resource pack "nvn.h" to "nvn.glslh".
Added resource pack "nxFragmentHeader.glslh":
	file "vanilla":
		'''
		#version 430
		
		#include "nvn.glslh"
		'''
Removed resource pack "nxFragmentHeader.h":
	file "vanilla":
		'''
		#version 430
		
		#include "nvn.h"
		'''
Added resource pack "nxGeometryHeader.glslh":
	file "vanilla":
		'''
		#version 430
		
		#include "nvn.glslh"
		'''
Removed resource pack "nxGeometryHeader.h":
	file "vanilla":
		'''
		#version 430
		
		#include "nvn.h"
		'''
Added resource pack "nxVertexHeader.glslh":
	file "vanilla":
		'''
		#version 430
		
		#include "nvn.glslh"
		
		out gl_PerVertex
		{
			vec4 gl_Position;
		};
		'''
Removed resource pack "nxVertexHeader.h":
	file "vanilla":
		'''
		#version 430
		
		#include "nvn.h"
		
		out gl_PerVertex
		{
			vec4 gl_Position;
		};
		'''
Changed resource pack "particle_random_test.vertex":
	Changed file "vanilla":
		Total line: 61 (+0, -0)
		        '''
		 1  1   // __multiversion__
		 2  2   // This signals the loading code to prepend either #version 100 or #version 300 es as apropriate.
		 3  3   
		    4 + #include "vertexVersionCentroidUV.glslh"
		 4    - #include "vertexVersionCentroidUV.h"
		 5  5   
		    6 + #include "uniformWorldConstants.glslh"
		    7 + #include "uniformEntityConstants.glslh"
		    8 + #include "uniformPerFrameConstants.glslh"
		 6    - #include "uniformWorldConstants.h"
		 7    - #include "uniformEntityConstants.h"
		 8    - #include "uniformPerFrameConstants.h"
		 9  9   
		10 10   attribute mediump vec4 POSITION;
		11 11   attribute vec4 COLOR;
		12 12   attribute vec4 NORMAL;
		13 13   attribute vec2 TEXCOORD_0;
		        ...
		        '''
Changed resource pack "passthru.fragment":
	Changed file "vanilla":
		Total line: 11 (+0, -0)
		        '''
		 1  1   // __multiversion__
		 2  2   // This signals the loading code to prepend either #version 100 or #version 300 es as apropriate.
		 3  3   
		    4 + #include "fragmentVersionCentroidUV.glslh"
		 4    - #include "fragmentVersionCentroidUV.h"
		 5  5   
		 6  6   uniform sampler2D TEXTURE_0;
		 7  7   
		 8  8   void main()
		 9  9   {
		        ...
		        '''
Changed resource pack "placeholder.fragment":
	Changed file "vanilla":
		Total line: 9 (+0, -0)
		      '''
		1 1   // __multiversion__
		2 2   // This signals the loading code to prepend either #version 100 or #version 300 es as apropriate.
		3 3   
		  4 + #include "fragmentVersionSimple.glslh"
		4   - #include "fragmentVersionSimple.h"
		5 5   
		6 6   void main()
		7 7   {
		8 8   	gl_FragColor = vec4(1,1,1,1);
		9 9   }
		      '''
Changed resource pack "placeholder.vertex":
	Changed file "vanilla":
		Total line: 13 (+0, -0)
		        '''
		 1  1   // __multiversion__
		 2  2   // This signals the loading code to prepend either #version 100 or #version 300 es as apropriate.
		 3  3   
		    4 + #include "vertexVersionSimple.glslh"
		 4    - #include "vertexVersionSimple.h"
		 5  5   
		    6 + #include "uniformWorldConstants.glslh"
		 6    - #include "uniformWorldConstants.h"
		 7  7   
		 8  8   attribute mediump vec4 POSITION;
		 9  9   
		10 10   void main()
		11 11   {
		        ...
		        '''
Changed resource pack "position.vertex":
	Changed file "vanilla":
		Total line: 13 (+0, -0)
		        '''
		 1  1   // __multiversion__
		 2  2   // This signals the loading code to prepend either #version 100 or #version 300 es as apropriate.
		 3  3   
		    4 + #include "vertexVersionSimple.glslh"
		 4    - #include "vertexVersionSimple.h"
		 5  5   
		    6 + #include "uniformWorldConstants.glslh"
		 6    - #include "uniformWorldConstants.h"
		 7  7   
		 8  8   attribute mediump vec4 POSITION;
		 9  9   
		10 10   void main()
		11 11   {
		        ...
		        '''
Changed resource pack "rain_snow.fragment":
	Changed file "vanilla":
		Total line: 66 (+0, -0)
		        '''
		 1  1   // __multiversion__
		 2  2   // This signals the loading code to prepend either #version 100 or #version 300 es as apropriate.
		 3  3   
		    4 + #include "fragmentVersionSimple.glslh"
		    5 + #include "uniformMacro.glslh"
		 4    - #include "fragmentVersionSimple.h"
		 5    - #include "uniformMacro.h"
		 6  6   
		 7  7   LAYOUT_BINDING(0) uniform sampler2D TEXTURE_0;
		 8  8   LAYOUT_BINDING(1) uniform sampler2D TEXTURE_1;
		 9  9   LAYOUT_BINDING(2) uniform sampler2D TEXTURE_2;
		10 10   
		        ...
		        '''
Changed resource pack "rain_snow.vertex":
	Changed file "vanilla":
		Total line: 79 (+0, -0)
		        '''
		 1  1   // __multiversion__
		 2  2   // This signals the loading code to prepend either #version 100 or #version 300 es as apropriate.
		 3  3   
		    4 + #include "vertexVersionSimple.glslh"
		 4    - #include "vertexVersionSimple.h"
		 5  5   
		 6  6   precision highp float;
		 7  7   
		    8 + #include "uniformWorldConstants.glslh"
		    9 + #include "uniformWeatherConstants.glslh"
		   10 + #include "uniformPerFrameConstants.glslh"
		 8    - #include "uniformWorldConstants.h"
		 9    - #include "uniformWeatherConstants.h"
		10    - #include "uniformPerFrameConstants.h"
		11 11   
		12 12   attribute mediump vec4 POSITION;
		13 13   attribute vec2 TEXCOORD_0;
		14 14   attribute vec4 COLOR;
		15 15   
		        ...
		        '''
Changed resource pack "renderchunk.fragment":
	Changed file "vanilla":
		Total line: 93 (+0, -0)
		        '''
		 1  1   // __multiversion__
		 2  2   // This signals the loading code to prepend either #version 100 or #version 300 es as apropriate.
		 3  3   
		    4 + #include "fragmentVersionCentroid.glslh"
		 4    - #include "fragmentVersionCentroid.h"
		 5  5   
		 6  6   #if __VERSION__ >= 300
		 7  7   	#ifndef BYPASS_PIXEL_SHADER
		 8  8   		#if defined(TEXEL_AA) && defined(TEXEL_AA_FEATURE)
		 9  9   			_centroid in highp vec2 uv0;
		        ...
		24 24   
		25 25   #ifdef FOG
		26 26   varying vec4 fogColor;
		27 27   #endif
		28 28   
		   29 + #include "uniformShaderConstants.glslh"
		   30 + #include "util.glslh"
		29    - #include "uniformShaderConstants.h"
		30    - #include "util.h"
		31 31   
		32 32   LAYOUT_BINDING(0) uniform sampler2D TEXTURE_0;
		33 33   LAYOUT_BINDING(1) uniform sampler2D TEXTURE_1;
		34 34   LAYOUT_BINDING(2) uniform sampler2D TEXTURE_2;
		35 35   
		        ...
		        '''
Changed resource pack "renderchunk.vertex":
	Changed file "vanilla":
		Total line: 117 (+0, -0)
		          '''
		  1   1   // __multiversion__
		  2   2   // This signals the loading code to prepend either #version 100 or #version 300 es as apropriate.
		  3   3   
		      4 + #include "vertexVersionCentroid.glslh"
		  4     - #include "vertexVersionCentroid.h"
		  5   5   #if __VERSION__ >= 300
		  6   6   	#ifndef BYPASS_PIXEL_SHADER
		  7   7   		_centroid out vec2 uv0;
		  8   8   		_centroid out vec2 uv1;
		  9   9   	#endif
		          ...
		 20  20   
		 21  21   #ifdef FOG
		 22  22   	varying vec4 fogColor;
		 23  23   #endif
		 24  24   
		     25 + #include "uniformWorldConstants.glslh"
		     26 + #include "uniformPerFrameConstants.glslh"
		     27 + #include "uniformShaderConstants.glslh"
		     28 + #include "uniformRenderChunkConstants.glslh"
		 25     - #include "uniformWorldConstants.h"
		 26     - #include "uniformPerFrameConstants.h"
		 27     - #include "uniformShaderConstants.h"
		 28     - #include "uniformRenderChunkConstants.h"
		 29  29   
		 30  30   attribute POS4 POSITION;
		 31  31   attribute vec4 COLOR;
		 32  32   attribute vec2 TEXCOORD_0;
		 33  33   attribute vec2 TEXCOORD_1;
		          ...
		          '''
Changed resource pack "resolve_depth.fragment":
	Changed file "vanilla":
		Total line: 9 (+0, -0)
		      '''
		1 1   // __multiversion__
		2 2   // This signals the loading code to prepend either #version 100 or #version 300 es as apropriate.
		3 3   
		  4 + #include "fragmentVersionSimple.glslh"
		4   - #include "fragmentVersionSimple.h"
		5 5   
		6 6   void main()
		7 7   {
		8 8   	// TODO: implement this for multisampling
		9 9   }
		      '''
Changed resource pack "selection_box.vertex":
	Changed file "vanilla":
		Total line: 16 (+0, -0)
		        '''
		 1  1   // __multiversion__
		 2  2   // This signals the loading code to prepend either #version 100 or #version 300 es as apropriate.
		 3  3   
		    4 + #include "vertexVersionSimple.glslh"
		 4    - #include "vertexVersionSimple.h"
		 5  5   
		    6 + #include "uniformWorldConstants.glslh"
		 6    - #include "uniformWorldConstants.h"
		 7  7   
		 8  8   attribute mediump vec4 POSITION;
		 9  9   
		10 10   void main()
		11 11   {
		        ...
		        '''
Changed resource pack "shadow_stencil_overlay.fragment":
	Changed file "vanilla":
		Total line: 14 (+0, -0)
		        '''
		 1  1   // __multiversion__
		 2  2   // This signals the loading code to prepend either #version 100 or #version 300 es as apropriate.
		 3  3   
		    4 + #include "fragmentVersionSimple.glslh"
		 4    - #include "fragmentVersionSimple.h"
		 5  5   
		    6 + #include "uniformShaderConstants.glslh"
		 6    - #include "uniformShaderConstants.h"
		 7  7   
		 8  8   varying vec4 color;
		 9  9   
		10 10   void main()
		11 11   {
		        ...
		        '''
Changed resource pack "simple.vertex":
	Changed file "vanilla":
		Total line: 18 (+0, -0)
		        '''
		 1  1   // __multiversion__
		 2  2   // This signals the loading code to prepend either #version 100 or #version 300 es as apropriate.
		 3  3   
		    4 + #include "vertexVersionSimple.glslh"
		 4    - #include "vertexVersionSimple.h"
		 5  5   
		    6 + #include "uniformWorldConstants.glslh"
		    7 + #include "uniformShaderConstants.glslh"
		 6    - #include "uniformWorldConstants.h"
		 7    - #include "uniformShaderConstants.h"
		 8  8   
		 9  9   attribute mediump vec4 POSITION;
		10 10   
		11 11   varying vec4 color;
		12 12   
		        ...
		        '''
Changed resource pack "sky.vertex":
	Changed file "vanilla":
		Total line: 22 (+0, -0)
		        '''
		 1  1   // __multiversion__
		 2  2   // This signals the loading code to prepend either #version 100 or #version 300 es as apropriate.
		 3  3   
		    4 + #include "vertexVersionSimple.glslh"
		 4    - #include "vertexVersionSimple.h"
		 5  5   
		    6 + #include "uniformWorldConstants.glslh"
		    7 + #include "uniformPerFrameConstants.glslh"
		    8 + #include "uniformShaderConstants.glslh"
		 6    - #include "uniformWorldConstants.h"
		 7    - #include "uniformPerFrameConstants.h"
		 8    - #include "uniformShaderConstants.h"
		 9  9   
		10 10   attribute mediump vec4 POSITION;
		11 11   attribute vec4 COLOR;
		12 12   
		13 13   varying vec4 color;
		        ...
		        '''
Changed resource pack "stars.fragment":
	Changed file "vanilla":
		Total line: 13 (+0, -0)
		        '''
		 1  1   // __multiversion__
		 2  2   // This signals the loading code to prepend either #version 100 or #version 300 es as apropriate.
		 3  3   
		    4 + #include "fragmentVersionSimple.glslh"
		 4    - #include "fragmentVersionSimple.h"
		 5  5   
		    6 + #include "uniformShaderConstants.glslh"
		 6    - #include "uniformShaderConstants.h"
		 7  7   
		 8  8   varying vec4 color;
		 9  9   
		10 10   void main()
		11 11   {
		        ...
		        '''
Changed resource pack "text.fragment":
	Changed file "vanilla":
		Total line: 61 (+0, -0)
		        '''
		 1  1   // __multiversion__
		 2  2   // This signals the loading code to prepend either #version 100 or #version 300 es as apropriate.
		 3  3   
		    4 + #include "fragmentVersionCentroidUV.glslh"
		 4    - #include "fragmentVersionCentroidUV.h"
		 5  5   
		    6 + #include "uniformShaderConstants.glslh"
		 6    - #include "uniformShaderConstants.h"
		 7  7   
		 8  8   LAYOUT_BINDING(0) uniform sampler2D TEXTURE_0;
		 9  9   
		10 10   varying vec4 color;
		11 11   
		12 12   float median(float a, float b, float c) {
		13 13       return max(min(a, b), min(max(a, b), c));
		14 14   }
		15 15   
		   16 + #include "uniformTextConstants.glslh"
		16    - #include "uniformTextConstants.h"
		17 17   
		18 18   const float GLYPH_UV_SIZE = 1.0 / 16.0;
		19 19   
		20 20   void main()
		21 21   {
		        ...
		        '''
Changed resource pack "texture.fragment":
	Changed file "vanilla":
		Total line: 19 (+0, -0)
		        '''
		 1  1   // __multiversion__
		 2  2   // This signals the loading code to prepend either #version 100 or #version 300 es as apropriate.
		 3  3   
		    4 + #include "fragmentVersionCentroidUV.glslh"
		    5 + #include "uniformMacro.glslh"
		 4    - #include "fragmentVersionCentroidUV.h"
		 5    - #include "uniformMacro.h"
		 6  6   
		 7  7   LAYOUT_BINDING(0) uniform sampler2D TEXTURE_0;
		 8  8   
		 9  9   void main()
		10 10   {
		        ...
		        '''
Changed resource pack "texture_blend.fragment":
	Changed file "vanilla":
		Total line: 33 (+0, -0)
		        '''
		 1  1   // __multiversion__
		 2  2   // This signals the loading code to prepend either #version 100 or #version 300 es as apropriate.
		 3  3   
		    4 + #include "fragmentVersionCentroid.glslh"
		    5 + #include "uniformMacro.glslh"
		 4    - #include "fragmentVersionCentroid.h"
		 5    - #include "uniformMacro.h"
		 6  6   
		 7  7   #if __VERSION__ >= 300
		 8  8   _centroid in vec2 uv;
		 9  9   _centroid in vec2 uv1;
		10 10   #else
		        ...
		12 12   varying vec2 uv1;
		13 13   #endif
		14 14   
		15 15   LAYOUT_BINDING(0) uniform sampler2D TEXTURE_0;
		16 16   
		   17 + #include "uniformShaderConstants.glslh"
		17    - #include "uniformShaderConstants.h"
		18 18   
		19 19   void main()
		20 20   {
		21 21   	vec4 color = texture2D( TEXTURE_0, uv );
		22 22   	vec4 color1 = texture2D( TEXTURE_0, uv1 );
		        ...
		        '''
Changed resource pack "texture_ccolor.fragment":
	Changed file "vanilla":
		Total line: 39 (+0, -0)
		        '''
		 1  1   // __multiversion__
		 2  2   // This signals the loading code to prepend either #version 100 or #version 300 es as apropriate.
		 3  3   
		    4 + #include "fragmentVersionCentroid.glslh"
		 4    - #include "fragmentVersionCentroid.h"
		 5  5   
		 6  6   #if __VERSION__ >= 300
		 7  7   
		 8  8   #if defined(TEXEL_AA) && defined(TEXEL_AA_FEATURE)
		 9  9   _centroid in highp vec2 uv;
		        ...
		15 15   
		16 16   varying vec2 uv;
		17 17   
		18 18   #endif
		19 19   
		   20 + #include "uniformShaderConstants.glslh"
		   21 + #include "util.glslh"
		20    - #include "uniformShaderConstants.h"
		21    - #include "util.h"
		22 22   
		23 23   LAYOUT_BINDING(0) uniform sampler2D TEXTURE_0;
		24 24   
		25 25   void main()
		26 26   {
		        ...
		        '''
Changed resource pack "texture_cutout.fragment":
	Changed file "vanilla":
		Total line: 17 (+0, -0)
		        '''
		 1  1   // __multiversion__
		 2  2   // This signals the loading code to prepend either #version 100 or #version 300 es as apropriate.
		 3  3   
		    4 + #include "fragmentVersionCentroidUV.glslh"
		 4    - #include "fragmentVersionCentroidUV.h"
		 5  5   
		    6 + #include "uniformShaderConstants.glslh"
		 6    - #include "uniformShaderConstants.h"
		 7  7   
		 8  8   LAYOUT_BINDING(0) uniform sampler2D TEXTURE_0;
		 9  9   
		10 10   void main()
		11 11   {
		        ...
		        '''
Changed resource pack "texture_raw_alphatest.fragment":
	Changed file "vanilla":
		Total line: 39 (+0, -0)
		        '''
		 1  1   // __multiversion__
		 2  2   // This signals the loading code to prepend either #version 100 or #version 300 es as apropriate.
		 3  3   
		    4 + #include "fragmentVersionCentroid.glslh"
		 4    - #include "fragmentVersionCentroid.h"
		 5  5   #if __VERSION__ >= 300
		 6  6   
		 7  7   #if defined(TEXEL_AA) && defined(TEXEL_AA_FEATURE)
		 8  8   _centroid in highp vec2 uv;
		 9  9   #else
		        ...
		15 15   // version 100 code
		16 16   varying vec2 uv;
		17 17   
		18 18   #endif
		19 19   
		   20 + #include "uniformShaderConstants.glslh"
		   21 + #include "util.glslh"
		20    - #include "uniformShaderConstants.h"
		21    - #include "util.h"
		22 22   
		23 23   LAYOUT_BINDING(0) uniform sampler2D TEXTURE_0;
		24 24   
		25 25   void main()
		26 26   {
		        ...
		        '''
Added resource pack "uniformAnimationConstants.glslh":
	file "vanilla":
		'''
		#ifndef _UNIFORM_ANIMATION_CONSTANTS_H
		#define _UNIFORM_ANIMATION_CONSTANTS_H
		
		#include "uniformMacro.glslh"
		
		#ifdef MCPE_PLATFORM_NX
		layout(binding = 4) uniform AnimationConstants {
		#endif
		// BEGIN_UNIFORM_BLOCK(AnimationConstants) - unfortunately this macro does not work on old Amazon platforms so using above 3 lines instead
		#if defined(LARGE_VERTEX_SHADER_UNIFORMS)
		UNIFORM MAT4 BONES[8];
		#else
		UNIFORM MAT4 BONE;
		#endif
		END_UNIFORM_BLOCK
		
		#endif
		'''
Removed resource pack "uniformAnimationConstants.h":
	file "vanilla":
		'''
		#ifndef _UNIFORM_ANIMATION_CONSTANTS_H
		#define _UNIFORM_ANIMATION_CONSTANTS_H
		
		#include "uniformMacro.h"
		
		#ifdef MCPE_PLATFORM_NX
		layout(binding = 4) uniform AnimationConstants {
		#endif
		// BEGIN_UNIFORM_BLOCK(AnimationConstants) - unfortunately this macro does not work on old Amazon platforms so using above 3 lines instead
		#if defined(LARGE_VERTEX_SHADER_UNIFORMS)
		UNIFORM MAT4 BONES[8];
		#else
		UNIFORM MAT4 BONE;
		#endif
		END_UNIFORM_BLOCK
		
		#endif
		'''
Added resource pack "uniformBannerConstants.glslh":
	file "vanilla":
		'''
		#ifndef _UNIFORM_BANNER_CONSTANTS_H
		#define _UNIFORM_BANNER_CONSTANTS_H
		
		#include "uniformMacro.glslh"
		
		#ifdef MCPE_PLATFORM_NX
		uniform BannerConstants {
		#endif
		// BEGIN_UNIFORM_BLOCK(BannerConstants) - unfortunately this macro does not work on old Amazon platforms so using above 3 lines instead
		UNIFORM vec4 BANNER_COLORS[7];
		UNIFORM vec4 BANNER_UV_OFFSETS_AND_SCALES[7];
		END_UNIFORM_BLOCK
		
		#endif
		'''
Removed resource pack "uniformBannerConstants.h":
	file "vanilla":
		'''
		#ifndef _UNIFORM_BANNER_CONSTANTS_H
		#define _UNIFORM_BANNER_CONSTANTS_H
		
		#include "uniformMacro.h"
		
		#ifdef MCPE_PLATFORM_NX
		uniform BannerConstants {
		#endif
		// BEGIN_UNIFORM_BLOCK(BannerConstants) - unfortunately this macro does not work on old Amazon platforms so using above 3 lines instead
		UNIFORM vec4 BANNER_COLORS[7];
		UNIFORM vec4 BANNER_UV_OFFSETS_AND_SCALES[7];
		END_UNIFORM_BLOCK
		
		#endif
		'''
Added resource pack "uniformDebugConstants.glslh":
	file "vanilla":
		'''
		#ifndef _UNIFORM_DEBUG_CONSTANTS_H
		#define _UNIFORM_DEBUG_CONSTANTS_H
		
		#include "uniformMacro.glslh"
		
		#ifdef MCPE_PLATFORM_NX
		uniform DebugConstants {
		#endif
		// BEGIN_UNIFORM_BLOCK(DebugConstants) - unfortunately this macro does not work on old Amazon platforms so using above 3 lines instead
		UNIFORM float TEXTURE_ARRAY_INDEX_0;
		END_UNIFORM_BLOCK
		
		#endif
		'''
Removed resource pack "uniformDebugConstants.h":
	file "vanilla":
		'''
		#ifndef _UNIFORM_DEBUG_CONSTANTS_H
		#define _UNIFORM_DEBUG_CONSTANTS_H
		
		#include "uniformMacro.h"
		
		#ifdef MCPE_PLATFORM_NX
		uniform DebugConstants {
		#endif
		// BEGIN_UNIFORM_BLOCK(DebugConstants) - unfortunately this macro does not work on old Amazon platforms so using above 3 lines instead
		UNIFORM float TEXTURE_ARRAY_INDEX_0;
		END_UNIFORM_BLOCK
		
		#endif
		'''
Added resource pack "uniformEffectsConstants.glslh":
	file "vanilla":
		'''
		#ifndef _UNIFORM_EFFECTS_CONSTANTS_H
		#define _UNIFORM_EFFECTS_CONSTANTS_H
		
		#include "uniformMacro.glslh"
		
		#ifdef MCPE_PLATFORM_NX
		uniform EffectsConstants {
		#endif
		// BEGIN_UNIFORM_BLOCK(EffectsConstants) - unfortunately this macro does not work on old Amazon platforms so using above 3 lines instead
		UNIFORM vec2 EFFECT_UV_OFFSET;
		END_UNIFORM_BLOCK
		
		#endif
		'''
Removed resource pack "uniformEffectsConstants.h":
	file "vanilla":
		'''
		#ifndef _UNIFORM_EFFECTS_CONSTANTS_H
		#define _UNIFORM_EFFECTS_CONSTANTS_H
		
		#include "uniformMacro.h"
		
		#ifdef MCPE_PLATFORM_NX
		uniform EffectsConstants {
		#endif
		// BEGIN_UNIFORM_BLOCK(EffectsConstants) - unfortunately this macro does not work on old Amazon platforms so using above 3 lines instead
		UNIFORM vec2 EFFECT_UV_OFFSET;
		END_UNIFORM_BLOCK
		
		#endif
		'''
Added resource pack "uniformEntityConstants.glslh":
	file "vanilla":
		'''
		#ifndef _UNIFORM_ENTITY_CONSTANTS_H
		#define _UNIFORM_ENTITY_CONSTANTS_H
		
		#include "uniformMacro.glslh"
		
		#ifdef MCPE_PLATFORM_NX
		uniform ActorConstants {
		#endif
		// BEGIN_UNIFORM_BLOCK(ActorConstants) - unfortunately this macro does not work on old Amazon platforms so using above 3 lines instead
		UNIFORM vec4 OVERLAY_COLOR;
		UNIFORM vec4 TILE_LIGHT_COLOR;
		UNIFORM vec4 CHANGE_COLOR;
		UNIFORM vec4 GLINT_COLOR;
		UNIFORM vec4 UV_ANIM;
		UNIFORM vec2 UV_OFFSET;
		UNIFORM vec2 UV_ROTATION;
		UNIFORM vec2 GLINT_UV_SCALE;
		UNIFORM vec4 MULTIPLICATIVE_TINT_CHANGE_COLOR;
		END_UNIFORM_BLOCK
		
		#endif
		'''
Removed resource pack "uniformEntityConstants.h":
	file "vanilla":
		'''
		#ifndef _UNIFORM_ENTITY_CONSTANTS_H
		#define _UNIFORM_ENTITY_CONSTANTS_H
		
		#include "uniformMacro.h"
		
		#ifdef MCPE_PLATFORM_NX
		uniform ActorConstants {
		#endif
		// BEGIN_UNIFORM_BLOCK(ActorConstants) - unfortunately this macro does not work on old Amazon platforms so using above 3 lines instead
		UNIFORM vec4 OVERLAY_COLOR;
		UNIFORM vec4 TILE_LIGHT_COLOR;
		UNIFORM vec4 CHANGE_COLOR;
		UNIFORM vec4 GLINT_COLOR;
		UNIFORM vec4 UV_ANIM;
		UNIFORM vec2 UV_OFFSET;
		UNIFORM vec2 UV_ROTATION;
		UNIFORM vec2 GLINT_UV_SCALE;
		UNIFORM vec4 MULTIPLICATIVE_TINT_CHANGE_COLOR;
		END_UNIFORM_BLOCK
		
		#endif
		'''
Added resource pack "uniformFlipbookTextureConstants.glslh":
	file "vanilla":
		'''
		#ifndef _UNIFORM_FLIPBOOK_TEXTURE_CONSTANTS_H
		#define _UNIFORM_FLIPBOOK_TEXTURE_CONSTANTS_H
		
		#include "uniformMacro.glslh"
		
		#ifdef MCPE_PLATFORM_NX
		uniform FlipbookTextureConstants {
		#endif
		// BEGIN_UNIFORM_BLOCK(FlipbookTextureConstants) - unfortunately this macro does not work on old Amazon platforms so using above 3 lines instead
		UNIFORM float V_OFFSET;
		UNIFORM float V_BLEND_OFFSET;
		END_UNIFORM_BLOCK
		
		#endif
		'''
Removed resource pack "uniformFlipbookTextureConstants.h":
	file "vanilla":
		'''
		#ifndef _UNIFORM_FLIPBOOK_TEXTURE_CONSTANTS_H
		#define _UNIFORM_FLIPBOOK_TEXTURE_CONSTANTS_H
		
		#include "uniformMacro.h"
		
		#ifdef MCPE_PLATFORM_NX
		uniform FlipbookTextureConstants {
		#endif
		// BEGIN_UNIFORM_BLOCK(FlipbookTextureConstants) - unfortunately this macro does not work on old Amazon platforms so using above 3 lines instead
		UNIFORM float V_OFFSET;
		UNIFORM float V_BLEND_OFFSET;
		END_UNIFORM_BLOCK
		
		#endif
		'''
Added resource pack "uniformInterFrameConstants.glslh":
	file "vanilla":
		'''
		#ifndef _UNIFORM_INTER_FRAME_CONSTANTS_H
		#define _UNIFORM_INTER_FRAME_CONSTANTS_H
		
		#include "uniformMacro.glslh"
		
		#ifdef MCPE_PLATFORM_NX
		uniform InterFrameConstants {
		#endif
		// BEGIN_UNIFORM_BLOCK(InterFrameConstants) - unfortunately this macro does not work on old Amazon platforms so using above 3 lines instead
		// in secs. This is reset every 1 hour. so the range is [0, 3600]
		// make sure your shader handles the case when it transitions from 3600 to 0
		UNIFORM float TOTAL_REAL_WORLD_TIME;
		UNIFORM MAT4 CUBE_MAP_ROTATION;
		END_UNIFORM_BLOCK
		
		#endif
		'''
Removed resource pack "uniformInterFrameConstants.h":
	file "vanilla":
		'''
		#ifndef _UNIFORM_INTER_FRAME_CONSTANTS_H
		#define _UNIFORM_INTER_FRAME_CONSTANTS_H
		
		#include "uniformMacro.h"
		
		#ifdef MCPE_PLATFORM_NX
		uniform InterFrameConstants {
		#endif
		// BEGIN_UNIFORM_BLOCK(InterFrameConstants) - unfortunately this macro does not work on old Amazon platforms so using above 3 lines instead
		// in secs. This is reset every 1 hour. so the range is [0, 3600]
		// make sure your shader handles the case when it transitions from 3600 to 0
		UNIFORM float TOTAL_REAL_WORLD_TIME;
		UNIFORM MAT4 CUBE_MAP_ROTATION;
		END_UNIFORM_BLOCK
		
		#endif
		'''
Moved resource pack "uniformMacro.h" to "uniformMacro.glslh".
Added resource pack "uniformPerFrameConstants.glslh":
	file "vanilla":
		'''
		#ifndef _UNIFORM_PER_FRAME_CONSTANTS_H
		#define _UNIFORM_PER_FRAME_CONSTANTS_H
		
		#include "uniformMacro.glslh"
		
		#ifdef MCPE_PLATFORM_NX
		layout(binding = 2) uniform PerFrameConstants {
		#endif
		// BEGIN_UNIFORM_BLOCK(PerFrameConstants) - unfortunately this macro does not work on old Amazon platforms so using above 3 lines instead
		UNIFORM vec3 VIEW_POS;
		UNIFORM float TIME;
		UNIFORM vec4 FOG_COLOR;
		UNIFORM vec2 FOG_CONTROL;
		UNIFORM float RENDER_DISTANCE;
		UNIFORM float FAR_CHUNKS_DISTANCE;
		END_UNIFORM_BLOCK
		
		#endif
		'''
Removed resource pack "uniformPerFrameConstants.h":
	file "vanilla":
		'''
		#ifndef _UNIFORM_PER_FRAME_CONSTANTS_H
		#define _UNIFORM_PER_FRAME_CONSTANTS_H
		
		#include "uniformMacro.h"
		
		#ifdef MCPE_PLATFORM_NX
		layout(binding = 2) uniform PerFrameConstants {
		#endif
		// BEGIN_UNIFORM_BLOCK(PerFrameConstants) - unfortunately this macro does not work on old Amazon platforms so using above 3 lines instead
		UNIFORM vec3 VIEW_POS;
		UNIFORM float TIME;
		UNIFORM vec4 FOG_COLOR;
		UNIFORM vec2 FOG_CONTROL;
		UNIFORM float RENDER_DISTANCE;
		UNIFORM float FAR_CHUNKS_DISTANCE;
		END_UNIFORM_BLOCK
		
		#endif
		'''
Added resource pack "uniformRenderChunkConstants.glslh":
	file "vanilla":
		'''
		#ifndef _UNIFORM_RENDER_CHUNK_CONSTANTS_H
		#define _UNIFORM_RENDER_CHUNK_CONSTANTS_H
		
		#include "uniformMacro.glslh"
		
		#ifdef MCPE_PLATFORM_NX
		#extension GL_ARB_enhanced_layouts : enable
		layout(binding = 0) uniform RenderChunkConstants {
		#endif
		// BEGIN_UNIFORM_BLOCK(RenderChunkConstants) - unfortunately this macro does not work on old Amazon platforms so using above 3 lines instead
		UNIFORM POS4 CHUNK_ORIGIN_AND_SCALE;
		UNIFORM float RENDER_CHUNK_FOG_ALPHA;
		END_UNIFORM_BLOCK
		
		#endif
		'''
Removed resource pack "uniformRenderChunkConstants.h":
	file "vanilla":
		'''
		#ifndef _UNIFORM_RENDER_CHUNK_CONSTANTS_H
		#define _UNIFORM_RENDER_CHUNK_CONSTANTS_H
		
		#include "uniformMacro.h"
		
		#ifdef MCPE_PLATFORM_NX
		#extension GL_ARB_enhanced_layouts : enable
		layout(binding = 0) uniform RenderChunkConstants {
		#endif
		// BEGIN_UNIFORM_BLOCK(RenderChunkConstants) - unfortunately this macro does not work on old Amazon platforms so using above 3 lines instead
		UNIFORM POS4 CHUNK_ORIGIN_AND_SCALE;
		UNIFORM float RENDER_CHUNK_FOG_ALPHA;
		END_UNIFORM_BLOCK
		
		#endif
		'''
Added resource pack "uniformShaderConstants.glslh":
	file "vanilla":
		'''
		#ifndef _UNIFORM_SHADER_CONSTANTS_H
		#define _UNIFORM_SHADER_CONSTANTS_H
		
		#include "uniformMacro.glslh"
		
		#ifdef MCPE_PLATFORM_NX
		#extension GL_ARB_enhanced_layouts : enable
		layout(binding = 3) uniform ShaderConstants {
		#endif
		// BEGIN_UNIFORM_BLOCK(ShaderConstants) - unfortunately this macro does not work on old Amazon platforms so using above 3 lines instead
		UNIFORM vec4 CURRENT_COLOR;
		UNIFORM vec4 DARKEN;
		UNIFORM vec3 TEXTURE_DIMENSIONS;
		UNIFORM float HUD_OPACITY;
		UNIFORM MAT4 UV_TRANSFORM;
		END_UNIFORM_BLOCK
		
		#endif
		'''
Removed resource pack "uniformShaderConstants.h":
	file "vanilla":
		'''
		#ifndef _UNIFORM_SHADER_CONSTANTS_H
		#define _UNIFORM_SHADER_CONSTANTS_H
		
		#include "uniformMacro.h"
		
		#ifdef MCPE_PLATFORM_NX
		#extension GL_ARB_enhanced_layouts : enable
		layout(binding = 3) uniform ShaderConstants {
		#endif
		// BEGIN_UNIFORM_BLOCK(ShaderConstants) - unfortunately this macro does not work on old Amazon platforms so using above 3 lines instead
		UNIFORM vec4 CURRENT_COLOR;
		UNIFORM vec4 DARKEN;
		UNIFORM vec3 TEXTURE_DIMENSIONS;
		UNIFORM float HUD_OPACITY;
		UNIFORM MAT4 UV_TRANSFORM;
		END_UNIFORM_BLOCK
		
		#endif
		'''
Added resource pack "uniformTextConstants.glslh":
	file "vanilla":
		'''
		#ifndef _UNIFORM_TEXT_CONSTANTS_H
		#define _UNIFORM_TEXT_CONSTANTS_H
		
		#include "uniformMacro.glslh"
		
		#ifdef MCPE_PLATFORM_NX
		uniform TextConstants {
		#endif
		// BEGIN_UNIFORM_BLOCK(TextConstants) - unfortunately this macro does not work on old Amazon platforms so using above 3 lines instead
		UNIFORM float GLYPH_SMOOTH_RADIUS;
		UNIFORM float OUTLINE_CUTOFF;
		UNIFORM float SHADOW_SMOOTH_RADIUS;
		UNIFORM vec4 SHADOW_COLOR;
		UNIFORM vec2 SHADOW_OFFSET;
		END_UNIFORM_BLOCK
		
		#endif
		'''
Removed resource pack "uniformTextConstants.h":
	file "vanilla":
		'''
		#ifndef _UNIFORM_TEXT_CONSTANTS_H
		#define _UNIFORM_TEXT_CONSTANTS_H
		
		#include "uniformMacro.h"
		
		#ifdef MCPE_PLATFORM_NX
		uniform TextConstants {
		#endif
		// BEGIN_UNIFORM_BLOCK(TextConstants) - unfortunately this macro does not work on old Amazon platforms so using above 3 lines instead
		UNIFORM float GLYPH_SMOOTH_RADIUS;
		UNIFORM float OUTLINE_CUTOFF;
		UNIFORM float SHADOW_SMOOTH_RADIUS;
		UNIFORM vec4 SHADOW_COLOR;
		UNIFORM vec2 SHADOW_OFFSET;
		END_UNIFORM_BLOCK
		
		#endif
		'''
Added resource pack "uniformUIEffectsPixelConstants.glslh":
	file "vanilla":
		'''
		#ifndef _UNIFORM_UI_EFFECTS_PIXEL_CONSTANTS_H
		#define _UNIFORM_UI_EFFECTS_PIXEL_CONSTANTS_H
		
		#include "uniformMacro.glslh"
		
		#ifdef MCPE_PLATFORM_NX
		#extension GL_ARB_enhanced_layouts : enable
		layout(binding = 3) uniform UIEffectsPixelConstants {
		#endif
		// BEGIN_UNIFORM_BLOCK(UIEffectsPixelConstants) - unfortunately this macro does not work on old Amazon platforms so using above 3 lines instead
		UNIFORM vec4 COEFFICIENTS[3];
		UNIFORM vec4 PIXEL_OFFSETS[6];
		END_UNIFORM_BLOCK
		
		#endif
		'''
Removed resource pack "uniformUIEffectsPixelConstants.h":
	file "vanilla":
		'''
		#ifndef _UNIFORM_UI_EFFECTS_PIXEL_CONSTANTS_H
		#define _UNIFORM_UI_EFFECTS_PIXEL_CONSTANTS_H
		
		#include "uniformMacro.h"
		
		#ifdef MCPE_PLATFORM_NX
		#extension GL_ARB_enhanced_layouts : enable
		layout(binding = 3) uniform UIEffectsPixelConstants {
		#endif
		// BEGIN_UNIFORM_BLOCK(UIEffectsPixelConstants) - unfortunately this macro does not work on old Amazon platforms so using above 3 lines instead
		UNIFORM vec4 COEFFICIENTS[3];
		UNIFORM vec4 PIXEL_OFFSETS[6];
		END_UNIFORM_BLOCK
		
		#endif
		'''
Added resource pack "uniformUIGlobalPixelConstants.glslh":
	file "vanilla":
		'''
		#ifndef _UNIFORM_UI_GLOBAL_PIXEL_CONSTANTS_H
		#define _UNIFORM_UI_GLOBAL_PIXEL_CONSTANTS_H
		
		#include "uniformMacro.glslh"
		
		#ifdef MCPE_PLATFORM_NX
		#extension GL_ARB_enhanced_layouts : enable
		layout(binding = 4) uniform UIGlobalPixelConstants {
		#endif
		// BEGIN_UNIFORM_BLOCK(UIGlobalPixelConstants) - unfortunately this macro does not work on old Amazon platforms so using above 3 lines instead
		UNIFORM vec2 VIEWPORT_SIZE;
		END_UNIFORM_BLOCK
		
		#endif
		'''
Removed resource pack "uniformUIGlobalPixelConstants.h":
	file "vanilla":
		'''
		#ifndef _UNIFORM_UI_GLOBAL_PIXEL_CONSTANTS_H
		#define _UNIFORM_UI_GLOBAL_PIXEL_CONSTANTS_H
		
		#include "uniformMacro.h"
		
		#ifdef MCPE_PLATFORM_NX
		#extension GL_ARB_enhanced_layouts : enable
		layout(binding = 4) uniform UIGlobalPixelConstants {
		#endif
		// BEGIN_UNIFORM_BLOCK(UIGlobalPixelConstants) - unfortunately this macro does not work on old Amazon platforms so using above 3 lines instead
		UNIFORM vec2 VIEWPORT_SIZE;
		END_UNIFORM_BLOCK
		
		#endif
		'''
Added resource pack "uniformUIRenoirShaderPSConstants.glslh":
	file "vanilla":
		'''
		#ifndef _UNIFORM_UI_RENOIR_SHADER_PS_CONSTANTS_H
		#define _UNIFORM_UI_RENOIR_SHADER_PS_CONSTANTS_H
		
		#include "uniformMacro.glslh"
		
		#ifdef MCPE_PLATFORM_NX
		#extension GL_ARB_enhanced_layouts : enable
		layout(binding = 3) uniform UIRenoirShaderPSConstants {
		#endif
		// BEGIN_UNIFORM_BLOCK(UIRenoirShaderPSConstants) - unfortunately this macro does not work on old Amazon platforms so using above 3 lines instead
		UNIFORM vec4 RENOIR_SHADER_PS_PROPS_0; // GradientStartColor
		UNIFORM vec4 RENOIR_SHADER_PS_PROPS_1; // GradientMidColor
		UNIFORM vec4 RENOIR_SHADER_PS_PROPS_2; // GradientEndColor
		UNIFORM vec4 RENOIR_SHADER_PS_PROPS_3; // GradientYCoord
		END_UNIFORM_BLOCK
		
		#endif
		'''
Removed resource pack "uniformUIRenoirShaderPSConstants.h":
	file "vanilla":
		'''
		#ifndef _UNIFORM_UI_RENOIR_SHADER_PS_CONSTANTS_H
		#define _UNIFORM_UI_RENOIR_SHADER_PS_CONSTANTS_H
		
		#include "uniformMacro.h"
		
		#ifdef MCPE_PLATFORM_NX
		#extension GL_ARB_enhanced_layouts : enable
		layout(binding = 3) uniform UIRenoirShaderPSConstants {
		#endif
		// BEGIN_UNIFORM_BLOCK(UIRenoirShaderPSConstants) - unfortunately this macro does not work on old Amazon platforms so using above 3 lines instead
		UNIFORM vec4 RENOIR_SHADER_PS_PROPS_0; // GradientStartColor
		UNIFORM vec4 RENOIR_SHADER_PS_PROPS_1; // GradientMidColor
		UNIFORM vec4 RENOIR_SHADER_PS_PROPS_2; // GradientEndColor
		UNIFORM vec4 RENOIR_SHADER_PS_PROPS_3; // GradientYCoord
		END_UNIFORM_BLOCK
		
		#endif
		'''
Added resource pack "uniformUIRenoirShaderVSConstants.glslh":
	file "vanilla":
		'''
		#ifndef _UNIFORM_UI_RENOIR_SHADER_VS_CONSTANTS_H
		#define _UNIFORM_UI_RENOIR_SHADER_VS_CONSTANTS_H
		
		#include "uniformMacro.glslh"
		
		#ifdef MCPE_PLATFORM_NX
		#extension GL_ARB_enhanced_layouts : enable
		layout(binding = 4) uniform UIRenoirShaderVSConstants {
		#endif
		// BEGIN_UNIFORM_BLOCK(UIRenoirShaderVSConstants) - unfortunately this macro does not work on old Amazon platforms so using above 3 lines instead
		UNIFORM highp mat4 COORD_TRANSFORM;
		UNIFORM highp vec4 RENOIR_SHADER_VS_PROPS_0;
		END_UNIFORM_BLOCK
		
		#endif
		'''
Removed resource pack "uniformUIRenoirShaderVSConstants.h":
	file "vanilla":
		'''
		#ifndef _UNIFORM_UI_RENOIR_SHADER_VS_CONSTANTS_H
		#define _UNIFORM_UI_RENOIR_SHADER_VS_CONSTANTS_H
		
		#include "uniformMacro.h"
		
		#ifdef MCPE_PLATFORM_NX
		#extension GL_ARB_enhanced_layouts : enable
		layout(binding = 4) uniform UIRenoirShaderVSConstants {
		#endif
		// BEGIN_UNIFORM_BLOCK(UIRenoirShaderVSConstants) - unfortunately this macro does not work on old Amazon platforms so using above 3 lines instead
		UNIFORM highp mat4 COORD_TRANSFORM;
		UNIFORM highp vec4 RENOIR_SHADER_VS_PROPS_0;
		END_UNIFORM_BLOCK
		
		#endif
		'''
Added resource pack "uniformUIStandardPrimitiveAdditionalPixelConstants.glslh":
	file "vanilla":
		'''
		#ifndef _UNIFORM_UI_STANDARD_PRIMITIVE_ADDITIONAL_PIXEL_CONSTANTS_H
		#define _UNIFORM_UI_STANDARD_PRIMITIVE_ADDITIONAL_PIXEL_CONSTANTS_H
		
		#include "uniformMacro.glslh"
		
		#ifdef MCPE_PLATFORM_NX
		#extension GL_ARB_enhanced_layouts : enable
		layout(binding = 3) uniform UIStandardPrimitiveAdditionalPixelConstants {
		#endif
		// BEGIN_UNIFORM_BLOCK(UIStandardPrimitiveAdditionalPixelConstants) - unfortunately this macro does not work on old Amazon platforms so using above 3 lines instead
		UNIFORM vec4 PRIM_PROPS_0;
		UNIFORM vec4 PRIM_PROPS_1;
		END_UNIFORM_BLOCK
		
		#endif
		'''
Removed resource pack "uniformUIStandardPrimitiveAdditionalPixelConstants.h":
	file "vanilla":
		'''
		#ifndef _UNIFORM_UI_STANDARD_PRIMITIVE_ADDITIONAL_PIXEL_CONSTANTS_H
		#define _UNIFORM_UI_STANDARD_PRIMITIVE_ADDITIONAL_PIXEL_CONSTANTS_H
		
		#include "uniformMacro.h"
		
		#ifdef MCPE_PLATFORM_NX
		#extension GL_ARB_enhanced_layouts : enable
		layout(binding = 3) uniform UIStandardPrimitiveAdditionalPixelConstants {
		#endif
		// BEGIN_UNIFORM_BLOCK(UIStandardPrimitiveAdditionalPixelConstants) - unfortunately this macro does not work on old Amazon platforms so using above 3 lines instead
		UNIFORM vec4 PRIM_PROPS_0;
		UNIFORM vec4 PRIM_PROPS_1;
		END_UNIFORM_BLOCK
		
		#endif
		'''
Added resource pack "uniformUIStandardPrimitivePixelConstants.glslh":
	file "vanilla":
		'''
		#ifndef _UNIFORM_UI_STANDARD_PRIMITIVE_PIXEL_CONSTANTS_H
		#define _UNIFORM_UI_STANDARD_PRIMITIVE_PIXEL_CONSTANTS_H
		
		#include "uniformMacro.glslh"
		
		#ifdef MCPE_PLATFORM_NX
		#extension GL_ARB_enhanced_layouts : enable
		layout(binding = 4) uniform UIStandardPrimitivePixelConstants {
		#endif
		// BEGIN_UNIFORM_BLOCK(UIStandardPrimitivePixelConstants) - unfortunately this macro does not work on old Amazon platforms so using above 3 lines instead
		UNIFORM int SHADER_TYPE;
		END_UNIFORM_BLOCK
		
		#endif
		'''
Removed resource pack "uniformUIStandardPrimitivePixelConstants.h":
	file "vanilla":
		'''
		#ifndef _UNIFORM_UI_STANDARD_PRIMITIVE_PIXEL_CONSTANTS_H
		#define _UNIFORM_UI_STANDARD_PRIMITIVE_PIXEL_CONSTANTS_H
		
		#include "uniformMacro.h"
		
		#ifdef MCPE_PLATFORM_NX
		#extension GL_ARB_enhanced_layouts : enable
		layout(binding = 4) uniform UIStandardPrimitivePixelConstants {
		#endif
		// BEGIN_UNIFORM_BLOCK(UIStandardPrimitivePixelConstants) - unfortunately this macro does not work on old Amazon platforms so using above 3 lines instead
		UNIFORM int SHADER_TYPE;
		END_UNIFORM_BLOCK
		
		#endif
		'''
Added resource pack "uniformUITextPSConstants.glslh":
	file "vanilla":
		'''
		#ifndef _UNIFORM_UI_TEXT_PS_CONSTANTS_H
		#define _UNIFORM_UI_TEXT_PS_CONSTANTS_H
		
		#include "uniformMacro.glslh"
		
		#ifdef MCPE_PLATFORM_NX
		#extension GL_ARB_enhanced_layouts : enable
		layout(binding = 3) uniform UITextPSConstants {
		#endif
		// BEGIN_UNIFORM_BLOCK(UITextPSConstants) - unfortunately this macro does not work on old Amazon platforms so using above 3 lines instead
		UNIFORM float BITMAP;
		END_UNIFORM_BLOCK
		
		#endif
		'''
Removed resource pack "uniformUITextPSConstants.h":
	file "vanilla":
		'''
		#ifndef _UNIFORM_UI_TEXT_PS_CONSTANTS_H
		#define _UNIFORM_UI_TEXT_PS_CONSTANTS_H
		
		#include "uniformMacro.h"
		
		#ifdef MCPE_PLATFORM_NX
		#extension GL_ARB_enhanced_layouts : enable
		layout(binding = 3) uniform UITextPSConstants {
		#endif
		// BEGIN_UNIFORM_BLOCK(UITextPSConstants) - unfortunately this macro does not work on old Amazon platforms so using above 3 lines instead
		UNIFORM float BITMAP;
		END_UNIFORM_BLOCK
		
		#endif
		'''
Added resource pack "uniformUITransformsConstants.glslh":
	file "vanilla":
		'''
		#ifndef _UNIFORM_UI_TRANSFORMS_CONSTANTS_H
		#define _UNIFORM_UI_TRANSFORMS_CONSTANTS_H
		
		#include "uniformMacro.glslh"
		
		#ifdef MCPE_PLATFORM_NX
		#extension GL_ARB_enhanced_layouts : enable
		layout(binding = 3) uniform UITransformsConstants {
		#endif
		// BEGIN_UNIFORM_BLOCK(UITransformsConstants) - unfortunately this macro does not work on old Amazon platforms so using above 3 lines instead
		UNIFORM highp mat4 TRANSFORM;
		END_UNIFORM_BLOCK
		
		#endif
		'''
Removed resource pack "uniformUITransformsConstants.h":
	file "vanilla":
		'''
		#ifndef _UNIFORM_UI_TRANSFORMS_CONSTANTS_H
		#define _UNIFORM_UI_TRANSFORMS_CONSTANTS_H
		
		#include "uniformMacro.h"
		
		#ifdef MCPE_PLATFORM_NX
		#extension GL_ARB_enhanced_layouts : enable
		layout(binding = 3) uniform UITransformsConstants {
		#endif
		// BEGIN_UNIFORM_BLOCK(UITransformsConstants) - unfortunately this macro does not work on old Amazon platforms so using above 3 lines instead
		UNIFORM highp mat4 TRANSFORM;
		END_UNIFORM_BLOCK
		
		#endif
		'''
Added resource pack "uniformWeatherConstants.glslh":
	file "vanilla":
		'''
		#ifndef _UNIFORM_WEATHER_CONSTANTS_H
		#define _UNIFORM_WEATHER_CONSTANTS_H
		
		#include "uniformMacro.glslh"
		
		#ifdef MCPE_PLATFORM_NX
		uniform WeatherConstants {
		#endif
		// BEGIN_UNIFORM_BLOCK(WeatherConstants) - unfortunately this macro does not work on old Amazon platforms so using above 3 lines instead
		UNIFORM vec4 POSITION_OFFSET;
		UNIFORM vec4 VELOCITY;
		UNIFORM vec4 ALPHA;
		UNIFORM vec4 VIEW_POSITION;
		UNIFORM vec4 SIZE_SCALE;
		UNIFORM vec4 FORWARD;
		UNIFORM vec4 UV_INFO;
		UNIFORM vec4 PARTICLE_BOX;
		END_UNIFORM_BLOCK
		
		#endif
		'''
Removed resource pack "uniformWeatherConstants.h":
	file "vanilla":
		'''
		#ifndef _UNIFORM_WEATHER_CONSTANTS_H
		#define _UNIFORM_WEATHER_CONSTANTS_H
		
		#include "uniformMacro.h"
		
		#ifdef MCPE_PLATFORM_NX
		uniform WeatherConstants {
		#endif
		// BEGIN_UNIFORM_BLOCK(WeatherConstants) - unfortunately this macro does not work on old Amazon platforms so using above 3 lines instead
		UNIFORM vec4 POSITION_OFFSET;
		UNIFORM vec4 VELOCITY;
		UNIFORM vec4 ALPHA;
		UNIFORM vec4 VIEW_POSITION;
		UNIFORM vec4 SIZE_SCALE;
		UNIFORM vec4 FORWARD;
		UNIFORM vec4 UV_INFO;
		UNIFORM vec4 PARTICLE_BOX;
		END_UNIFORM_BLOCK
		
		#endif
		'''
Added resource pack "uniformWorldConstants.glslh":
	file "vanilla":
		'''
		#ifndef _UNIFORM_WORLD_CONSTANTS_H
		#define _UNIFORM_WORLD_CONSTANTS_H
		
		#include "uniformMacro.glslh"
		
		#ifdef MCPE_PLATFORM_NX
		layout(binding = 1) uniform WorldConstants {
		#endif
		// BEGIN_UNIFORM_BLOCK(WorldConstants) - unfortunately this macro does not work on old Amazon platforms so using above 3 lines instead
		UNIFORM MAT4 WORLDVIEWPROJ;
		UNIFORM MAT4 WORLD;
		UNIFORM MAT4 WORLDVIEW;
		UNIFORM MAT4 PROJ;
		END_UNIFORM_BLOCK
		
		#endif
		'''
Removed resource pack "uniformWorldConstants.h":
	file "vanilla":
		'''
		#ifndef _UNIFORM_WORLD_CONSTANTS_H
		#define _UNIFORM_WORLD_CONSTANTS_H
		
		#include "uniformMacro.h"
		
		#ifdef MCPE_PLATFORM_NX
		layout(binding = 1) uniform WorldConstants {
		#endif
		// BEGIN_UNIFORM_BLOCK(WorldConstants) - unfortunately this macro does not work on old Amazon platforms so using above 3 lines instead
		UNIFORM MAT4 WORLDVIEWPROJ;
		UNIFORM MAT4 WORLD;
		UNIFORM MAT4 WORLDVIEW;
		UNIFORM MAT4 PROJ;
		END_UNIFORM_BLOCK
		
		#endif
		'''
Added resource pack "util.glslh":
	file "vanilla":
		'''
		#if !defined(TEXEL_AA) || !defined(TEXEL_AA_FEATURE)
		#define USE_TEXEL_AA 0
		#else
		#define USE_TEXEL_AA 1
		#endif
		
		#ifdef ALPHA_TEST
		#define USE_ALPHA_TEST 1
		#else
		#define USE_ALPHA_TEST 0
		#endif
		
		#if __VERSION__ >= 300
		
		#include "uniformShaderConstants.glslh"
		
		#if USE_TEXEL_AA
		
		const float TEXEL_AA_LOD_CONSERVATIVE = -1.0;
		const float TEXEL_AA_LOD_RELAXED = 2.0;
		
		vec4 texture2D_AA(in sampler2D source, in highp vec2 originalUV) {
		
			highp vec2 dUV_dX = dFdx(originalUV) * TEXTURE_DIMENSIONS.xy;
			highp vec2 dUV_dY = dFdy(originalUV) * TEXTURE_DIMENSIONS.xy;
		
			highp vec2 delU = vec2(dUV_dX.x, dUV_dY.x);
			highp vec2 delV = vec2(dUV_dX.y, dUV_dY.y);
			highp vec2 adjustmentScalar = max(1.0 / vec2(length(delU), length(delV)), 1.0);
		
			highp vec2 fractionalTexel = fract(originalUV * TEXTURE_DIMENSIONS.xy);
			highp vec2 adjustedFractionalTexel = clamp(fractionalTexel * adjustmentScalar, 0.0, 0.5) + clamp(fractionalTexel * adjustmentScalar - (adjustmentScalar - 0.5), 0.0, 0.5);
		
			highp float lod = log2(sqrt(max(dot(dUV_dX, dUV_dX), dot(dUV_dY, dUV_dY))) * 2.0);
			highp float samplingMode = smoothstep(TEXEL_AA_LOD_RELAXED, TEXEL_AA_LOD_CONSERVATIVE, lod);
		
			highp vec2 adjustedUV = (adjustedFractionalTexel + floor(originalUV * TEXTURE_DIMENSIONS.xy)) / TEXTURE_DIMENSIONS.xy;
			lowp vec4 blendedSample = texture2D(source, mix(originalUV, adjustedUV, samplingMode));
		
			#if USE_ALPHA_TEST
				return vec4(blendedSample.rgb, mix(blendedSample.a, smoothstep(1.0/2.0, 1.0, blendedSample.a), samplingMode));
			#else
				return blendedSample;
			#endif
		}
		
		#endif // USE_TEXEL_AA
		
		#endif //__VERSION__ >= 300
		'''
Removed resource pack "util.h":
	file "vanilla":
		'''
		#if !defined(TEXEL_AA) || !defined(TEXEL_AA_FEATURE)
		#define USE_TEXEL_AA 0
		#else
		#define USE_TEXEL_AA 1
		#endif
		
		#ifdef ALPHA_TEST
		#define USE_ALPHA_TEST 1
		#else
		#define USE_ALPHA_TEST 0
		#endif
		
		#if __VERSION__ >= 300
		
		#include "uniformShaderConstants.h"
		
		#if USE_TEXEL_AA
		
		const float TEXEL_AA_LOD_CONSERVATIVE = -1.0;
		const float TEXEL_AA_LOD_RELAXED = 2.0;
		
		vec4 texture2D_AA(in sampler2D source, in highp vec2 originalUV) {
		
			highp vec2 dUV_dX = dFdx(originalUV) * TEXTURE_DIMENSIONS.xy;
			highp vec2 dUV_dY = dFdy(originalUV) * TEXTURE_DIMENSIONS.xy;
		
			highp vec2 delU = vec2(dUV_dX.x, dUV_dY.x);
			highp vec2 delV = vec2(dUV_dX.y, dUV_dY.y);
			highp vec2 adjustmentScalar = max(1.0 / vec2(length(delU), length(delV)), 1.0);
		
			highp vec2 fractionalTexel = fract(originalUV * TEXTURE_DIMENSIONS.xy);
			highp vec2 adjustedFractionalTexel = clamp(fractionalTexel * adjustmentScalar, 0.0, 0.5) + clamp(fractionalTexel * adjustmentScalar - (adjustmentScalar - 0.5), 0.0, 0.5);
		
			highp float lod = log2(sqrt(max(dot(dUV_dX, dUV_dX), dot(dUV_dY, dUV_dY))) * 2.0);
			highp float samplingMode = smoothstep(TEXEL_AA_LOD_RELAXED, TEXEL_AA_LOD_CONSERVATIVE, lod);
		
			highp vec2 adjustedUV = (adjustedFractionalTexel + floor(originalUV * TEXTURE_DIMENSIONS.xy)) / TEXTURE_DIMENSIONS.xy;
			lowp vec4 blendedSample = texture2D(source, mix(originalUV, adjustedUV, samplingMode));
		
			#if USE_ALPHA_TEST
				return vec4(blendedSample.rgb, mix(blendedSample.a, smoothstep(1.0/2.0, 1.0, blendedSample.a), samplingMode));
			#else
				return blendedSample;
			#endif
		}
		
		#endif // USE_TEXEL_AA
		
		#endif //__VERSION__ >= 300
		'''
Changed resource pack "uv.vertex":
	Changed file "vanilla":
		Total line: 17 (+0, -0)
		        '''
		 1  1   // __multiversion__
		 2  2   // This signals the loading code to prepend either #version 100 or #version 300 es as apropriate.
		 3  3   
		    4 + #include "vertexVersionCentroidUV.glslh"
		 4    - #include "vertexVersionCentroidUV.h"
		 5  5   
		    6 + #include "uniformWorldConstants.glslh"
		 6    - #include "uniformWorldConstants.h"
		 7  7   
		 8  8   attribute POS4 POSITION;
		 9  9   attribute vec2 TEXCOORD_0;
		10 10   
		11 11   
		        ...
		        '''
Changed resource pack "uv_as_color.fragment":
	Changed file "vanilla":
		Total line: 11 (+0, -0)
		        '''
		 1  1   // __multiversion__
		 2  2   // This signals the loading code to prepend either #version 100 or #version 300 es as apropriate.
		 3  3   
		    4 + #include "fragmentVersionSimple.glslh"
		 4    - #include "fragmentVersionSimple.h"
		 5  5   
		 6  6   varying vec2 uv;
		 7  7   
		 8  8   void main()
		 9  9   {
		        ...
		        '''
Changed resource pack "uv_blend.vertex":
	Changed file "vanilla":
		Total line: 29 (+0, -0)
		        '''
		 1  1   // __multiversion__
		 2  2   // This signals the loading code to prepend either #version 100 or #version 300 es as apropriate.
		 3  3   
		    4 + #include "vertexVersionCentroid.glslh"
		 4    - #include "vertexVersionCentroid.h"
		 5  5   #if __VERSION__ >= 300
		 6  6   
		 7  7   _centroid out vec2 uv;
		 8  8   _centroid out vec2 uv1;
		 9  9   
		        ...
		12 12   varying vec2 uv;
		13 13   varying vec2 uv1;
		14 14   
		15 15   #endif
		16 16   
		   17 + #include "uniformWorldConstants.glslh"
		17    - #include "uniformWorldConstants.h"
		18 18   
		19 19   attribute POS4 POSITION;
		20 20   attribute vec2 TEXCOORD_0;
		21 21   attribute vec2 TEXCOORD_1;
		22 22   
		        ...
		        '''
Changed resource pack "uv_blend_flipbook.vertex":
	Changed file "vanilla":
		Total line: 33 (+0, -0)
		        '''
		 1  1   // __multiversion__
		 2  2   // This signals the loading code to prepend either #version 100 or #version 300 es as apropriate.
		 3  3   
		    4 + #include "vertexVersionCentroid.glslh"
		 4    - #include "vertexVersionCentroid.h"
		 5  5   #if __VERSION__ >= 300
		 6  6   
		 7  7   _centroid out vec2 uv;
		 8  8   _centroid out vec2 uv1;
		 9  9   
		        ...
		13 13   varying vec2 uv1;
		14 14   
		15 15   #endif
		16 16   
		17 17   
		   18 + #include "uniformWorldConstants.glslh"
		   19 + #include "uniformFlipbookTextureConstants.glslh"
		18    - #include "uniformWorldConstants.h"
		19    - #include "uniformFlipbookTextureConstants.h"
		20 20   
		21 21   attribute POS4 POSITION;
		22 22   attribute vec2 TEXCOORD_0;
		23 23   
		24 24   
		        ...
		        '''
Changed resource pack "uv_repeat.vertex":
	Changed file "vanilla":
		Total line: 17 (+0, -0)
		        '''
		 1  1   // __multiversion__
		 2  2   // This signals the loading code to prepend either #version 100 or #version 300 es as apropriate.
		 3  3   
		    4 + #include "vertexVersionCentroidUV.glslh"
		 4    - #include "vertexVersionCentroidUV.h"
		 5  5   
		    6 + #include "uniformWorldConstants.glslh"
		    7 + #include "uniformShaderConstants.glslh"
		 6    - #include "uniformWorldConstants.h"
		 7    - #include "uniformShaderConstants.h"
		 8  8   
		 9  9   attribute POS4 POSITION;
		10 10   attribute vec2 TEXCOORD_0;
		11 11   
		12 12   void main()
		        ...
		        '''
Changed resource pack "uv_scale.vertex":
	Changed file "vanilla":
		Total line: 34 (+0, -0)
		        '''
		 1  1   // __multiversion__
		 2  2   // This signals the loading code to prepend either #version 100 or #version 300 es as apropriate.
		 3  3   
		    4 + #include "vertexVersionCentroidUV.glslh"
		 4    - #include "vertexVersionCentroidUV.h"
		 5  5   
		    6 + #include "uniformWorldConstants.glslh"
		    7 + #include "uniformEntityConstants.glslh"
		 6    - #include "uniformWorldConstants.h"
		 7    - #include "uniformEntityConstants.h"
		 8  8   #ifdef USE_SKINNING
		    9 + #include "uniformAnimationConstants.glslh"
		 9    - #include "uniformAnimationConstants.h"
		10 10   #endif
		11 11   
		12 12   attribute mediump vec4 POSITION;
		13 13   attribute vec2 TEXCOORD_0;
		14 14   #if defined(USE_SKINNING)
		        ...
		        '''
Changed resource pack "uv_selection_overlay.vertex":
	Changed file "vanilla":
		Total line: 37 (+0, -0)
		        '''
		 1  1   // __multiversion__
		 2  2   // This signals the loading code to prepend either #version 100 or #version 300 es as apropriate.
		 3  3   
		    4 + #include "vertexVersionCentroidUV.glslh"
		 4    - #include "vertexVersionCentroidUV.h"
		 5  5   
		    6 + #include "uniformWorldConstants.glslh"
		 6    - #include "uniformWorldConstants.h"
		 7  7   #ifdef USE_SKINNING
		    8 + #include "uniformAnimationConstants.glslh"
		 8    - #include "uniformAnimationConstants.h"
		 9  9   #endif
		10 10   
		11 11   attribute POS4 POSITION;
		12 12   attribute vec2 TEXCOORD_0;
		13 13   #if defined(USE_SKINNING)
		        ...
		        '''
Changed resource pack "uv_time_rotate.vertex":
	Changed file "vanilla":
		Total line: 17 (+0, -0)
		        '''
		 1  1   // __multiversion__
		 2  2   // This signals the loading code to prepend either #version 100 or #version 300 es as apropriate.
		 3  3   
		    4 + #include "vertexVersionCentroidUV.glslh"
		 4    - #include "vertexVersionCentroidUV.h"
		 5  5   
		    6 + #include "uniformWorldConstants.glslh"
		    7 + #include "uniformInterFrameConstants.glslh"
		 6    - #include "uniformWorldConstants.h"
		 7    - #include "uniformInterFrameConstants.h"
		 8  8   
		 9  9   attribute POS4 POSITION;
		10 10   attribute vec2 TEXCOORD_0;
		11 11   
		12 12   
		        ...
		        '''
Moved resource pack "vertexVersionCentroid.h" to "vertexVersionCentroid.glslh".
Moved resource pack "vertexVersionCentroidUV.h" to "vertexVersionCentroidUV.glslh".
Moved resource pack "vertexVersionSimple.h" to "vertexVersionSimple.glslh".