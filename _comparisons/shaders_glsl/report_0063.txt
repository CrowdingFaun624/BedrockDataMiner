Difference of "shaders_resource_packs" between "1.7.0" and "1.8.0.8" (beta of "1.8.0").
Unable to create data files for 1 file between: "1.7.1"

Changed resource pack "banner.fragment":
	Changed file "vanilla":
		Total line: 50 (+0, -0)
		        '''
		 1  1   // __multiversion__
		 2  2   // This signals the loading code to prepend either #version 100 or #version 300 es as apropriate.
		 3  3   
		    4 + #include "fragmentVersionCentroid.h"
		    5 + #include "uniformShaderConstants.h"
		 4    - #include "shaders/fragmentVersionCentroid.h"
		 5    - #include "shaders/uniformShaderConstants.h"
		 6  6   
		 7  7   LAYOUT_BINDING(0) uniform sampler2D TEXTURE_0;
		 8  8   
		 9  9   #if __VERSION__ >= 300
		10 10   _centroid varying vec4 uv;
		        ...
		        '''
Changed resource pack "banner.vertex":
	Changed file "vanilla":
		Total line: 121 (+0, -0)
		          '''
		  1   1   // __multiversion__
		  2   2   // This signals the loading code to prepend either #version 100 or #version 300 es as apropriate.
		  3   3   
		      4 + #include "vertexVersionCentroid.h"
		  4     - #include "shaders/vertexVersionCentroid.h"
		  5   5   
		      6 + #include "uniformWorldConstants.h"
		      7 + #include "uniformEntityConstants.h"
		      8 + #include "uniformPerFrameConstants.h"
		      9 + #include "uniformBannerConstants.h"
		  6     - #include "shaders/uniformWorldConstants.h"
		  7     - #include "shaders/uniformEntityConstants.h"
		  8     - #include "shaders/uniformPerFrameConstants.h"
		  9     - #include "shaders/uniformBannerConstants.h"
		 10  10   #ifdef USE_SKINNING
		     11 + #include "uniformAnimationConstants.h"
		 11     - #include "shaders/uniformAnimationConstants.h"
		 12  12   #endif
		 13  13   
		 14  14   attribute mediump vec4 POSITION;
		 15  15   attribute vec2 TEXCOORD_0;
		 16  16   attribute vec4 NORMAL;
		          ...
		          '''
Changed resource pack "barrier.vertex":
	Changed file "vanilla":
		Total line: 61 (+0, -0)
		        '''
		 1  1   // __multiversion__
		 2  2   
		    3 + #include "vertexVersionCentroid.h"
		 3    - #include "shaders/vertexVersionCentroid.h"
		 4  4   
		    5 + #include "uniformWorldConstants.h"
		    6 + #include "uniformPerFrameConstants.h"
		    7 + #include "uniformShaderConstants.h"
		    8 + #include "uniformRenderChunkConstants.h"
		 5    - #include "shaders/uniformWorldConstants.h"
		 6    - #include "shaders/uniformPerFrameConstants.h"
		 7    - #include "shaders/uniformShaderConstants.h"
		 8    - #include "shaders/uniformRenderChunkConstants.h"
		 9  9   
		10 10   attribute mediump vec4 POSITION;
		11 11   
		12 12   attribute vec4 COLOR;
		13 13   attribute vec2 TEXCOORD_0;
		        ...
		        '''
Changed resource pack "blur.fragment":
	Changed file "vanilla":
		Total line: 13 (+0, -0)
		        '''
		 1  1   // __multiversion__
		 2  2   // This signals the loading code to prepend either #version 100 or #version 300 es as apropriate.
		 3  3   
		    4 + #include "fragmentVersionCentroidUV.h"
		 4    - #include "shaders/fragmentVersionCentroidUV.h"
		 5  5   
		 6  6   LAYOUT_BINDING(0) uniform sampler2D TEXTURE_0;
		 7  7   
		 8  8   
		 9  9   void main() {
		        ...
		        '''
Changed resource pack "cloud.vertex":
	Changed file "vanilla":
		Total line: 32 (+0, -0)
		        '''
		 1  1   // __multiversion__
		 2  2   // This signals the loading code to prepend either #version 100 or #version 300 es as apropriate.
		 3  3   
		    4 + #include "vertexVersionSimple.h"
		 4    - #include "shaders/vertexVersionSimple.h"
		 5  5   
		    6 + #include "uniformWorldConstants.h"
		    7 + #include "uniformPerFrameConstants.h"
		    8 + #include "uniformShaderConstants.h"
		 6    - #include "shaders/uniformWorldConstants.h"
		 7    - #include "shaders/uniformPerFrameConstants.h"
		 8    - #include "shaders/uniformShaderConstants.h"
		 9  9   
		10 10   attribute mediump vec4 POSITION;
		11 11   attribute vec4 COLOR;
		12 12   
		13 13   varying vec4 color;
		        ...
		        '''
Changed resource pack "color.fragment":
	Changed file "vanilla":
		Total line: 11 (+0, -0)
		        '''
		 1  1   // __multiversion__
		 2  2   // This signals the loading code to prepend either #version 100 or #version 300 es as apropriate.
		 3  3   
		    4 + #include "fragmentVersionSimple.h"
		 4    - #include "shaders/fragmentVersionSimple.h"
		 5  5   
		 6  6   varying vec4 color;
		 7  7   
		 8  8   void main()
		 9  9   {
		        ...
		        '''
Changed resource pack "color.vertex":
	Changed file "vanilla":
		Total line: 18 (+0, -0)
		        '''
		 1  1   // __multiversion__
		 2  2   // This signals the loading code to prepend either #version 100 or #version 300 es as apropriate.
		 3  3   
		    4 + #include "vertexVersionSimple.h"
		 4    - #include "shaders/vertexVersionSimple.h"
		 5  5   
		    6 + #include "uniformWorldConstants.h"
		 6    - #include "shaders/uniformWorldConstants.h"
		 7  7   
		 8  8   attribute mediump vec4 POSITION;
		 9  9   attribute vec4 COLOR;
		10 10   
		11 11   varying vec4 color;
		        ...
		        '''
Changed resource pack "color_ex.fragment":
	Changed file "vanilla":
		Total line: 13 (+0, -0)
		        '''
		 1  1   // __multiversion__
		 2  2   // This signals the loading code to prepend either #version 100 or #version 300 es as apropriate.
		 3  3   
		    4 + #include "fragmentVersionSimple.h"
		 4    - #include "shaders/fragmentVersionSimple.h"
		 5  5   
		    6 + #include "uniformShaderConstants.h"
		 6    - #include "shaders/uniformShaderConstants.h"
		 7  7   
		 8  8   varying vec4 color;
		 9  9   
		10 10   void main()
		11 11   {
		        ...
		        '''
Changed resource pack "color_grayscale.fragment":
	Changed file "vanilla":
		Total line: 25 (+0, -0)
		        '''
		 1  1   // __multiversion__
		 2  2   // This signals the loading code to prepend either #version 100 or #version 300 es as apropriate.
		 3  3   
		    4 + #include "fragmentVersionCentroidUV.h"
		 4    - #include "shaders/fragmentVersionCentroidUV.h"
		 5  5   
		    6 + #include "uniformShaderConstants.h"
		 6    - #include "shaders/uniformShaderConstants.h"
		 7  7   
		 8  8   LAYOUT_BINDING(0) uniform sampler2D TEXTURE_0;
		 9  9   
		10 10   void main()
		11 11   {
		        ...
		        '''
Changed resource pack "color_texture.fragment":
	Changed file "vanilla":
		Total line: 101 (+26, -15)
		          '''
		  1   1   // __multiversion__
		  2   2   // This signals the loading code to prepend either #version 100 or #version 300 es as apropriate.
		  3   3   
		      4 + #include "fragmentVersionCentroidUV.h"
		      5 + 
		      6 + #include "uniformEntityConstants.h"
		      7 + #include "uniformShaderConstants.h"
		      8 + 
		      9 + LAYOUT_BINDING(0) uniform sampler2D TEXTURE_0;
		     10 + LAYOUT_BINDING(1) uniform sampler2D TEXTURE_1;
		     11 + 
		     12 + #ifdef EFFECTS_OFFSET
		     13 + #include "uniformEffectsConstants.h"
		     14 + #endif
		     15 + 
		     16 + varying vec4 color;
		     17 + 
		     18 + #ifdef ENABLE_FOG
		     19 + varying vec4 fogColor;
		     20 + #endif
		  4     - #include "shaders/fragmentVersionCentroidUV.h"
		  5  21   
		     22 + #ifdef GLINT
		     23 + 	varying vec2 layer1UV;
		  6     - #include "shaders/uniformEntityConstants.h"
		     24 + 	varying vec2 layer2UV;
		  7     - #include "shaders/uniformShaderConstants.h"
		  8  25   
		     26 + 	vec4 glintBlend(vec4 dest, vec4 source) {
		     27 + 		return vec4(source.rgb * source.rgb, 0.0) + dest;
		     28 + 	}
		  9     - LAYOUT_BINDING(0) uniform sampler2D TEXTURE_0;
		     29 + #endif
		 10     - LAYOUT_BINDING(1) uniform sampler2D TEXTURE_1;
		 11  30   
		     31 + void main()
		     32 + {
		 12  33   #ifdef EFFECTS_OFFSET
		 13     - #include "shaders/uniformEffectsConstants.h"
		 14     - #endif
		 15     - 
		     34 + 	vec4 diffuse = texture2D( TEXTURE_0,  uv + EFFECT_UV_OFFSET);
		 16     - varying vec4 color;
		 17     - 
		     35 + #else
		     36 + 	vec4 diffuse = texture2D( TEXTURE_0,  uv );
		 18     - #ifdef ENABLE_FOG
		 19     - varying vec4 fogColor;
		 20  37   #endif
		 21  38   
		     39 + #ifdef MULTI_COLOR_TINT
		 22     - #ifdef GLINT
		     40 + 	// Texture is a mask for tinting with two colors
		     41 + 	vec2 colorMask = diffuse.rg;
		 23     - 	varying vec2 layer1UV;
		 24     - 	varying vec2 layer2UV;
		 25  42   
		 26     - 	vec4 glintBlend(vec4 dest, vec4 source) {
		 27     - 		return vec4(source.rgb * source.rgb, 0.0) + dest;
		     43 + 	// Apply the base color tint
		     44 + 	diffuse.rgb = colorMask.rrr * color.rgb;
		 28     - 	}
		 29     - #endif
		 30  45   
		 31     - void main()
		 32     - {
		 33     - #ifdef EFFECTS_OFFSET
		 34     - 	vec4 diffuse = texture2D( TEXTURE_0,  uv + EFFECT_UV_OFFSET);
		     46 + 	// Apply the secondary color mask and tint so long as its grayscale value is not 0
		     47 + 	diffuse.rgb = mix(diffuse, colorMask.gggg * CHANGE_COLOR, ceil(colorMask.g)).rgb;
		 35     - #else
		 36     - 	vec4 diffuse = texture2D( TEXTURE_0,  uv );
		 37  48   #endif
		 38  49   
		 39  50   #ifdef ALPHA_TEST
		 40  51   #ifdef ENABLE_VERTEX_TINT_MASK
		 41  52   	if(diffuse.a <= 0.0)
		          ...
		 43  54   	if(diffuse.a < 0.5)
		 44  55   #endif
		 45  56   	 	discard;
		 46  57   #endif
		 47  58   
		     59 + #if defined(ENABLE_VERTEX_TINT_MASK) && !defined(MULTI_COLOR_TINT)
		 48     - #ifdef ENABLE_VERTEX_TINT_MASK
		 49  60   	diffuse.rgb = mix(diffuse.rgb, diffuse.rgb*color.rgb, diffuse.a);
		 50  61   	if (color.a > 0.0) {
		 51  62   		diffuse.a = (diffuse.a > 0.0) ? 1.0 : 0.0; // This line is needed for horse armour icon and dyed leather to work properly
		 52  63   	}
		 53  64   #endif
		          ...
		 74  85   
		 75  86   #ifdef ENABLE_CURRENT_ALPHA_MULTIPLY
		 76  87   	diffuse = diffuse * vec4(1.0, 1.0, 1.0, HUD_OPACITY);
		 77  88   #endif
		 78  89   
		     90 + #elif !defined(MULTI_COLOR_TINT)
		 79     - #else
		 80  91   	diffuse = diffuse * color;
		 81  92   #endif
		 82  93   
		 83  94   	// Fog needs to be applied after the color tinting.
		 84  95   #ifdef ENABLE_FOG
		          ...
		          '''
Changed resource pack "color_uv.vertex":
	Changed file "vanilla":
		Total line: 58 (+0, -0)
		        '''
		 1  1   // __multiversion__
		 2  2   // This signals the loading code to prepend either #version 100 or #version 300 es as apropriate.
		 3  3   
		    4 + #include "vertexVersionCentroidUV.h"
		 4    - #include "shaders/vertexVersionCentroidUV.h"
		 5  5   
		    6 + #include "uniformWorldConstants.h"
		    7 + #include "uniformEntityConstants.h"
		    8 + #include "uniformPerFrameConstants.h"
		 6    - #include "shaders/uniformWorldConstants.h"
		 7    - #include "shaders/uniformEntityConstants.h"
		 8    - #include "shaders/uniformPerFrameConstants.h"
		 9  9   
		10 10   attribute mediump vec4 POSITION;
		11 11   attribute vec4 COLOR;
		12 12   attribute vec2 TEXCOORD_0;
		13 13   
		        ...
		        '''
Changed resource pack "current_color.fragment":
	Changed file "vanilla":
		Total line: 15 (+0, -0)
		        '''
		 1  1   // __multiversion__
		 2  2   // This signals the loading code to prepend either #version 100 or #version 300 es as apropriate.
		 3  3   
		    4 + #include "fragmentVersionSimple.h"
		 4    - #include "shaders/fragmentVersionSimple.h"
		 5  5   
		    6 + #include "uniformShaderConstants.h"
		 6    - #include "shaders/uniformShaderConstants.h"
		 7  7   
		 8  8   void main()
		 9  9   {
		10 10   	gl_FragColor = CURRENT_COLOR;
		11 11   
		        ...
		        '''
Changed resource pack "depth_downsample.fragment":
	Changed file "vanilla":
		Total line: 18 (+0, -0)
		        '''
		        ...
		 4  4   // To use centroid sampling we need to have version 300 es shaders, which requires changing:
		 5  5   // attribute to in
		 6  6   // __multiversion__
		 7  7   // This signals the loading code to prepend either #version 100 or #version 300 es as apropriate.
		 8  8   
		    9 + #include "fragmentVersionCentroidUV.h"
		 9    - #include "shaders/fragmentVersionCentroidUV.h"
		10 10   
		11 11   LAYOUT_BINDING(0) uniform sampler2D TEXTURE_0;
		12 12   
		13 13   
		14 14   void main()
		        ...
		        '''
Changed resource pack "depth_of_field.fragment":
	Changed file "vanilla":
		Total line: 13 (+0, -0)
		        '''
		 1  1   // __multiversion__
		 2  2   // This signals the loading code to prepend either #version 100 or #version 300 es as apropriate.
		 3  3   
		    4 + #include "fragmentVersionCentroidUV.h"
		 4    - #include "shaders/fragmentVersionCentroidUV.h"
		 5  5   
		 6  6   LAYOUT_BINDING(0) uniform sampler2D TEXTURE_0;
		 7  7   
		 8  8   void main()
		 9  9   {
		        ...
		        '''
Changed resource pack "end_portal.fragment":
	Changed file "vanilla":
		Total line: 66 (+0, -0)
		        '''
		 1  1   // __multiversion__
		 2  2   // This signals the loading code to prepend either #version 100 or #version 300 es as apropriate.
		 3  3   
		    4 + #include "fragmentVersionCentroid.h"
		    5 + #include "uniformMacro.h"
		 4    - #include "shaders/fragmentVersionCentroid.h"
		 5    - #include "shaders/uniformMacro.h"
		 6  6   
		 7  7   #if __VERSION__ >= 300
		 8  8   	#ifndef BYPASS_PIXEL_SHADER
		 9  9   		#if defined(TEXEL_AA) && defined(TEXEL_AA_FEATURE)
		10 10   			_centroid in highp vec2 colorLookupUV;
		        ...
		        '''
Changed resource pack "end_portal.vertex":
	Changed file "vanilla":
		Total line: 116 (+0, -0)
		          '''
		          ...
		  7   7   // defining an out vec4 FragColor and replacing uses of gl_FragColor with FragColor
		  8   8   // texture2D to texture
		  9   9   
		 10  10   precision highp float;
		 11  11   
		     12 + #include "vertexVersionCentroid.h"
		 12     - #include "shaders/vertexVersionCentroid.h"
		 13  13   
		 14  14   #if __VERSION__ >= 300
		 15  15   	#ifndef BYPASS_PIXEL_SHADER
		 16  16   		_centroid out vec2 colorLookupUV;
		 17  17   		_centroid out vec2 parallaxUV;
		          ...
		 28  28   	#ifdef FOG
		 29  29   		varying vec4 fogColor;
		 30  30   	#endif
		 31  31   #endif
		 32  32   
		     33 + #include "uniformWorldConstants.h"
		     34 + #include "uniformPerFrameConstants.h"
		     35 + #include "uniformShaderConstants.h"
		     36 + #include "uniformRenderChunkConstants.h"
		 33     - #include "shaders/uniformWorldConstants.h"
		 34     - #include "shaders/uniformPerFrameConstants.h"
		 35     - #include "shaders/uniformShaderConstants.h"
		 36     - #include "shaders/uniformRenderChunkConstants.h"
		 37  37   
		 38  38   #ifndef BYPASS_PIXEL_SHADER
		 39  39   	attribute POS4 POSITION;
		 40  40   	attribute vec4 COLOR;
		 41  41   	attribute vec2 TEXCOORD_0;
		          ...
		          '''
Changed resource pack "entity.fragment":
	Changed file "vanilla":
		Total line: 182 (+44, -23)
		          '''
		  1   1   // __multiversion__
		  2   2   // This signals the loading code to prepend either #version 100 or #version 300 es as apropriate.
		  3   3   
		  4   4   
		      5 + #include "fragmentVersionCentroidUV.h"
		      6 + #include "uniformEntityConstants.h"
		      7 + 
		      8 + 
		      9 + #include "uniformShaderConstants.h"
		     10 + #include "util.h"
		     11 + 
		     12 + LAYOUT_BINDING(0) uniform sampler2D TEXTURE_0;
		     13 + LAYOUT_BINDING(1) uniform sampler2D TEXTURE_1;
		     14 + 
		     15 + #ifdef USE_MULTITEXTURE
		     16 + 	LAYOUT_BINDING(2) uniform sampler2D TEXTURE_2;
		     17 + #endif
		     18 + 
		     19 + varying vec4 light;
		     20 + varying vec4 fogColor;
		     21 + 
		     22 + #ifdef COLOR_BASED
		     23 + 	varying vec4 vertColor;
		     24 + #endif
		  5     - #include "shaders/fragmentVersionCentroidUV.h"
		  6     - #include "shaders/uniformEntityConstants.h"
		  7  25   
		     26 + #ifdef USE_OVERLAY
		     27 + 	varying vec4 overlayColor;
		     28 + #endif
		  8  29   
		     30 + #ifdef TINTED_ALPHA_TEST
		     31 + varying float alphaTestMultiplier;
		  9     - #include "shaders/uniformShaderConstants.h"
		     32 + #endif
		 10     - #include "shaders/util.h"
		 11  33   
		     34 + #if defined(USE_COLOR_MASK) || defined(ITEM_IN_HAND) || defined(COLOR_SECOND_TEXTURE)
		     35 + 	varying vec4 changeColor;
		 12     - LAYOUT_BINDING(0) uniform sampler2D TEXTURE_0;
		     36 + #endif
		 13     - LAYOUT_BINDING(1) uniform sampler2D TEXTURE_1;
		 14  37   
		     38 + #ifdef GLINT
		     39 + 	varying vec2 layer1UV;
		     40 + 	varying vec2 layer2UV;
		     41 + 	varying vec4 tileLightColor;
		     42 + 	varying vec4 glintColor;
		 15     - #ifdef USE_MULTITEXTURE
		 16     - 	LAYOUT_BINDING(2) uniform sampler2D TEXTURE_2;
		 17  43   #endif
		 18  44   
		     45 + vec4 glintBlend(vec4 dest, vec4 source) {
		     46 + 	// glBlendFuncSeparate(GL_SRC_COLOR, GL_ONE, GL_ONE, GL_ZERO)
		     47 + 	return vec4(source.rgb * source.rgb, source.a) + vec4(dest.rgb, 0.0);
		     48 + }
		 19     - varying vec4 light;
		 20     - varying vec4 fogColor;
		 21  49   
		     50 + #ifdef USE_EMISSIVE
		     51 + #ifdef USE_ONLY_EMISSIVE
		     52 + #define NEEDS_DISCARD(C) (C.a == 0.0 || C.a == 1.0 )
		     53 + #else
		     54 + #define NEEDS_DISCARD(C)	(C.a + C.r + C.g + C.b == 0.0)
		 22     - #ifdef USE_OVERLAY
		 23     - 	varying vec4 overlayColor;
		 24  55   #endif
		     56 + #else
		     57 + #ifndef USE_COLOR_MASK
		     58 + #define NEEDS_DISCARD(C)	(C.a < 0.5)
		 25     - 
		     59 + #else
		     60 + #define NEEDS_DISCARD(C)	(C.a == 0.0)
		 26     - #ifdef TINTED_ALPHA_TEST
		 27     - varying float alphaTestMultiplier;
		 28  61   #endif
		 29     - 
		 30     - #if defined(USE_COLOR_MASK) || defined(ITEM_IN_HAND) || defined(COLOR_SECOND_TEXTURE)
		 31     - 	varying vec4 changeColor;
		 32  62   #endif
		 33  63   
		 34     - #ifdef GLINT
		 35     - 	varying vec2 layer1UV;
		 36     - 	varying vec2 layer2UV;
		     64 + void main()
		     65 + {
		     66 + 	vec4 color = vec4(1.0);
		 37     - 	varying vec4 tileLightColor;
		 38     - 	varying vec4 glintColor;
		 39     - #endif
		 40  67   
		     68 + #ifndef NO_TEXTURE
		     69 + #if !defined(TEXEL_AA) || !defined(TEXEL_AA_FEATURE)
		     70 + 	color = texture2D( TEXTURE_0, uv );
		     71 + #else
		     72 + 	color = texture2D_AA(TEXTURE_0, uv);
		     73 + #endif // !defined(TEXEL_AA) || !defined(TEXEL_AA_FEATURE)
		 41     - vec4 glintBlend(vec4 dest, vec4 source) {
		 42     - 	// glBlendFuncSeparate(GL_SRC_COLOR, GL_ONE, GL_ONE, GL_ZERO)
		 43     - 	return vec4(source.rgb * source.rgb, source.a) + vec4(dest.rgb, 0.0);
		 44     - }
		 45  74   
		 46     - #ifdef USE_EMISSIVE
		 47     - #ifdef USE_ONLY_EMISSIVE
		 48     - #define NEEDS_DISCARD(C) (C.a == 0.0 || C.a == 1.0 )
		     75 + #if defined(ALPHA_TEST) && !defined(USE_MULTITEXTURE) && !defined(MULTIPLICATIVE_TINT)
		     76 + 	if(NEEDS_DISCARD(color))
		 49     - #else
		 50     - #define NEEDS_DISCARD(C)	(C.a + C.r + C.g + C.b == 0.0)
		     77 + 		discard;
		     78 + #endif // ALPHA_TEST
		     79 + 
		     80 + #ifdef TINTED_ALPHA_TEST
		     81 + vec4 testColor = color;
		     82 + testColor.a *= alphaTestMultiplier;
		     83 + 	if(NEEDS_DISCARD(testColor))
		 51     - #endif
		 52     - #else
		 53     - #ifndef USE_COLOR_MASK
		 54     - #define NEEDS_DISCARD(C)	(C.a < 0.5)
		 55     - #else
		 56     - #define NEEDS_DISCARD(C)	(C.a == 0.0)
		     84 + 		discard;
		     85 + #endif // TINTED_ALPHA_TEST
		     86 + #endif // NO_TEXTURE
		 57     - #endif
		 58     - #endif
		 59  87   
		     88 + #ifdef COLOR_BASED
		 60     - void main()
		 61     - {
		     89 + 	color = vertColor;
		 62     - 	vec4 color = vec4(1.0);
		     90 + #endif
		 63  91   
		 64     - #ifndef NO_TEXTURE
		 65     - #if !defined(TEXEL_AA) || !defined(TEXEL_AA_FEATURE)
		 66     - 	color = texture2D( TEXTURE_0, uv );
		     92 + #ifdef MULTI_COLOR_TINT
		     93 + 	// Texture is a mask for tinting with two colors
		     94 + 	vec2 colorMask = color.rg;
		 67     - #else
		 68     - 	color = texture2D_AA(TEXTURE_0, uv);
		 69     - #endif // !defined(TEXEL_AA) || !defined(TEXEL_AA_FEATURE)
		 70  95   
		 71     - #if defined(ALPHA_TEST) && !defined(USE_MULTITEXTURE) && !defined(MULTIPLICATIVE_TINT)
		 72     - 	if(NEEDS_DISCARD(color))
		     96 + 	// Apply the base color tint
		     97 + 	color.rgb = colorMask.rrr * CHANGE_COLOR.rgb;
		 73     - 		discard;
		 74     - #endif // ALPHA_TEST
		 75  98   
		 76     - #ifdef TINTED_ALPHA_TEST
		 77     - vec4 testColor = color;
		 78     - testColor.a *= alphaTestMultiplier;
		 79     - 	if(NEEDS_DISCARD(testColor))
		     99 + 	// Apply the secondary color mask and tint so long as its grayscale value is not 0
		    100 + 	color.rgb = mix(color, colorMask.gggg * MULTIPLICATIVE_TINT_CHANGE_COLOR, ceil(colorMask.g)).rgb;
		    101 + #else
		 80     - 		discard;
		 81     - #endif // TINTED_ALPHA_TEST
		 82     - #endif // NO_TEXTURE
		 83 102   
		 84 103   #ifdef USE_COLOR_MASK
		 85 104   	color.rgb = mix(color.rgb, color.rgb*changeColor.rgb, color.a);
		 86 105   	color.a *= changeColor.a;
		 87 106   #endif
		 88 107   
		 89 108   #ifdef ITEM_IN_HAND
		    109 + 	color.rgb = mix(color.rgb, color.rgb*changeColor.rgb, vertColor.a);
		 90     - 	color.rgb = mix(color.rgb, color.rgb*changeColor.rgb, light.a);
		 91 110   #if defined(MCPE_PLATFORM_NX) && defined(NO_TEXTURE) && defined(GLINT)
		 92 111   	// TODO(adfairfi): This needs to be properly fixed soon. We have a User Story for it in VSO: 102633
		 93 112   	vec3 dummyColor = texture2D(TEXTURE_0, vec2(0.0, 0.0)).rgb;
		 94 113   	color.rgb += dummyColor * 0.000000001;
		 95 114   #endif
		    115 + #endif // MULTI_COLOR_TINT
		    116 + 
		 96 117   #endif
		 97 118   
		 98 119   #ifdef USE_MULTITEXTURE
		 99 120   	vec4 tex1 = texture2D( TEXTURE_1, uv );
		100 121   	vec4 tex2 = texture2D( TEXTURE_2, uv );
		          ...
		          '''
Changed resource pack "entity.vertex":
	Changed file "vanilla":
		Total line: 161 (+23, -19)
		          '''
		  1   1   // __multiversion__
		  2   2   // This signals the loading code to prepend either #version 100 or #version 300 es as apropriate.
		  3   3   
		      4 + #include "vertexVersionCentroidUV.h"
		  4     - #include "shaders/vertexVersionCentroidUV.h"
		  5   5   
		      6 + #include "uniformWorldConstants.h"
		      7 + #include "uniformEntityConstants.h"
		      8 + #include "uniformPerFrameConstants.h"
		  6     - #include "shaders/uniformWorldConstants.h"
		  7     - #include "shaders/uniformEntityConstants.h"
		  8     - #include "shaders/uniformPerFrameConstants.h"
		  9   9   #ifdef USE_SKINNING
		     10 + #include "uniformAnimationConstants.h"
		 10     - #include "shaders/uniformAnimationConstants.h"
		 11  11   #endif
		 12  12   
		 13  13   attribute mediump vec4 POSITION;
		 14  14   attribute vec2 TEXCOORD_0;
		 15  15   attribute vec4 NORMAL;
		          ...
		 21  21   #endif
		 22  22   #endif
		 23  23   
		 24  24   #ifdef COLOR_BASED
		 25  25   	attribute vec4 COLOR;
		     26 +     varying vec4 vertColor;
		 26  27   #endif
		 27  28   
		 28  29   varying vec4 light;
		 29  30   varying vec4 fogColor;
		 30  31   
		          ...
		 68  69   
		 69  70       //take care of double sided polygons on materials without culling
		 70  71   #ifdef FLIP_BACKFACES
		 71  72   #ifdef USE_SKINNING
		 72  73   #if defined(LARGE_VERTEX_SHADER_UNIFORMS)
		     74 +     vec3 viewDir = normalize((BONES[int(BONEID_0)] * POSITION).xyz);
		     75 + #else
		     76 + 	vec3 viewDir = normalize((BONE * POSITION).xyz);
		 73     -     vec3 viewDir = normalize((BONES[int(BONEID_0)] * POSITION).xyz);
		     77 + #endif
		 74  78   #else
		     79 +     vec3 viewDir = normalize((WORLD * POSITION).xyz);
		     80 + #endif
		     81 +     if( dot(N, viewDir) > 0.0 )
		     82 +         N *= -1.0;
		 75     - 	vec3 viewDir = normalize((BONE * POSITION).xyz);
		 76  83   #endif
		     84 + 
		     85 +     float yLight = (1.0+N.y) * 0.5;
		     86 +     return yLight * (1.0-AMBIENT) + N.x*N.x * XFAC + N.z*N.z * ZFAC + AMBIENT;
		 77  87   #else
		 78     -     vec3 viewDir = normalize((WORLD * POSITION).xyz);
		 79     - #endif
		 80     -     if( dot(N, viewDir) > 0.0 )
		     88 +     return 1.0;
		 81     -         N *= -1.0;
		 82  89   #endif
		     90 + }
		 83  91   
		     92 + #ifdef GLINT
		     93 + vec2 calculateLayerUV(float offset, float rotation) {
		     94 + 	vec2 uv = TEXCOORD_0;
		     95 + 	uv -= 0.5;
		     96 + 	float rsin = sin(rotation);
		     97 + 	float rcos = cos(rotation);
		     98 + 	uv = mat2(rcos, -rsin, rsin, rcos) * uv;
		     99 + 	uv.x += offset;
		    100 + 	uv += 0.5;
		 84     -     float yLight = (1.0+N.y) * 0.5;
		 85     -     return yLight * (1.0-AMBIENT) + N.x*N.x * XFAC + N.z*N.z * ZFAC + AMBIENT;
		 86     - #else
		 87     -     return 1.0;
		 88     - #endif
		 89     - }
		 90 101   
		 91     - #ifdef GLINT
		 92     - vec2 calculateLayerUV(float offset, float rotation) {
		    102 + 	return uv * GLINT_UV_SCALE;
		 93     - 	vec2 uv = TEXCOORD_0;
		    103 + }
		    104 + #endif
		    105 + 
		    106 + void main()
		    107 + {
		    108 + #ifdef USE_SKINNING
		    109 + #if defined(LARGE_VERTEX_SHADER_UNIFORMS)
		    110 +     POS4 pos = WORLDVIEWPROJ * BONES[int(BONEID_0)] * POSITION;
		    111 + #else
		    112 +     POS4 pos = WORLDVIEWPROJ * BONE * POSITION;
		 94     - 	uv -= 0.5;
		 95     - 	float rsin = sin(rotation);
		 96     - 	float rcos = cos(rotation);
		 97     - 	uv = mat2(rcos, -rsin, rsin, rcos) * uv;
		 98     - 	uv.x += offset;
		 99     - 	uv += 0.5;
		100     - 
		101     - 	return uv * GLINT_UV_SCALE;
		102     - }
		103 113   #endif
		    114 + #else
		104     - 
		105     - void main()
		    115 +     POS4 pos = WORLDVIEWPROJ * POSITION;
		    116 + #endif
		    117 +     gl_Position = pos;
		    118 + 
		    119 +     float L = lightIntensity();
		    120 + 
		106     - {
		107     - #ifdef USE_SKINNING
		108     - #if defined(LARGE_VERTEX_SHADER_UNIFORMS)
		109     -     POS4 pos = WORLDVIEWPROJ * BONES[int(BONEID_0)] * POSITION;
		110     - #else
		111     -     POS4 pos = WORLDVIEWPROJ * BONE * POSITION;
		112     - #endif
		    121 + #ifdef USE_OVERLAY
		    122 + 	L += OVERLAY_COLOR.a * 0.35;
		113     - #else
		114     -     POS4 pos = WORLDVIEWPROJ * POSITION;
		115 123   #endif
		116     -     gl_Position = pos;
		117     - 
		118     -     float L = lightIntensity();
		119 124   
		    125 + #ifdef TINTED_ALPHA_TEST
		120     - #ifdef USE_OVERLAY
		121     - 	L += OVERLAY_COLOR.a * 0.35;
		    126 +     alphaTestMultiplier = OVERLAY_COLOR.a;
		122     -     overlayColor = OVERLAY_COLOR;
		123 127   #endif
		124 128   
		    129 + #if defined(USE_COLOR_MASK) || defined(ITEM_IN_HAND) || defined(COLOR_SECOND_TEXTURE)
		125     - #ifdef TINTED_ALPHA_TEST
		    130 +     changeColor = CHANGE_COLOR;
		126     -     alphaTestMultiplier = OVERLAY_COLOR.a;
		127 131   #endif
		    132 + 
		    133 +     light = vec4(vec3(L) * TILE_LIGHT_COLOR.xyz, 1.0);
		128 134   
		    135 + #ifdef COLOR_BASED
		129     - #if defined(USE_COLOR_MASK) || defined(ITEM_IN_HAND) || defined(COLOR_SECOND_TEXTURE)
		    136 + 	vertColor = COLOR;
		130     -     changeColor = CHANGE_COLOR;
		131 137   #endif
		    138 +     
		132     - 
		133     -     light = vec4(vec3(L) * TILE_LIGHT_COLOR.xyz, 1.0);
		134     - 
		    139 + #ifdef USE_OVERLAY
		    140 + 	overlayColor = OVERLAY_COLOR;
		135     - #ifdef COLOR_BASED
		136     - 	light *= COLOR;
		137 141   #endif
		    142 + 
		138     -     
		139 143   #ifndef NO_TEXTURE
		140 144       uv = TEXCOORD_0;
		141 145   #endif
		142 146   
		143 147   #ifdef USE_UV_ANIM
		          ...
		          '''
Changed resource pack "flat_white.fragment":
	Changed file "vanilla":
		Total line: 9 (+0, -0)
		      '''
		1 1   // __multiversion__
		2 2   // This signals the loading code to prepend either #version 100 or #version 300 es as apropriate.
		3 3   
		  4 + #include "fragmentVersionSimple.h"
		4   - #include "shaders/fragmentVersionSimple.h"
		5 5   
		6 6   void main()
		7 7   {
		8 8   	gl_FragColor = vec4(1.0);
		9 9   }
		      '''
Changed resource pack "hologram_texture_stereo.fragment":
	Changed file "vanilla":
		Total line: 11 (+0, -0)
		        '''
		 1  1   // __multiversion__
		 2  2   // This signals the loading code to prepend either #version 100 or #version 300 es as apropriate.
		 3  3   
		    4 + #include "fragmentVersionCentroidUV.h"
		 4    - #include "shaders/fragmentVersionCentroidUV.h"
		 5  5   
		 6  6   //This file is purely here to let the code compile. It is used only for HoloWall, which currently runs only on DX11 compatible devices
		 7  7   
		 8  8   void main()
		 9  9   {
		        ...
		        '''
Changed resource pack "hummingbird/blur.fragment":
	Changed file "vanilla":
		Total line: 31 (+0, -0)
		        '''
		 1  1   // __multiversion__
		 2  2   // This signals the loading code to prepend either #version 100 or #version 300 es as apropriate.
		 3  3   
		    4 + #include "fragmentVersionCentroidUV.h"
		    5 + #include "uniformMacro.h"
		 4    - #include "shaders/fragmentVersionCentroidUV.h"
		 5    - #include "shaders/uniformMacro.h"
		 6  6   
		 7  7   varying vec4 ColorOut;
		 8  8   varying vec4 AdditionalOut;
		 9  9   
		10 10   uniform sampler2D TEXTURE_0;
		        ...
		        '''
Changed resource pack "hummingbird/hairline.fragment":
	Changed file "vanilla":
		Total line: 17 (+0, -0)
		        '''
		 1  1   // __multiversion__
		 2  2   // This signals the loading code to prepend either #version 100 or #version 300 es as apropriate.
		 3  3   
		    4 + #include "fragmentVersionCentroidUV.h"
		    5 + #include "uniformMacro.h"
		 4    - #include "shaders/fragmentVersionCentroidUV.h"
		 5    - #include "shaders/uniformMacro.h"
		 6  6   
		 7  7   varying vec4 ColorOut;
		 8  8   varying vec4 AdditionalOut;
		 9  9   varying vec3 ScreenNormalPosition;
		10 10   
		        ...
		        '''
Changed resource pack "hummingbird/path.fragment":
	Changed file "vanilla":
		Total line: 13 (+0, -0)
		        '''
		 1  1   // __multiversion__
		 2  2   // This signals the loading code to prepend either #version 100 or #version 300 es as apropriate.
		 3  3   
		    4 + #include "fragmentVersionCentroidUV.h"
		    5 + #include "uniformMacro.h"
		 4    - #include "shaders/fragmentVersionCentroidUV.h"
		 5    - #include "shaders/uniformMacro.h"
		 6  6   
		 7  7   varying vec2 ExtraParams;
		 8  8   
		 9  9   uniform vec4 PRIM_PROPS_0;
		10 10   
		        ...
		        '''
Changed resource pack "hummingbird/path.vertex":
	Changed file "vanilla":
		Total line: 23 (+0, -0)
		        '''
		 1  1   // __multiversion__
		 2  2   // This signals the loading code to prepend either #version 100 or #version 300 es as apropriate.
		 3  3   
		    4 + #include "vertexVersionSimple.h"
		 4    - #include "shaders/vertexVersionSimple.h"
		 5  5   
		 6  6   attribute vec4 POSITION;
		 7  7   
		 8  8   uniform mat4 TRANSFORM;
		 9  9   
		        ...
		        '''
Changed resource pack "hummingbird/path_hairline.fragment":
	Changed file "vanilla":
		Total line: 32 (+0, -0)
		        '''
		 1  1   // __multiversion__
		 2  2   // This signals the loading code to prepend either #version 100 or #version 300 es as apropriate.
		 3  3   
		    4 + #include "fragmentVersionCentroidUV.h"
		    5 + #include "uniformMacro.h"
		 4    - #include "shaders/fragmentVersionCentroidUV.h"
		 5    - #include "shaders/uniformMacro.h"
		 6  6   
		 7  7   varying vec2 ExtraParams;
		 8  8   
		 9  9   uniform vec4 PRIM_PROPS_0;
		10 10   uniform vec4 PRIM_PROPS_1;
		        ...
		        '''
Changed resource pack "hummingbird/path_hairline_fallback.fragment":
	Changed file "vanilla":
		Total line: 23 (+0, -0)
		        '''
		 1  1   // __multiversion__
		 2  2   // This signals the loading code to prepend either
		 3  3   
		    4 + #include "fragmentVersionCentroidUV.h"
		    5 + #include "uniformMacro.h"
		 4    - #include "shaders/fragmentVersionCentroidUV.h"
		 5    - #include "shaders/uniformMacro.h"
		 6  6   
		 7  7   varying vec2 ExtraParams;
		 8  8   
		 9  9   uniform vec4 PRIM_PROPS_0;
		10 10   uniform vec4 PRIM_PROPS_1;
		        ...
		        '''
Changed resource pack "hummingbird/renoir.fragment":
	Changed file "vanilla":
		Total line: 50 (+0, -0)
		        '''
		 1  1   // __multiversion__
		 2  2   // This signals the loading code to prepend either #version 100 or #version 300 es as apropriate.
		 3  3   
		    4 + #include "fragmentVersionCentroidUV.h"
		    5 + #include "uniformMacro.h"
		 4    - #include "shaders/fragmentVersionCentroidUV.h"
		 5    - #include "shaders/uniformMacro.h"
		 6  6   
		 7  7   varying vec4 ColorOut;
		 8  8   varying vec4 AdditionalOut;
		 9  9   varying vec4 VaryingParam0;
		10 10   varying vec4 VaryingParam1;
		        ...
		        '''
Changed resource pack "hummingbird/renoir.vertex":
	Changed file "vanilla":
		Total line: 38 (+0, -0)
		        '''
		 1  1   // __multiversion__
		 2  2   // This signals the loading code to prepend either #version 100 or #version 300 es as apropriate.
		 3  3   
		    4 + #include "vertexVersionSimple.h"
		 4    - #include "shaders/vertexVersionSimple.h"
		 5  5   
		 6  6   attribute vec3 POSITION_3;
		 7  7   attribute vec4 COLOR_4;
		 8  8   attribute vec4 ADDITIONAL;
		 9  9   
		        ...
		        '''
Changed resource pack "hummingbird/standard.fragment":
	Changed file "vanilla":
		Total line: 14 (+0, -0)
		        '''
		 1  1   // __multiversion__
		 2  2   // This signals the loading code to prepend either #version 100 or #version 300 es as apropriate.
		 3  3   
		    4 + #include "fragmentVersionCentroidUV.h"
		    5 + #include "uniformMacro.h"
		 4    - #include "shaders/fragmentVersionCentroidUV.h"
		 5    - #include "shaders/uniformMacro.h"
		 6  6   
		 7  7   varying vec4 ColorOut;
		 8  8   varying vec4 AdditionalOut;
		 9  9   
		10 10   void main() {
		        ...
		        '''
Changed resource pack "hummingbird/standard.vertex":
	Changed file "vanilla":
		Total line: 29 (+0, -0)
		        '''
		 1  1   // __multiversion__
		 2  2   // This signals the loading code to prepend either #version 100 or #version 300 es as apropriate.
		 3  3   
		    4 + #include "vertexVersionSimple.h"
		 4    - #include "shaders/vertexVersionSimple.h"
		 5  5   
		 6  6   attribute vec3 POSITION_3;
		 7  7   attribute vec4 COLOR_4;
		 8  8   attribute vec4 ADDITIONAL;
		 9  9   
		        ...
		        '''
Changed resource pack "hummingbird/standard_circle.fragment":
	Changed file "vanilla":
		Total line: 22 (+0, -0)
		        '''
		 1  1   // __multiversion__
		 2  2   // This signals the loading code to prepend either #version 100 or #version 300 es as apropriate.
		 3  3   
		    4 + #include "fragmentVersionCentroidUV.h"
		    5 + #include "uniformMacro.h"
		 4    - #include "shaders/fragmentVersionCentroidUV.h"
		 5    - #include "shaders/uniformMacro.h"
		 6  6   
		 7  7   varying vec4 ColorOut;
		 8  8   varying vec4 AdditionalOut;
		 9  9   varying vec3 ScreenNormalPosition;
		10 10   
		        ...
		        '''
Changed resource pack "hummingbird/standard_ellipse.fragment":
	Changed file "vanilla":
		Total line: 27 (+0, -0)
		        '''
		 1  1   #extension GL_OES_standard_derivatives : enable
		 2  2   precision mediump float;
		 3  3   
		    4 + #include "fragmentVersionCentroidUV.h"
		    5 + #include "uniformMacro.h"
		 4    - #include "shaders/fragmentVersionCentroidUV.h"
		 5    - #include "shaders/uniformMacro.h"
		 6  6   
		 7  7   varying vec4 ColorOut;
		 8  8   varying vec4 AdditionalOut;
		 9  9   varying vec3 ScreenNormalPosition;
		10 10   
		        ...
		        '''
Changed resource pack "hummingbird/standard_ellipse_fallback.fragment":
	Changed file "vanilla":
		Total line: 32 (+0, -0)
		        '''
		 1  1   // __multiversion__
		 2  2   // This signals the loading code to prepend either #version 100 or #version 300 es as apropriate.
		 3  3   
		    4 + #include "fragmentVersionCentroidUV.h"
		    5 + #include "uniformMacro.h"
		 4    - #include "shaders/fragmentVersionCentroidUV.h"
		 5    - #include "shaders/uniformMacro.h"
		 6  6   
		 7  7   varying vec4 ColorOut;
		 8  8   varying vec4 AdditionalOut;
		 9  9   varying vec3 ScreenNormalPosition;
		10 10   
		        ...
		        '''
Changed resource pack "hummingbird/standard_stroke_circle.fragment":
	Changed file "vanilla":
		Total line: 23 (+0, -0)
		        '''
		 1  1   // __multiversion__
		 2  2   // This signals the loading code to prepend either #version 100 or #version 300 es as apropriate.
		 3  3   
		    4 + #include "fragmentVersionCentroidUV.h"
		    5 + #include "uniformMacro.h"
		 4    - #include "shaders/fragmentVersionCentroidUV.h"
		 5    - #include "shaders/uniformMacro.h"
		 6  6   
		 7  7   varying vec4 ColorOut;
		 8  8   varying vec4 AdditionalOut;
		 9  9   varying vec3 ScreenNormalPosition;
		10 10   
		        ...
		        '''
Changed resource pack "hummingbird/standard_stroke_ellipse.fragment":
	Changed file "vanilla":
		Total line: 40 (+0, -0)
		        '''
		 1  1   // __multiversion__
		 2  2   // This signals the loading code to prepend either #version 100 or #version 300 es as apropriate.
		 3  3   
		    4 + #include "fragmentVersionCentroidUV.h"
		    5 + #include "uniformMacro.h"
		 4    - #include "shaders/fragmentVersionCentroidUV.h"
		 5    - #include "shaders/uniformMacro.h"
		 6  6   
		 7  7   varying vec4 ColorOut;
		 8  8   varying vec4 AdditionalOut;
		 9  9   varying vec3 ScreenNormalPosition;
		10 10   
		        ...
		        '''
Changed resource pack "hummingbird/standard_stroke_ellipse_fallback.fragment":
	Changed file "vanilla":
		Total line: 46 (+0, -0)
		        '''
		 1  1   // __multiversion__
		 2  2   // This signals the loading code to prepend either #version 100 or #version 300 es as apropriate.
		 3  3   
		    4 + #include "fragmentVersionCentroidUV.h"
		    5 + #include "uniformMacro.h"
		 4    - #include "shaders/fragmentVersionCentroidUV.h"
		 5    - #include "shaders/uniformMacro.h"
		 6  6   
		 7  7   varying vec4 ColorOut;
		 8  8   varying vec4 AdditionalOut;
		 9  9   varying vec3 ScreenNormalPosition;
		10 10   
		        ...
		        '''
Changed resource pack "hummingbird/standard_texture.fragment":
	Changed file "vanilla":
		Total line: 37 (+0, -0)
		        '''
		 1  1   // __multiversion__
		 2  2   // This signals the loading code to prepend either #version 100 or #version 300 es as apropriate.
		 3  3   
		    4 + #include "fragmentVersionCentroidUV.h"
		    5 + #include "uniformMacro.h"
		 4    - #include "shaders/fragmentVersionCentroidUV.h"
		 5    - #include "shaders/uniformMacro.h"
		 6  6   
		 7  7   varying vec4 ColorOut;
		 8  8   varying vec4 AdditionalOut;
		 9  9   
		10 10   uniform sampler2D TEXTURE_0;
		        ...
		        '''
Changed resource pack "hummingbird/standard_texture_with_color_matrix.fragment":
	Changed file "vanilla":
		Total line: 29 (+0, -0)
		        '''
		 1  1   // __multiversion__
		 2  2   // This signals the loading code to prepend either #version 100 or #version 300 es as apropriate.
		 3  3   
		    4 + #include "fragmentVersionCentroidUV.h"
		    5 + #include "uniformMacro.h"
		 4    - #include "shaders/fragmentVersionCentroidUV.h"
		 5    - #include "shaders/uniformMacro.h"
		 6  6   
		 7  7   varying vec4 ColorOut;
		 8  8   varying vec4 AdditionalOut;
		 9  9   
		10 10   uniform sampler2D TEXTURE_0;
		        ...
		        '''
Changed resource pack "hummingbird/stencil.fragment":
	Changed file "vanilla":
		Total line: 11 (+0, -0)
		        '''
		 1  1   // __multiversion__
		 2  2   // This signals the loading code to prepend either #version 100 or #version 300 es as apropriate.
		 3  3   
		    4 + #include "fragmentVersionCentroidUV.h"
		    5 + #include "uniformMacro.h"
		 4    - #include "shaders/fragmentVersionCentroidUV.h"
		 5    - #include "shaders/uniformMacro.h"
		 6  6   
		    7 + varying vec4 outColor;
		 7    - varying vec4 ColorOut;
		 8  8   
		 9  9   void main() {
		10 10   	gl_FragColor = vec4(1.0, 1.0, 1.0, 1.0);
		11 11   }
		        '''
Changed resource pack "hummingbird/stencil_circle.fragment":
	Changed file "vanilla":
		Total line: 24 (+0, -0)
		        '''
		 1  1   // __multiversion__
		 2  2   // This signals the loading code to prepend either #version 100 or #version 300 es as apropriate.
		 3  3   
		    4 + #include "fragmentVersionCentroidUV.h"
		    5 + #include "uniformMacro.h"
		 4    - #include "shaders/fragmentVersionCentroidUV.h"
		 5    - #include "shaders/uniformMacro.h"
		 6  6   
		 7  7   varying vec4 ColorOut;
		 8  8   varying vec4 AdditionalOut;
		 9  9   varying vec3 ScreenNormalPosition;
		10 10   
		        ...
		        '''
Changed resource pack "hummingbird/stencil_path.fragment":
	Changed file "vanilla":
		Total line: 15 (+0, -0)
		        '''
		 1  1   // __multiversion__
		 2  2   // This signals the loading code to prepend either
		 3  3   
		    4 + #include "fragmentVersionCentroidUV.h"
		    5 + #include "uniformMacro.h"
		 4    - #include "shaders/fragmentVersionCentroidUV.h"
		 5    - #include "shaders/uniformMacro.h"
		 6  6   
		 7  7   varying vec2 ExtraParams;
		 8  8   
		 9  9   void main() {
		10 10   	if (ExtraParams.y < 0.00390625) {
		        ...
		        '''
Changed resource pack "hummingbird/stencil_texture.fragment":
	Changed file "vanilla":
		Total line: 19 (+0, -0)
		        '''
		 1  1   // __multiversion__
		 2  2   // This signals the loading code to prepend either #version 100 or #version 300 es as apropriate.
		 3  3   
		    4 + #include "fragmentVersionCentroidUV.h"
		    5 + #include "uniformMacro.h"
		 4    - #include "shaders/fragmentVersionCentroidUV.h"
		 5    - #include "shaders/uniformMacro.h"
		 6  6   
		 7  7   varying vec4 AdditionalOut;
		 8  8   
		 9  9   uniform sampler2D TEXTURE_0;
		10 10   
		        ...
		        '''
Changed resource pack "hummingbird/text.fragment":
	Changed file "vanilla":
		Total line: 20 (+0, -0)
		        '''
		 1  1   // __multiversion__
		 2  2   // This signals the loading code to prepend either #version 100 or #version 300 es as apropriate.
		 3  3   
		    4 + #include "fragmentVersionCentroidUV.h"
		    5 + #include "uniformMacro.h"
		 4    - #include "shaders/fragmentVersionCentroidUV.h"
		 5    - #include "shaders/uniformMacro.h"
		 6  6   
		 7  7   varying vec4 ColorOut;
		 8  8   varying vec4 AdditionalOut;
		 9  9   
		10 10   uniform sampler2D TEXTURE_0;
		        ...
		        '''
Changed resource pack "hummingbird/text.vertex":
	Changed file "vanilla":
		Total line: 30 (+0, -0)
		        '''
		 1  1   // __multiversion__
		 2  2   // This signals the loading code to prepend either #version 100 or #version 300 es as apropriate.
		 3  3   
		    4 + #include "vertexVersionSimple.h"
		 4    - #include "shaders/vertexVersionSimple.h"
		 5  5   
		 6  6   attribute vec3 POSITION_3;
		 7  7   attribute vec4 COLOR_4;
		 8  8   attribute vec4 ADDITIONAL;
		 9  9   
		        ...
		        '''
Changed resource pack "hummingbird/text_sdf.fragment":
	Changed file "vanilla":
		Total line: 39 (+0, -0)
		        '''
		 1  1   // __multiversion__
		 2  2   // This signals the loading code to prepend either #version 100 or #version 300 es as apropriate.
		 3  3   
		    4 + #include "fragmentVersionCentroidUV.h"
		    5 + #include "uniformMacro.h"
		 4    - #include "shaders/fragmentVersionCentroidUV.h"
		 5    - #include "shaders/uniformMacro.h"
		 6  6   
		 7  7   varying vec4 ColorOut;
		 8  8   varying vec4 AdditionalOut;
		 9  9   
		10 10   uniform sampler2D TEXTURE_0;
		        ...
		        '''
Changed resource pack "hummingbird/text_stroke_sdf.fragment":
	Changed file "vanilla":
		Total line: 37 (+0, -0)
		        '''
		 1  1   // __multiversion__
		 2  2   // This signals the loading code to prepend either #version 100 or #version 300 es as apropriate.
		 3  3   
		    4 + #include "fragmentVersionCentroidUV.h"
		    5 + #include "uniformMacro.h"
		 4    - #include "shaders/fragmentVersionCentroidUV.h"
		 5    - #include "shaders/uniformMacro.h"
		 6  6   
		 7  7   varying vec4 ColorOut;
		 8  8   varying vec4 AdditionalOut;
		 9  9   
		10 10   uniform sampler2D TEXTURE_0;
		        ...
		        '''
Changed resource pack "hummingbird/yuv_2_rgb.fragment":
	Changed file "vanilla":
		Total line: 26 (+0, -0)
		        '''
		 1  1   // __multiversion__
		 2  2   // This signals the loading code to prepend either #version 100 or #version 300 es as apropriate.
		 3  3   
		    4 + #include "fragmentVersionCentroidUV.h"
		    5 + #include "uniformMacro.h"
		 4    - #include "shaders/fragmentVersionCentroidUV.h"
		 5    - #include "shaders/uniformMacro.h"
		 6  6   
		 7  7   varying vec4 ColorOut;
		 8  8   varying vec4 AdditionalOut;
		 9  9   
		10 10   uniform sampler2D TEXTURE_0;
		        ...
		        '''
Changed resource pack "iteminhand.fragment":
	Changed file "vanilla":
		Total line: 17 (+0, -0)
		        '''
		 1  1   // __multiversion__
		 2  2   // This signals the loading code to prepend either #version 100 or #version 300 es as apropriate.
		 3  3   
		    4 + #include "fragmentVersionSimple.h"
		 4    - #include "shaders/fragmentVersionSimple.h"
		 5  5   
		    6 + #include "uniformEntityConstants.h"
		 6    - #include "shaders/uniformEntityConstants.h"
		 7  7   
		 8  8   varying vec4 light;
		 9  9   
		10 10   void main()
		11 11   {
		        ...
		        '''
Changed resource pack "levelstage_copy_vr.fragment":
	Changed file "vanilla":
		Total line: 11 (+0, -0)
		        '''
		 1  1   // __multiversion__
		 2  2   // This signals the loading code to prepend either #version 100 or #version 300 es as apropriate.
		 3  3   
		    4 + #include "fragmentVersionCentroidUV.h"
		 4    - #include "shaders/fragmentVersionCentroidUV.h"
		 5  5   
		 6  6   // This shader isn't actually used in OGL, we have to have an OGL shader since a material refers to the DX version
		 7  7   // and thus this also needs to exist on the OGL side.
		 8  8   void main()
		 9  9   {
		        ...
		        '''
Changed resource pack "normal_as_color.vertex":
	Changed file "vanilla":
		Total line: 19 (+0, -0)
		        '''
		 1  1   // __multiversion__
		 2  2   // This signals the loading code to prepend either #version 100 or #version 300 es as apropriate.
		 3  3   
		    4 + #include "vertexVersionSimple.h"
		 4    - #include "shaders/vertexVersionSimple.h"
		 5  5   
		    6 + #include "uniformWorldConstants.h"
		 6    - #include "shaders/uniformWorldConstants.h"
		 7  7   
		 8  8   attribute mediump vec4 POSITION;
		 9  9   attribute vec4 NORMAL;
		10 10   
		11 11   varying vec4 color;
		        ...
		        '''
Changed resource pack "passthru.fragment":
	Changed file "vanilla":
		Total line: 11 (+0, -0)
		        '''
		 1  1   // __multiversion__
		 2  2   // This signals the loading code to prepend either #version 100 or #version 300 es as apropriate.
		 3  3   
		    4 + #include "fragmentVersionCentroidUV.h"
		 4    - #include "shaders/fragmentVersionCentroidUV.h"
		 5  5   
		 6  6   uniform sampler2D TEXTURE_0;
		 7  7   
		 8  8   void main()
		 9  9   {
		        ...
		        '''
Changed resource pack "placeholder.fragment":
	Changed file "vanilla":
		Total line: 9 (+0, -0)
		      '''
		1 1   // __multiversion__
		2 2   // This signals the loading code to prepend either #version 100 or #version 300 es as apropriate.
		3 3   
		  4 + #include "fragmentVersionSimple.h"
		4   - #include "shaders/fragmentVersionSimple.h"
		5 5   
		6 6   void main()
		7 7   {
		8 8   	gl_FragColor = vec4(1,1,1,1);
		9 9   }
		      '''
Changed resource pack "placeholder.vertex":
	Changed file "vanilla":
		Total line: 13 (+0, -0)
		        '''
		 1  1   // __multiversion__
		 2  2   // This signals the loading code to prepend either #version 100 or #version 300 es as apropriate.
		 3  3   
		    4 + #include "vertexVersionSimple.h"
		 4    - #include "shaders/vertexVersionSimple.h"
		 5  5   
		    6 + #include "uniformWorldConstants.h"
		 6    - #include "shaders/uniformWorldConstants.h"
		 7  7   
		 8  8   attribute mediump vec4 POSITION;
		 9  9   
		10 10   void main()
		11 11   {
		        ...
		        '''
Changed resource pack "position.vertex":
	Changed file "vanilla":
		Total line: 13 (+0, -0)
		        '''
		 1  1   // __multiversion__
		 2  2   // This signals the loading code to prepend either #version 100 or #version 300 es as apropriate.
		 3  3   
		    4 + #include "vertexVersionSimple.h"
		 4    - #include "shaders/vertexVersionSimple.h"
		 5  5   
		    6 + #include "uniformWorldConstants.h"
		 6    - #include "shaders/uniformWorldConstants.h"
		 7  7   
		 8  8   attribute mediump vec4 POSITION;
		 9  9   
		10 10   void main()
		11 11   {
		        ...
		        '''
Changed resource pack "rain_snow.fragment":
	Changed file "vanilla":
		Total line: 64 (+0, -0)
		        '''
		 1  1   // __multiversion__
		 2  2   // This signals the loading code to prepend either #version 100 or #version 300 es as apropriate.
		 3  3   
		    4 + #include "fragmentVersionSimple.h"
		    5 + #include "uniformMacro.h"
		 4    - #include "shaders/fragmentVersionSimple.h"
		 5    - #include "shaders/uniformMacro.h"
		 6  6   
		 7  7   LAYOUT_BINDING(0) uniform sampler2D TEXTURE_0;
		 8  8   LAYOUT_BINDING(1) uniform sampler2D TEXTURE_1;
		 9  9   LAYOUT_BINDING(2) uniform sampler2D TEXTURE_2;
		10 10   
		        ...
		        '''
Changed resource pack "rain_snow.vertex":
	Changed file "vanilla":
		Total line: 79 (+0, -0)
		        '''
		 1  1   // __multiversion__
		 2  2   // This signals the loading code to prepend either #version 100 or #version 300 es as apropriate.
		 3  3   
		    4 + #include "vertexVersionSimple.h"
		 4    - #include "shaders/vertexVersionSimple.h"
		 5  5   
		 6  6   precision highp float;
		 7  7   
		    8 + #include "uniformWorldConstants.h"
		    9 + #include "uniformWeatherConstants.h"
		   10 + #include "uniformPerFrameConstants.h"
		 8    - #include "shaders/uniformWorldConstants.h"
		 9    - #include "shaders/uniformWeatherConstants.h"
		10    - #include "shaders/uniformPerFrameConstants.h"
		11 11   
		12 12   attribute mediump vec4 POSITION;
		13 13   attribute vec2 TEXCOORD_0;
		14 14   attribute vec4 COLOR;
		15 15   
		        ...
		        '''
Changed resource pack "renderchunk.fragment":
	Changed file "vanilla":
		Total line: 93 (+0, -0)
		        '''
		 1  1   // __multiversion__
		 2  2   // This signals the loading code to prepend either #version 100 or #version 300 es as apropriate.
		 3  3   
		    4 + #include "fragmentVersionCentroid.h"
		 4    - #include "shaders/fragmentVersionCentroid.h"
		 5  5   
		 6  6   #if __VERSION__ >= 300
		 7  7   	#ifndef BYPASS_PIXEL_SHADER
		 8  8   		#if defined(TEXEL_AA) && defined(TEXEL_AA_FEATURE)
		 9  9   			_centroid in highp vec2 uv0;
		        ...
		24 24   
		25 25   #ifdef FOG
		26 26   varying vec4 fogColor;
		27 27   #endif
		28 28   
		   29 + #include "uniformShaderConstants.h"
		   30 + #include "util.h"
		29    - #include "shaders/uniformShaderConstants.h"
		30    - #include "shaders/util.h"
		31 31   
		32 32   LAYOUT_BINDING(0) uniform sampler2D TEXTURE_0;
		33 33   LAYOUT_BINDING(1) uniform sampler2D TEXTURE_1;
		34 34   LAYOUT_BINDING(2) uniform sampler2D TEXTURE_2;
		35 35   
		        ...
		        '''
Changed resource pack "renderchunk.vertex":
	Changed file "vanilla":
		Total line: 117 (+0, -0)
		          '''
		  1   1   // __multiversion__
		  2   2   // This signals the loading code to prepend either #version 100 or #version 300 es as apropriate.
		  3   3   
		      4 + #include "vertexVersionCentroid.h"
		  4     - #include "shaders/vertexVersionCentroid.h"
		  5   5   #if __VERSION__ >= 300
		  6   6   	#ifndef BYPASS_PIXEL_SHADER
		  7   7   		_centroid out vec2 uv0;
		  8   8   		_centroid out vec2 uv1;
		  9   9   	#endif
		          ...
		 20  20   
		 21  21   #ifdef FOG
		 22  22   	varying vec4 fogColor;
		 23  23   #endif
		 24  24   
		     25 + #include "uniformWorldConstants.h"
		     26 + #include "uniformPerFrameConstants.h"
		     27 + #include "uniformShaderConstants.h"
		     28 + #include "uniformRenderChunkConstants.h"
		 25     - #include "shaders/uniformWorldConstants.h"
		 26     - #include "shaders/uniformPerFrameConstants.h"
		 27     - #include "shaders/uniformShaderConstants.h"
		 28     - #include "shaders/uniformRenderChunkConstants.h"
		 29  29   
		 30  30   attribute POS4 POSITION;
		 31  31   attribute vec4 COLOR;
		 32  32   attribute vec2 TEXCOORD_0;
		 33  33   attribute vec2 TEXCOORD_1;
		          ...
		          '''
Changed resource pack "resolve_depth.fragment":
	Changed file "vanilla":
		Total line: 9 (+0, -0)
		      '''
		1 1   // __multiversion__
		2 2   // This signals the loading code to prepend either #version 100 or #version 300 es as apropriate.
		3 3   
		  4 + #include "fragmentVersionSimple.h"
		4   - #include "shaders/fragmentVersionSimple.h"
		5 5   
		6 6   void main()
		7 7   {
		8 8   	// TODO: implement this for multisampling
		9 9   }
		      '''
Changed resource pack "selection_box.vertex":
	Changed file "vanilla":
		Total line: 16 (+0, -0)
		        '''
		 1  1   // __multiversion__
		 2  2   // This signals the loading code to prepend either #version 100 or #version 300 es as apropriate.
		 3  3   
		    4 + #include "vertexVersionSimple.h"
		 4    - #include "shaders/vertexVersionSimple.h"
		 5  5   
		    6 + #include "uniformWorldConstants.h"
		 6    - #include "shaders/uniformWorldConstants.h"
		 7  7   
		 8  8   attribute mediump vec4 POSITION;
		 9  9   
		10 10   void main()
		11 11   {
		        ...
		        '''
Changed resource pack "shadow_stencil_overlay.fragment":
	Changed file "vanilla":
		Total line: 14 (+0, -0)
		        '''
		 1  1   // __multiversion__
		 2  2   // This signals the loading code to prepend either #version 100 or #version 300 es as apropriate.
		 3  3   
		    4 + #include "fragmentVersionSimple.h"
		 4    - #include "shaders/fragmentVersionSimple.h"
		 5  5   
		    6 + #include "uniformShaderConstants.h"
		 6    - #include "shaders/uniformShaderConstants.h"
		 7  7   
		 8  8   varying vec4 color;
		 9  9   
		10 10   void main()
		11 11   {
		        ...
		        '''
Changed resource pack "simple.vertex":
	Changed file "vanilla":
		Total line: 18 (+0, -0)
		        '''
		 1  1   // __multiversion__
		 2  2   // This signals the loading code to prepend either #version 100 or #version 300 es as apropriate.
		 3  3   
		    4 + #include "vertexVersionSimple.h"
		 4    - #include "shaders/vertexVersionSimple.h"
		 5  5   
		    6 + #include "uniformWorldConstants.h"
		    7 + #include "uniformShaderConstants.h"
		 6    - #include "shaders/uniformWorldConstants.h"
		 7    - #include "shaders/uniformShaderConstants.h"
		 8  8   
		 9  9   attribute mediump vec4 POSITION;
		10 10   
		11 11   varying vec4 color;
		12 12   
		        ...
		        '''
Changed resource pack "sky.vertex":
	Changed file "vanilla":
		Total line: 22 (+0, -0)
		        '''
		 1  1   // __multiversion__
		 2  2   // This signals the loading code to prepend either #version 100 or #version 300 es as apropriate.
		 3  3   
		    4 + #include "vertexVersionSimple.h"
		 4    - #include "shaders/vertexVersionSimple.h"
		 5  5   
		    6 + #include "uniformWorldConstants.h"
		    7 + #include "uniformPerFrameConstants.h"
		    8 + #include "uniformShaderConstants.h"
		 6    - #include "shaders/uniformWorldConstants.h"
		 7    - #include "shaders/uniformPerFrameConstants.h"
		 8    - #include "shaders/uniformShaderConstants.h"
		 9  9   
		10 10   attribute mediump vec4 POSITION;
		11 11   attribute vec4 COLOR;
		12 12   
		13 13   varying vec4 color;
		        ...
		        '''
Changed resource pack "stars.fragment":
	Changed file "vanilla":
		Total line: 13 (+0, -0)
		        '''
		 1  1   // __multiversion__
		 2  2   // This signals the loading code to prepend either #version 100 or #version 300 es as apropriate.
		 3  3   
		    4 + #include "fragmentVersionSimple.h"
		 4    - #include "shaders/fragmentVersionSimple.h"
		 5  5   
		    6 + #include "uniformShaderConstants.h"
		 6    - #include "shaders/uniformShaderConstants.h"
		 7  7   
		 8  8   varying vec4 color;
		 9  9   
		10 10   void main()
		11 11   {
		        ...
		        '''
Changed resource pack "text.fragment":
	Changed file "vanilla":
		Total line: 65 (+0, -0)
		        '''
		 1  1   // __multiversion__
		 2  2   // This signals the loading code to prepend either #version 100 or #version 300 es as apropriate.
		 3  3   
		    4 + #include "fragmentVersionCentroidUV.h"
		 4    - #include "shaders/fragmentVersionCentroidUV.h"
		 5  5   
		    6 + #include "uniformShaderConstants.h"
		 6    - #include "shaders/uniformShaderConstants.h"
		 7  7   
		 8  8   LAYOUT_BINDING(0) uniform sampler2D TEXTURE_0;
		 9  9   
		10 10   varying vec4 color;
		11 11   
		12 12   float median(float a, float b, float c) {
		13 13       return max(min(a, b), min(max(a, b), c));
		14 14   }
		15 15   
		   16 + #include "uniformTextConstants.h"
		16    - #include "shaders/uniformTextConstants.h"
		17 17   
		18 18   const float GLYPH_UV_SIZE = 1.0 / 16.0;
		19 19   
		20 20   void main()
		21 21   {
		        ...
		        '''
Changed resource pack "texture.fragment":
	Changed file "vanilla":
		Total line: 19 (+0, -0)
		        '''
		 1  1   // __multiversion__
		 2  2   // This signals the loading code to prepend either #version 100 or #version 300 es as apropriate.
		 3  3   
		    4 + #include "fragmentVersionCentroidUV.h"
		    5 + #include "uniformMacro.h"
		 4    - #include "shaders/fragmentVersionCentroidUV.h"
		 5    - #include "shaders/uniformMacro.h"
		 6  6   
		 7  7   LAYOUT_BINDING(0) uniform sampler2D TEXTURE_0;
		 8  8   
		 9  9   void main()
		10 10   {
		        ...
		        '''
Changed resource pack "texture_blend.fragment":
	Changed file "vanilla":
		Total line: 33 (+0, -0)
		        '''
		 1  1   // __multiversion__
		 2  2   // This signals the loading code to prepend either #version 100 or #version 300 es as apropriate.
		 3  3   
		    4 + #include "fragmentVersionCentroid.h"
		    5 + #include "uniformMacro.h"
		 4    - #include "shaders/fragmentVersionCentroid.h"
		 5    - #include "shaders/uniformMacro.h"
		 6  6   
		 7  7   #if __VERSION__ >= 300
		 8  8   _centroid in vec2 uv;
		 9  9   _centroid in vec2 uv1;
		10 10   #else
		        ...
		12 12   varying vec2 uv1;
		13 13   #endif
		14 14   
		15 15   LAYOUT_BINDING(0) uniform sampler2D TEXTURE_0;
		16 16   
		   17 + #include "uniformShaderConstants.h"
		17    - #include "shaders/uniformShaderConstants.h"
		18 18   
		19 19   void main()
		20 20   {
		21 21   	vec4 color = texture2D( TEXTURE_0, uv );
		22 22   	vec4 color1 = texture2D( TEXTURE_0, uv1 );
		        ...
		        '''
Changed resource pack "texture_ccolor.fragment":
	Changed file "vanilla":
		Total line: 39 (+0, -0)
		        '''
		 1  1   // __multiversion__
		 2  2   // This signals the loading code to prepend either #version 100 or #version 300 es as apropriate.
		 3  3   
		    4 + #include "fragmentVersionCentroid.h"
		 4    - #include "shaders/fragmentVersionCentroid.h"
		 5  5   
		 6  6   #if __VERSION__ >= 300
		 7  7   
		 8  8   #if defined(TEXEL_AA) && defined(TEXEL_AA_FEATURE)
		 9  9   _centroid in highp vec2 uv;
		        ...
		15 15   
		16 16   varying vec2 uv;
		17 17   
		18 18   #endif
		19 19   
		   20 + #include "uniformShaderConstants.h"
		   21 + #include "util.h"
		20    - #include "shaders/uniformShaderConstants.h"
		21    - #include "shaders/util.h"
		22 22   
		23 23   LAYOUT_BINDING(0) uniform sampler2D TEXTURE_0;
		24 24   
		25 25   void main()
		26 26   {
		        ...
		        '''
Changed resource pack "texture_cutout.fragment":
	Changed file "vanilla":
		Total line: 17 (+0, -0)
		        '''
		 1  1   // __multiversion__
		 2  2   // This signals the loading code to prepend either #version 100 or #version 300 es as apropriate.
		 3  3   
		    4 + #include "fragmentVersionCentroidUV.h"
		 4    - #include "shaders/fragmentVersionCentroidUV.h"
		 5  5   
		    6 + #include "uniformShaderConstants.h"
		 6    - #include "shaders/uniformShaderConstants.h"
		 7  7   
		 8  8   LAYOUT_BINDING(0) uniform sampler2D TEXTURE_0;
		 9  9   
		10 10   void main()
		11 11   {
		        ...
		        '''
Changed resource pack "texture_raw_alphatest.fragment":
	Changed file "vanilla":
		Total line: 39 (+0, -0)
		        '''
		 1  1   // __multiversion__
		 2  2   // This signals the loading code to prepend either #version 100 or #version 300 es as apropriate.
		 3  3   
		    4 + #include "fragmentVersionCentroid.h"
		 4    - #include "shaders/fragmentVersionCentroid.h"
		 5  5   #if __VERSION__ >= 300
		 6  6   
		 7  7   #if defined(TEXEL_AA) && defined(TEXEL_AA_FEATURE)
		 8  8   _centroid in highp vec2 uv;
		 9  9   #else
		        ...
		15 15   // version 100 code
		16 16   varying vec2 uv;
		17 17   
		18 18   #endif
		19 19   
		   20 + #include "uniformShaderConstants.h"
		   21 + #include "util.h"
		20    - #include "shaders/uniformShaderConstants.h"
		21    - #include "shaders/util.h"
		22 22   
		23 23   LAYOUT_BINDING(0) uniform sampler2D TEXTURE_0;
		24 24   
		25 25   void main()
		26 26   {
		        ...
		        '''
Changed resource pack "uniformAnimationConstants.h":
	Changed file "vanilla":
		Total line: 17 (+0, -0)
		        '''
		 1  1   #ifndef _UNIFORM_ANIMATION_CONSTANTS_H
		 2  2   #define _UNIFORM_ANIMATION_CONSTANTS_H
		 3  3   
		    4 + #include "uniformMacro.h"
		 4    - #include "shaders/uniformMacro.h"
		 5  5   
		 6  6   #ifdef MCPE_PLATFORM_NX
		 7  7   layout(binding = 4) uniform AnimationConstants {
		 8  8   #endif
		 9  9   // BEGIN_UNIFORM_BLOCK(AnimationConstants) - unfortunately this macro does not work on old Amazon platforms so using above 3 lines instead
		        ...
		        '''
Changed resource pack "uniformBannerConstants.h":
	Changed file "vanilla":
		Total line: 14 (+0, -0)
		        '''
		 1  1   #ifndef _UNIFORM_BANNER_CONSTANTS_H
		 2  2   #define _UNIFORM_BANNER_CONSTANTS_H
		 3  3   
		    4 + #include "uniformMacro.h"
		 4    - #include "shaders/uniformMacro.h"
		 5  5   
		 6  6   #ifdef MCPE_PLATFORM_NX
		 7  7   uniform BannerConstants {
		 8  8   #endif
		 9  9   // BEGIN_UNIFORM_BLOCK(BannerConstants) - unfortunately this macro does not work on old Amazon platforms so using above 3 lines instead
		        ...
		        '''
Changed resource pack "uniformDebugConstants.h":
	Changed file "vanilla":
		Total line: 13 (+0, -0)
		        '''
		 1  1   #ifndef _UNIFORM_DEBUG_CONSTANTS_H
		 2  2   #define _UNIFORM_DEBUG_CONSTANTS_H
		 3  3   
		    4 + #include "uniformMacro.h"
		 4    - #include "shaders/uniformMacro.h"
		 5  5   
		 6  6   #ifdef MCPE_PLATFORM_NX
		 7  7   uniform DebugConstants {
		 8  8   #endif
		 9  9   // BEGIN_UNIFORM_BLOCK(DebugConstants) - unfortunately this macro does not work on old Amazon platforms so using above 3 lines instead
		        ...
		        '''
Changed resource pack "uniformEffectsConstants.h":
	Changed file "vanilla":
		Total line: 13 (+0, -0)
		        '''
		 1  1   #ifndef _UNIFORM_EFFECTS_CONSTANTS_H
		 2  2   #define _UNIFORM_EFFECTS_CONSTANTS_H
		 3  3   
		    4 + #include "uniformMacro.h"
		 4    - #include "shaders/uniformMacro.h"
		 5  5   
		 6  6   #ifdef MCPE_PLATFORM_NX
		 7  7   uniform EffectsConstants {
		 8  8   #endif
		 9  9   // BEGIN_UNIFORM_BLOCK(EffectsConstants) - unfortunately this macro does not work on old Amazon platforms so using above 3 lines instead
		        ...
		        '''
Changed resource pack "uniformEntityConstants.h":
	Changed file "vanilla":
		Total line: 21 (+0, -0)
		        '''
		 1  1   #ifndef _UNIFORM_ENTITY_CONSTANTS_H
		 2  2   #define _UNIFORM_ENTITY_CONSTANTS_H
		 3  3   
		    4 + #include "uniformMacro.h"
		 4    - #include "shaders/uniformMacro.h"
		 5  5   
		 6  6   #ifdef MCPE_PLATFORM_NX
		 7  7   uniform ActorConstants {
		 8  8   #endif
		 9  9   // BEGIN_UNIFORM_BLOCK(ActorConstants) - unfortunately this macro does not work on old Amazon platforms so using above 3 lines instead
		        ...
		        '''
Changed resource pack "uniformFlipbookTextureConstants.h":
	Changed file "vanilla":
		Total line: 14 (+0, -0)
		        '''
		 1  1   #ifndef _UNIFORM_FLIPBOOK_TEXTURE_CONSTANTS_H
		 2  2   #define _UNIFORM_FLIPBOOK_TEXTURE_CONSTANTS_H
		 3  3   
		    4 + #include "uniformMacro.h"
		 4    - #include "shaders/uniformMacro.h"
		 5  5   
		 6  6   #ifdef MCPE_PLATFORM_NX
		 7  7   uniform FlipbookTextureConstants {
		 8  8   #endif
		 9  9   // BEGIN_UNIFORM_BLOCK(FlipbookTextureConstants) - unfortunately this macro does not work on old Amazon platforms so using above 3 lines instead
		        ...
		        '''
Changed resource pack "uniformInterFrameConstants.h":
	Changed file "vanilla":
		Total line: 16 (+0, -0)
		        '''
		 1  1   #ifndef _UNIFORM_INTER_FRAME_CONSTANTS_H
		 2  2   #define _UNIFORM_INTER_FRAME_CONSTANTS_H
		 3  3   
		    4 + #include "uniformMacro.h"
		 4    - #include "shaders/uniformMacro.h"
		 5  5   
		 6  6   #ifdef MCPE_PLATFORM_NX
		 7  7   uniform InterFrameConstants {
		 8  8   #endif
		 9  9   // BEGIN_UNIFORM_BLOCK(InterFrameConstants) - unfortunately this macro does not work on old Amazon platforms so using above 3 lines instead
		        ...
		        '''
Changed resource pack "uniformPerFrameConstants.h":
	Changed file "vanilla":
		Total line: 18 (+0, -0)
		        '''
		 1  1   #ifndef _UNIFORM_PER_FRAME_CONSTANTS_H
		 2  2   #define _UNIFORM_PER_FRAME_CONSTANTS_H
		 3  3   
		    4 + #include "uniformMacro.h"
		 4    - #include "shaders/uniformMacro.h"
		 5  5   
		 6  6   #ifdef MCPE_PLATFORM_NX
		    7 + layout(binding = 2) uniform PerFrameConstants {
		 7    - layout(binding = 2, std430) uniform PerFrameConstants {
		 8  8   #endif
		 9  9   // BEGIN_UNIFORM_BLOCK(PerFrameConstants) - unfortunately this macro does not work on old Amazon platforms so using above 3 lines instead
		10 10   UNIFORM vec3 VIEW_POS;
		11 11   UNIFORM float TIME;
		12 12   UNIFORM vec4 FOG_COLOR;
		        ...
		        '''
Changed resource pack "uniformRenderChunkConstants.h":
	Changed file "vanilla":
		Total line: 15 (+0, -0)
		        '''
		 1  1   #ifndef _UNIFORM_RENDER_CHUNK_CONSTANTS_H
		 2  2   #define _UNIFORM_RENDER_CHUNK_CONSTANTS_H
		 3  3   
		    4 + #include "uniformMacro.h"
		 4    - #include "shaders/uniformMacro.h"
		 5  5   
		 6  6   #ifdef MCPE_PLATFORM_NX
		 7  7   #extension GL_ARB_enhanced_layouts : enable
		 8  8   layout(binding = 0) uniform RenderChunkConstants {
		 9  9   #endif
		        ...
		        '''
Changed resource pack "uniformShaderConstants.h":
	Changed file "vanilla":
		Total line: 18 (+0, -0)
		        '''
		 1  1   #ifndef _UNIFORM_SHADER_CONSTANTS_H
		 2  2   #define _UNIFORM_SHADER_CONSTANTS_H
		 3  3   
		    4 + #include "uniformMacro.h"
		 4    - #include "shaders/uniformMacro.h"
		 5  5   
		 6  6   #ifdef MCPE_PLATFORM_NX
		 7  7   #extension GL_ARB_enhanced_layouts : enable
		 8  8   layout(binding = 3) uniform ShaderConstants {
		 9  9   #endif
		        ...
		        '''
Changed resource pack "uniformTextConstants.h":
	Changed file "vanilla":
		Total line: 19 (+0, -0)
		        '''
		 1  1   #ifndef _UNIFORM_TEXT_CONSTANTS_H
		 2  2   #define _UNIFORM_TEXT_CONSTANTS_H
		 3  3   
		    4 + #include "uniformMacro.h"
		 4    - #include "shaders/uniformMacro.h"
		 5  5   
		 6  6   #ifdef MCPE_PLATFORM_NX
		 7  7   uniform TextConstants {
		 8  8   #endif
		 9  9   // BEGIN_UNIFORM_BLOCK(TextConstants) - unfortunately this macro does not work on old Amazon platforms so using above 3 lines instead
		        ...
		        '''
Changed resource pack "uniformWeatherConstants.h":
	Changed file "vanilla":
		Total line: 20 (+0, -0)
		        '''
		 1  1   #ifndef _UNIFORM_WEATHER_CONSTANTS_H
		 2  2   #define _UNIFORM_WEATHER_CONSTANTS_H
		 3  3   
		    4 + #include "uniformMacro.h"
		 4    - #include "shaders/uniformMacro.h"
		 5  5   
		 6  6   #ifdef MCPE_PLATFORM_NX
		 7  7   uniform WeatherConstants {
		 8  8   #endif
		 9  9   // BEGIN_UNIFORM_BLOCK(WeatherConstants) - unfortunately this macro does not work on old Amazon platforms so using above 3 lines instead
		        ...
		        '''
Changed resource pack "uniformWorldConstants.h":
	Changed file "vanilla":
		Total line: 16 (+0, -0)
		        '''
		 1  1   #ifndef _UNIFORM_WORLD_CONSTANTS_H
		 2  2   #define _UNIFORM_WORLD_CONSTANTS_H
		 3  3   
		    4 + #include "uniformMacro.h"
		 4    - #include "shaders/uniformMacro.h"
		 5  5   
		 6  6   #ifdef MCPE_PLATFORM_NX
		 7  7   layout(binding = 1) uniform WorldConstants {
		 8  8   #endif
		 9  9   // BEGIN_UNIFORM_BLOCK(WorldConstants) - unfortunately this macro does not work on old Amazon platforms so using above 3 lines instead
		        ...
		        '''
Changed resource pack "util.h":
	Changed file "vanilla":
		Total line: 60 (+0, -0)
		        '''
		        ...
		10 10   #define USE_ALPHA_TEST 0
		11 11   #endif
		12 12   
		13 13   #if __VERSION__ >= 300
		14 14   
		   15 + #include "uniformShaderConstants.h"
		15    - #include "shaders/uniformShaderConstants.h"
		16 16   
		17 17   #if USE_TEXEL_AA
		18 18   
		19 19   const float TEXEL_AA_ALPHA_BIAS = 0.125;
		20 20   const float TEXEL_AA_EPSILON = 0.03125;
		        ...
		        '''
Changed resource pack "uv.vertex":
	Changed file "vanilla":
		Total line: 17 (+0, -0)
		        '''
		 1  1   // __multiversion__
		 2  2   // This signals the loading code to prepend either #version 100 or #version 300 es as apropriate.
		 3  3   
		    4 + #include "vertexVersionCentroidUV.h"
		 4    - #include "shaders/vertexVersionCentroidUV.h"
		 5  5   
		    6 + #include "uniformWorldConstants.h"
		 6    - #include "shaders/uniformWorldConstants.h"
		 7  7   
		 8  8   attribute POS4 POSITION;
		 9  9   attribute vec2 TEXCOORD_0;
		10 10   
		11 11   
		        ...
		        '''
Changed resource pack "uv_as_color.fragment":
	Changed file "vanilla":
		Total line: 11 (+0, -0)
		        '''
		 1  1   // __multiversion__
		 2  2   // This signals the loading code to prepend either #version 100 or #version 300 es as apropriate.
		 3  3   
		    4 + #include "fragmentVersionSimple.h"
		 4    - #include "shaders/fragmentVersionSimple.h"
		 5  5   
		 6  6   varying vec2 uv;
		 7  7   
		 8  8   void main()
		 9  9   {
		        ...
		        '''
Changed resource pack "uv_blend.vertex":
	Changed file "vanilla":
		Total line: 29 (+0, -0)
		        '''
		 1  1   // __multiversion__
		 2  2   // This signals the loading code to prepend either #version 100 or #version 300 es as apropriate.
		 3  3   
		    4 + #include "vertexVersionCentroid.h"
		 4    - #include "shaders/vertexVersionCentroid.h"
		 5  5   #if __VERSION__ >= 300
		 6  6   
		 7  7   _centroid out vec2 uv;
		 8  8   _centroid out vec2 uv1;
		 9  9   
		        ...
		12 12   varying vec2 uv;
		13 13   varying vec2 uv1;
		14 14   
		15 15   #endif
		16 16   
		   17 + #include "uniformWorldConstants.h"
		17    - #include "shaders/uniformWorldConstants.h"
		18 18   
		19 19   attribute POS4 POSITION;
		20 20   attribute vec2 TEXCOORD_0;
		21 21   attribute vec2 TEXCOORD_1;
		22 22   
		        ...
		        '''
Changed resource pack "uv_blend_flipbook.vertex":
	Changed file "vanilla":
		Total line: 33 (+0, -0)
		        '''
		 1  1   // __multiversion__
		 2  2   // This signals the loading code to prepend either #version 100 or #version 300 es as apropriate.
		 3  3   
		    4 + #include "vertexVersionCentroid.h"
		 4    - #include "shaders/vertexVersionCentroid.h"
		 5  5   #if __VERSION__ >= 300
		 6  6   
		 7  7   _centroid out vec2 uv;
		 8  8   _centroid out vec2 uv1;
		 9  9   
		        ...
		13 13   varying vec2 uv1;
		14 14   
		15 15   #endif
		16 16   
		17 17   
		   18 + #include "uniformWorldConstants.h"
		   19 + #include "uniformFlipbookTextureConstants.h"
		18    - #include "shaders/uniformWorldConstants.h"
		19    - #include "shaders/uniformFlipbookTextureConstants.h"
		20 20   
		21 21   attribute POS4 POSITION;
		22 22   attribute vec2 TEXCOORD_0;
		23 23   
		24 24   
		        ...
		        '''
Changed resource pack "uv_repeat.vertex":
	Changed file "vanilla":
		Total line: 17 (+0, -0)
		        '''
		 1  1   // __multiversion__
		 2  2   // This signals the loading code to prepend either #version 100 or #version 300 es as apropriate.
		 3  3   
		    4 + #include "vertexVersionCentroidUV.h"
		 4    - #include "shaders/vertexVersionCentroidUV.h"
		 5  5   
		    6 + #include "uniformWorldConstants.h"
		    7 + #include "uniformShaderConstants.h"
		 6    - #include "shaders/uniformWorldConstants.h"
		 7    - #include "shaders/uniformShaderConstants.h"
		 8  8   
		 9  9   attribute POS4 POSITION;
		10 10   attribute vec2 TEXCOORD_0;
		11 11   
		12 12   void main()
		        ...
		        '''
Changed resource pack "uv_scale.vertex":
	Changed file "vanilla":
		Total line: 34 (+0, -0)
		        '''
		 1  1   // __multiversion__
		 2  2   // This signals the loading code to prepend either #version 100 or #version 300 es as apropriate.
		 3  3   
		    4 + #include "vertexVersionCentroidUV.h"
		 4    - #include "shaders/vertexVersionCentroidUV.h"
		 5  5   
		    6 + #include "uniformWorldConstants.h"
		    7 + #include "uniformEntityConstants.h"
		 6    - #include "shaders/uniformWorldConstants.h"
		 7    - #include "shaders/uniformEntityConstants.h"
		 8  8   #ifdef USE_SKINNING
		    9 + #include "uniformAnimationConstants.h"
		 9    - #include "shaders/uniformAnimationConstants.h"
		10 10   #endif
		11 11   
		12 12   attribute mediump vec4 POSITION;
		13 13   attribute vec2 TEXCOORD_0;
		14 14   #if defined(USE_SKINNING)
		        ...
		        '''
Changed resource pack "uv_selection_overlay.vertex":
	Changed file "vanilla":
		Total line: 37 (+0, -0)
		        '''
		 1  1   // __multiversion__
		 2  2   // This signals the loading code to prepend either #version 100 or #version 300 es as apropriate.
		 3  3   
		    4 + #include "vertexVersionCentroidUV.h"
		 4    - #include "shaders/vertexVersionCentroidUV.h"
		 5  5   
		    6 + #include "uniformWorldConstants.h"
		 6    - #include "shaders/uniformWorldConstants.h"
		 7  7   #ifdef USE_SKINNING
		    8 + #include "uniformAnimationConstants.h"
		 8    - #include "shaders/uniformAnimationConstants.h"
		 9  9   #endif
		10 10   
		11 11   attribute POS4 POSITION;
		12 12   attribute vec2 TEXCOORD_0;
		13 13   #if defined(USE_SKINNING)
		        ...
		        '''
Changed resource pack "uv_time_rotate.vertex":
	Changed file "vanilla":
		Total line: 17 (+0, -0)
		        '''
		 1  1   // __multiversion__
		 2  2   // This signals the loading code to prepend either #version 100 or #version 300 es as apropriate.
		 3  3   
		    4 + #include "vertexVersionCentroidUV.h"
		 4    - #include "shaders/vertexVersionCentroidUV.h"
		 5  5   
		    6 + #include "uniformWorldConstants.h"
		    7 + #include "uniformInterFrameConstants.h"
		 6    - #include "shaders/uniformWorldConstants.h"
		 7    - #include "shaders/uniformInterFrameConstants.h"
		 8  8   
		 9  9   attribute POS4 POSITION;
		10 10   attribute vec2 TEXCOORD_0;
		11 11   
		12 12   
		        ...
		        '''