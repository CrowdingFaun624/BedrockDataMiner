Difference of "shaders_resource_packs" between "1.2.13.6" (beta of "1.2.13") and "1.2.13".

Changed resource pack "color_texture.fragment":
	Changed file "vanilla":
		Total line: 90 (+6, -5)
		        '''
		        ...
		68 68   #ifdef USE_OVERLAY
		69 69   	//use either the diffuse or the OVERLAY_COLOR
		70 70   	diffuse.rgb = mix(diffuse, OVERLAY_COLOR, OVERLAY_COLOR.a).rgb;
		71 71   #endif
		72 72   
		   73 + #ifdef ENABLE_VERTEX_TINT_MASK
		   74 + 
		   75 + #ifdef ENABLE_CURRENT_ALPHA_MULTIPLY
		   76 + 	diffuse = diffuse * vec4(1.0, 1.0, 1.0, HUD_OPACITY);
		   77 + #endif
		   78 + 
		   79 + #else
		   80 + 	diffuse = diffuse * color;
		73    - #ifdef ENABLE_FOG
		74    - 	//apply fog
		75    - 	diffuse.rgb = mix( diffuse.rgb, fogColor.rgb, fogColor.a );
		76 81   #endif
		77    - 
		78    - #ifdef ENABLE_VERTEX_TINT_MASK
		79 82   
		   83 + 	// Fog needs to be applied after the color tinting.
		   84 + #ifdef ENABLE_FOG
		80    - #ifdef ENABLE_CURRENT_ALPHA_MULTIPLY
		81    - 	gl_FragColor = diffuse * vec4(1.0,1.0,1.0,HUD_OPACITY);
		   85 + 	//apply fog
		   86 + 	diffuse.rgb = mix(diffuse.rgb, fogColor.rgb, fogColor.a);
		82    - #else
		83    - 	gl_FragColor = diffuse;
		84 87   #endif
		85 88   
		86    - #else
		   89 + 	gl_FragColor = diffuse;
		87    - 	gl_FragColor = diffuse * color;
		88    - #endif
		89 90   }
		        '''
Changed resource pack "text.fragment":
	Changed file "vanilla":
		Total line: 65 (+1, -1)
		        '''
		        ...
		45 45   
		46 46       float outerEdgeAlpha = smoothstep(max(0.0, OUTLINE_CUTOFF - GLYPH_SMOOTH_RADIUS), min(1.0, OUTLINE_CUTOFF + GLYPH_SMOOTH_RADIUS), sampleDistance);
		47 47       // Apply stroke (outline) cutoff
		48 48       resultColor = vec4(resultColor.rgb, resultColor.a * outerEdgeAlpha);
		49 49   
		   50 +     vec2 topLeft = floor(uv / GLYPH_UV_SIZE) * GLYPH_UV_SIZE;
		50    -     vec2 topLeft = floor(uv);
		   51 +     vec2 bottomRight = floor(uv / GLYPH_UV_SIZE) * GLYPH_UV_SIZE + vec2(GLYPH_UV_SIZE, GLYPH_UV_SIZE);
		51    -     vec2 bottomRight = floor(uv + vec2(GLYPH_UV_SIZE, GLYPH_UV_SIZE));
		52 52   
		53 53       vec4 shadowSample = texture2D(TEXTURE_0, clamp(uv - SHADOW_OFFSET, topLeft, bottomRight));
		54 54       float shadowDistance = shadowSample.a;
		55 55       float shadowAlpha = smoothstep(max(0.0, OUTLINE_CUTOFF - SHADOW_SMOOTH_RADIUS), min(1.0, OUTLINE_CUTOFF + SHADOW_SMOOTH_RADIUS), shadowDistance);
		56 56       // Apply shadow past the stroke
		        ...
		        '''