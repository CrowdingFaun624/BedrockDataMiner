Difference of "shaders_resource_packs" between "1.1.0.5" (beta of "1.1.0") and "1.1.0.8" (beta of "1.1.0").

Changed resource pack "text.fragment":
	Changed file "vanilla":
		Total line: 92 (+42, -3)
		        '''
		        ...
		33 33   uniform sampler2D TEXTURE_0;
		34 34   uniform vec4 DARKEN;
		35 35   
		36 36   varying vec4 color;
		37 37   
		   38 + float median(float a, float b, float c) {
		   39 +     return max(min(a, b), min(max(a, b), c));
		   40 + }
		   41 + 
		   42 + uniform float GLYPH_SMOOTH_RADIUS;
		   43 + uniform float GLYPH_CUTOFF;
		   44 + uniform float OUTLINE_CUTOFF;
		   45 + uniform float SHADOW_SMOOTH_RADIUS;
		   46 + uniform vec4 OUTLINE_COLOR;
		   47 + uniform vec4 SHADOW_COLOR;
		   48 + uniform vec2 SHADOW_OFFSET;
		   49 + 
		   50 + void main()
		   51 + {
		   52 + 	vec4 diffuse = texture2D( TEXTURE_0,  uv );
		   53 + 
		   54 + #ifdef SMOOTH
		   55 + 	const float center = 0.4;
		   56 + 	const float radius = 0.1;
		   57 + 
		   58 + 	diffuse = smoothstep(center - radius, center + radius, diffuse);
		   59 + #endif
		   60 + 
		   61 + #ifdef ALPHA_TEST
		   62 + 	if(diffuse.a < 0.5) {
		   63 + 		discard;
		   64 + 	}
		   65 + #endif
		   66 + 
		   67 + #ifdef MSDF
		   68 +     vec4 resultColor = color;
		   69 + 
		   70 +     float sampleDistance = median(diffuse.r, diffuse.g, diffuse.b);
		   71 + 
		   72 +     float innerEdgeAlpha = smoothstep(max(0.0, GLYPH_CUTOFF - GLYPH_SMOOTH_RADIUS), min(1.0, GLYPH_CUTOFF + GLYPH_SMOOTH_RADIUS), sampleDistance);
		   73 +     // Apply fill cutoff
		   74 +     resultColor = mix(OUTLINE_COLOR, resultColor, innerEdgeAlpha);
		   75 + 
		   76 +     float outerEdgeAlpha = smoothstep(max(0.0, OUTLINE_CUTOFF - GLYPH_SMOOTH_RADIUS), min(1.0, OUTLINE_CUTOFF + GLYPH_SMOOTH_RADIUS), sampleDistance);
		   77 +     // Apply stroke (outline) cutoff
		   78 +     resultColor = vec4(resultColor.rgb, resultColor.a * outerEdgeAlpha);
		38    - void main()
		39    - {
		40    - 	vec4 diffuse = texture2D( TEXTURE_0,  uv );
		41 79   
		   80 +     vec4 shadowSample = texture2D(TEXTURE_0, uv - SHADOW_OFFSET);
		   81 +     float shadowDistance = shadowSample.a;
		   82 +     float shadowAlpha = smoothstep(max(0.0, OUTLINE_CUTOFF - SHADOW_SMOOTH_RADIUS), min(1.0, OUTLINE_CUTOFF + SHADOW_SMOOTH_RADIUS), shadowDistance);
		   83 +     // Apply shadow past the stroke
		   84 +     resultColor = mix(vec4(SHADOW_COLOR.rgb, SHADOW_COLOR.a * shadowAlpha), resultColor, outerEdgeAlpha);
		42    - #ifdef SMOOTH
		43    - 	const float center = 0.4;
		44    - 	const float radius = 0.1;
		45 85   
		   86 + 	  diffuse = resultColor;
		   87 + #else
		   88 +     diffuse *= color;
		46    - 	diffuse = smoothstep(center - radius, center + radius, diffuse);
		47 89   #endif
		48    - 
		49    - 	if(diffuse.a < 0.5)
		50    - 		discard;
		51 90   
		   91 + 	gl_FragColor = diffuse * DARKEN;
		52    - 	gl_FragColor = diffuse * color * DARKEN;
		53 92   }
		        '''