Difference of "shaders" between "1.16.201" and "1.16.210.50" (beta of "1.16.210").

Changed file "CohColorMixingPS.hlsl":
	Total line: 283 (+7, -1)
	          '''
	      1 + // This shader is an adaptation of the CohColorMixingPS.hlsl shader from
	      2 + // the Gameface library. Modifications have been made to make it work in
	      3 + // the Bedrock engine and heavily depends on Gameface's functionality,
	      4 + // why some numbers and values seem arbitrary or "magic".
	      5 + 
	  1   6   /*
	  2   7   This file is part of Renoir, a modern graphics library.
	  3   8   
	  4   9   Copyright (c) 2012-2016 Coherent Labs AD and/or its licensors. All
	  5  10   rights reserved in all media.
	          ...
	 30  35   HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
	 31  36   STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
	 32  37   ANY WAY OUT OF THE USE OR PERFORMANCE OF THIS SOFTWARE OR SOURCE CODE,
	 33  38   EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
	 34  39   */
	     40 + 
	     41 + #include "ShaderConstants.fxh"
	 35  42   
	 36  43   // Formulas for color mixing from https://www.w3.org/TR/compositing-1/#blending
	 37     - #define SAMPLE2D(tex, uv) tex.Sample(TextureSampler0, uv)
	 38  44   
	 39  45   float Lum(float3 color)
	 40  46   {
	 41  47   	return 0.3 * color.r + 0.59 * color.g + 0.11 * color.b;
	 42  48   }
	          ...
	259 265   	float4 color : SV_Target;
	260 266   };
	261 267   
	262 268   void main(in PS_Input PSInput, out PS_Output PSOutput)
	263 269   {
	    270 + 	float4 backdrop = TEXTURE_0.Sample(TextureSampler0, PSInput.Additional.zw);
	    271 + 	float4 source = TEXTURE_1.Sample(TextureSampler0, PSInput.Additional.xy) * PSInput.Color.a;
	264     - 	float4 backdrop = SAMPLE2D(TEXTURE_0, input.Additional.zw);
	265     - 	float4 source = SAMPLE2D(TEXTURE_1, input.Additional.xy) * input.Color.a;
	266 272   
	267 273   	float3 backdropUnprem = backdrop.rgb / max(backdrop.a, 0.0001);
	268 274   	float3 sourceUnprem = source.rgb / max(source.a, 0.0001);
	269 275   	float4 result =
	270 276   		(1 - backdrop.a) * source +
	271 277   		source.a * backdrop.a * float4(
	272 278   			saturate(BlendFunction(backdropUnprem, sourceUnprem, int(PRIM_PROPS_0.x))), 1) +
	273 279   		(1 - source.a) * backdrop;
	274 280   
	    281 + 	PSOutput.color = result;
	275     - 	PS_Output.color = result;
	276 282   }
	277 283   
	          '''