Difference of "shaders" between "1.2.0.9" (beta of "1.2.0") and "1.2.0.11" (beta of "1.2.0").

Changed file "ShaderConstants.fxh":
	Total line: 137 (+1, -0)
	          '''
	          ...
	 84  84   
	 85  85   cbuffer ShaderConstants {
	 86  86   	float4 CURRENT_COLOR;
	 87  87   	float4 DARKEN;
	 88  88   	float3 TEXTURE_DIMENSIONS;
	     89 + 	float1 HUD_OPACITY;
	 89  90   	float4x4 UV_TRANSFORM;
	 90  91   }
	 91  92   
	 92  93   cbuffer WeatherConstants {
	 93  94   	float4	POSITION_OFFSET;
	          ...
	          '''
Changed file "banner.fragment.hlsl":
	Total line: 52 (+1, -0)
	        '''
	        ...
	12 12   
	13 13   #ifndef DISABLE_TINTING
	14 14   	float4 color : COLOR;
	15 15   #endif
	16 16   
	   17 + 	float4 texCoords : TEXCOORD_0_FB_MSAA;
	17    - 	float2 texCoords : TEXCOORD_0_FB_MSAA;
	18 18   };
	19 19   
	20 20   struct PS_Output
	21 21   {
	22 22   	float4 color : SV_Target;
	23 23   };
	24 24   
	25 25   void main( in PS_Input PSInput, out PS_Output PSOutput )
	26 26   {
	   27 + 	float4 diffuse = TEXTURE_0.Sample(TextureSampler0, PSInput.texCoords.xy);
	   28 + 	float4 base = TEXTURE_0.Sample(TextureSampler0, PSInput.texCoords.zw);
	27    - 	float4 diffuse = TEXTURE_0.Sample(TextureSampler0, PSInput.texCoords);
	28 29   
	29 30   #ifndef DISABLE_TINTING
	   31 + 	base.a = lerp(diffuse.r * diffuse.a, diffuse.a, PSInput.color.a);
	   32 + 	base.rgb *= PSInput.color.rgb;
	30    - 	diffuse.a = lerp(diffuse.r * diffuse.a, diffuse.a, PSInput.color.a);
	31    - 	diffuse.rgb *= PSInput.color.rgb;
	32 33   #endif
	33 34   
	34 35   #ifdef ENABLE_LIGHT
	   36 + 	base.rgb *= PSInput.light.rgb;
	35    - 	diffuse.rgb *= PSInput.light.rgb;
	36 37   #endif
	37 38   
	38 39   #ifdef ENABLE_FOG
	39 40   	//apply fog
	   41 + 	base.rgb = lerp(base.rgb, PSInput.fogColor.rgb, PSInput.fogColor.a );
	40    - 	diffuse.rgb = lerp(diffuse.rgb, PSInput.fogColor.rgb, PSInput.fogColor.a );
	41 42   #endif
	42 43   
	43 44   	//WARNING do not refactor this 
	   45 + 	PSOutput.color = base;
	44    - 	PSOutput.color = diffuse;
	45 46   
	46 47   #ifdef VR_FEATURE
	47 48   	// On Rift, the transition from 0 brightness to the lowest 8 bit value is abrupt, so clamp to 
	48 49   	// the lowest 8 bit value.
	49 50   	PSOutput.color = max(PSOutput.color, 1 / 255.0f);
	        ...
	        '''
Changed file "banner.vertex.hlsl":
	Total line: 115 (+1, -0)
	          '''
	          ...
	 23  23   #endif
	 24  24   
	 25  25   #ifndef DISABLE_TINTING
	 26  26   	float4 color : COLOR;
	 27  27   #endif
	     28 + 	float4 texCoords : TEXCOORD_0_FB_MSAA;
	 28     - 	float2 texCoords : TEXCOORD_0_FB_MSAA;
	 29  29   	
	 30  30   #ifdef INSTANCEDSTEREO
	 31  31   	uint instanceID : SV_InstanceID;
	 32  32   #endif
	 33  33   };
	          ...
	 94  94   	PSInput.light = float4(L.xxx * TILE_LIGHT_COLOR.rgb, 1.0);
	 95  95   #endif
	 96  96   
	 97  97   	int frameIndex = int(VSInput.color.a * 255.0f);
	 98  98   	PSInput.texCoords.xy = VSInput.texCoords.xy + BANNER_UV_OFFSETS[frameIndex].xy;
	     99 + 	PSInput.texCoords.zw = VSInput.texCoords.xy;
	 99 100   
	100 101   #ifndef DISABLE_TINTING
	101 102   	PSInput.color = BANNER_COLORS[frameIndex];
	102 103   	PSInput.color.a = 1.0f;
	103 104   	if (frameIndex > 0) {
	          ...
	          '''
Changed file "color_texture.fragment.hlsl":
	Total line: 93 (+2, -2)
	        '''
	        ...
	46 46   #endif
	47 47   
	48 48   #ifdef ENABLE_VERTEX_TINT_MASK
	49 49   	diffuse.rgb = lerp(diffuse.rgb, diffuse.rgb*PSInput.color.rgb, diffuse.a);
	50 50   	if (PSInput.color.a > 0.0f) {
	   51 + 		diffuse.a = diffuse.a > 0.0f ? 1.0f : 0.0f; // This line is needed for horse armour icon and dyed leather to work properly
	51    - 		diffuse.a = diffuse.a > 0.0f ? 1.0f : 0.0f;
	52 52   	}
	53 53   #endif
	54 54   
	55 55   #ifdef GLINT
	56 56   	float4 layer1 = TEXTURE_1.Sample(TextureSampler1, frac(PSInput.layer1UV)).rgbr * GLINT_COLOR;
	        ...
	74 74   #endif
	75 75   
	76 76   #ifdef ENABLE_VERTEX_TINT_MASK
	77 77   
	78 78   #ifdef ENABLE_CURRENT_ALPHA_MULTIPLY
	   79 + 	PSOutput.color = diffuse * float4(1.0, 1.0, 1.0, HUD_OPACITY);
	79    - 	PSOutput.color = diffuse * PSInput.color.a;
	80 80   #else
	81 81   	PSOutput.color = diffuse;
	82 82   #endif
	83 83   
	84 84   #else
	        ...
	        '''