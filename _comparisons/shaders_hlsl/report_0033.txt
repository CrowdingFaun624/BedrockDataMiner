Difference of "shaders" between "1.9.0.5" (beta of "1.9.0") and "1.10.0.3" (beta of "1.10.0").
Unable to create data files for 1 file between: "1.9.0"

Moved file "hummingbird/CohColorMixingPS.hlsl" to "CohColorMixingPS.hlsl".
Added file "CohPathPS.hlsl":
	'''
	/*
	This file is part of Renoir, a modern graphics library.
	
	Copyright (c) 2012-2016 Coherent Labs AD and/or its licensors. All
	rights reserved in all media.
	
	The coded instructions, statements, computer programs, and/or related
	material (collectively the "Data") in these files contain confidential
	and unpublished information proprietary Coherent Labs and/or its
	licensors, which is protected by United States of America federal
	copyright law and by international treaties.
	
	This software or source code is supplied under the terms of a license
	agreement and nondisclosure agreement with Coherent Labs AD and may
	not be copied, disclosed, or exploited except in accordance with the
	terms of that agreement. The Data may not be disclosed or distributed to
	third parties, in whole or in part, without the prior written consent of
	Coherent Labs AD.
	
	COHERENT LABS MAKES NO REPRESENTATION ABOUT THE SUITABILITY OF THIS
	SOURCE CODE FOR ANY PURPOSE. THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT
	HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
	INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
	MERCHANTABILITY, NONINFRINGEMENT, AND FITNESS FOR A PARTICULAR PURPOSE
	ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER, ITS AFFILIATES,
	PARENT COMPANIES, LICENSORS, SUPPLIERS, OR CONTRIBUTORS BE LIABLE FOR
	ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
	DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
	OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
	HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
	STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
	ANY WAY OUT OF THE USE OR PERFORMANCE OF THIS SOFTWARE OR SOURCE CODE,
	EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
	*/
	
	#include "ShaderConstants.fxh"
	
	struct PS_Input
	{
		float4 Position : SV_Position; // Why not position3
		float2 ExtraParams : TEXCOORD0;
	};
	
	struct PS_Output {
		float4 color : SV_Target;
	};
	
	void main(in PS_Input PSInput, out PS_Output PSOutput)
	{
		if (SHADER_TYPE == 14)
		{
			// Hairline quads
			float2 px = ddx(PSInput.ExtraParams);
			float2 py = ddy(PSInput.ExtraParams);
	
			float fx = (2 * PSInput.ExtraParams.x) * px.x - px.y;
			float fy = (2 * PSInput.ExtraParams.x) * py.x - py.y;
	
			float edgeAlpha = (PSInput.ExtraParams.x * PSInput.ExtraParams.x - PSInput.ExtraParams.y);
			float sd = sqrt((edgeAlpha * edgeAlpha) / (fx * fx + fy * fy));
	
			float alpha = 1.0 - sd;
	
			PSOutput.color = PRIM_PROPS_0 * PRIM_PROPS_1.x * alpha;
		}
		else if (SHADER_TYPE == 11)
		{
			// Hairline lines
			PSOutput.color = PRIM_PROPS_0 * min(1.0f, (1.0f - abs(PSInput.ExtraParams.y)) * PRIM_PROPS_1.x);
		}
		else
		{
			// non-hairline paths
			PSOutput.color = PRIM_PROPS_0 * PSInput.ExtraParams.y;
		}
	}
	'''
Added file "CohPathVS.hlsl":
	'''
	/*
	This file is part of Renoir, a modern graphics library.
	
	Copyright (c) 2012-2016 Coherent Labs AD and/or its licensors. All
	rights reserved in all media.
	
	The coded instructions, statements, computer programs, and/or related
	material (collectively the "Data") in these files contain confidential
	and unpublished information proprietary Coherent Labs and/or its
	licensors, which is protected by United States of America federal
	copyright law and by international treaties.
	
	This software or source code is supplied under the terms of a license
	agreement and nondisclosure agreement with Coherent Labs AD and may
	not be copied, disclosed, or exploited except in accordance with the
	terms of that agreement. The Data may not be disclosed or distributed to
	third parties, in whole or in part, without the prior written consent of
	Coherent Labs AD.
	
	COHERENT LABS MAKES NO REPRESENTATION ABOUT THE SUITABILITY OF THIS
	SOURCE CODE FOR ANY PURPOSE. THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT
	HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
	INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
	MERCHANTABILITY, NONINFRINGEMENT, AND FITNESS FOR A PARTICULAR PURPOSE
	ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER, ITS AFFILIATES,
	PARENT COMPANIES, LICENSORS, SUPPLIERS, OR CONTRIBUTORS BE LIABLE FOR
	ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
	DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
	OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
	HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
	STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
	ANY WAY OUT OF THE USE OR PERFORMANCE OF THIS SOFTWARE OR SOURCE CODE,
	EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
	*/
	
	#include "ShaderConstants.fxh"
	
	struct VS_Input {
		float4 Position : HB_POSITION;
	};
	
	struct PS_Input {
		float4 Position : SV_Position;
		float2 ExtraParams : TEXCOORD0;
	};
	
	void main(in VS_Input VSInput, out PS_Input PSInput)
	{
		PSInput.Position = mul(float4(VSInput.Position.xy, 0.0f, 1.0f), TRANSFORM);
	
		// Translate to -1..1 with perspective correction
		float w = PSInput.Position.w;
		PSInput.Position.x = PSInput.Position.x * 2 - w;
		PSInput.Position.y = (w - PSInput.Position.y) * 2 - w;
	
		PSInput.ExtraParams = VSInput.Position.zw;
	}
	'''
Added file "CohRenoirShaderPS.hlsl":
	'''
	/*
	This file is part of Renoir, a modern graphics library.
	
	Copyright (c) 2012-2016 Coherent Labs AD and/or its licensors. All
	rights reserved in all media.
	
	The coded instructions, statements, computer programs, and/or related
	material (collectively the "Data") in these files contain confidential
	and unpublished information proprietary Coherent Labs and/or its
	licensors, which is protected by United States of America federal
	copyright law and by international treaties.
	
	This software or source code is supplied under the terms of a license
	agreement and nondisclosure agreement with Coherent Labs AD and may
	not be copied, disclosed, or exploited except in accordance with the
	terms of that agreement. The Data may not be disclosed or distributed to
	third parties, in whole or in part, without the prior written consent of
	Coherent Labs AD.
	
	COHERENT LABS MAKES NO REPRESENTATION ABOUT THE SUITABILITY OF THIS
	SOURCE CODE FOR ANY PURPOSE. THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT
	HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
	INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
	MERCHANTABILITY, NONINFRINGEMENT, AND FITNESS FOR A PARTICULAR PURPOSE
	ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER, ITS AFFILIATES,
	PARENT COMPANIES, LICENSORS, SUPPLIERS, OR CONTRIBUTORS BE LIABLE FOR
	ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
	DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
	OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
	HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
	STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
	ANY WAY OUT OF THE USE OR PERFORMANCE OF THIS SOFTWARE OR SOURCE CODE,
	EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
	*/
	
	#include "ShaderConstants.fxh"
	
	struct PS_Input {
		float4 Position : SV_Position;
		float4 Color : TEXCOORD0;
		float4 Additional: TEXCOORD1;
		float3 ScreenNormalPosition : TEXCOORD2;
		float4 VaryingParam0 : TEXCOORD3;
		float4 VaryingParam1 : TEXCOORD4;
	};
	
	struct PS_Output {
		float4 color : SV_Target;
	};
	
	#define PS_INPUT_ADDITIONAL_INTERP_MODIFIER centroid
	#define SAMPLE2D(tex, uv) tex.Sample(TextureSampler0, uv)
	#define txMask TEXTURE_1
	#define txGradient TEXTURE_2
	
	static const int PSTF_ColorFromTexture = 0x1;
	static const int PSTF_GradientLinear = 0x2;
	static const int PSTF_GradientRadial = 0x4;
	static const int PSTF_Gradient2Point = 0x8;
	static const int PSTF_Gradient3PointSymmetrical = 0x10;
	static const int PSTF_GradientFromTexture = 0x20;
	static const int PSTF_HasMask = 0x40;
	
	#define IS_SET(value, flag) value & flag
	
	void main(in PS_Input input, out PS_Output PSOutput) {
		float tVal = 0.f;
	
		if (IS_SET(SHADER_TYPE, PSTF_GradientLinear)) {
			tVal = input.VaryingParam0.x;
		}
		else if (IS_SET(SHADER_TYPE, PSTF_GradientRadial)) {
			tVal = length(input.VaryingParam0.xy);
		}
	
		float4 colorTemp;
		if (IS_SET(SHADER_TYPE, PSTF_Gradient2Point)) {
			colorTemp = lerp(RENOIR_SHADER_PS_PROPS_0, RENOIR_SHADER_PS_PROPS_2, saturate(tVal));
		}
		else if (IS_SET(SHADER_TYPE, PSTF_Gradient3PointSymmetrical)) {
			float oneMinus2t = 1.0 - (2.0 * tVal);
			colorTemp = clamp(oneMinus2t, 0.0, 1.0) * RENOIR_SHADER_PS_PROPS_0;
			colorTemp += (1.0 - min(abs(oneMinus2t), 1.0)) * RENOIR_SHADER_PS_PROPS_1;
			colorTemp += clamp(-oneMinus2t, 0.0, 1.0) * RENOIR_SHADER_PS_PROPS_2;
		}
		else if (IS_SET(SHADER_TYPE, PSTF_GradientFromTexture)) {
			float2 coord = float2(tVal, RENOIR_SHADER_PS_PROPS_3.x);
			colorTemp = SAMPLE2D(txGradient, coord);
		}
		else if (IS_SET(SHADER_TYPE, PSTF_ColorFromTexture)) {
			colorTemp = SAMPLE2D(TEXTURE_0, input.Additional.xy);
		}
	
		// Warning X4000 for usage of potentially uninitialized variable can be
		// safely ignored, as there are no ShaderTypes that don't enter any of the
		// branches above.
		if (IS_SET(SHADER_TYPE, PSTF_HasMask)) {
			float mask = SAMPLE2D(txMask, input.VaryingParam1.xy).r;
			colorTemp *= mask;
		}
	
		PSOutput.color = colorTemp;
	}
	
	#undef IS_SET
	'''
Added file "CohRenoirShaderVS.hlsl":
	'''
	/*
	This file is part of Renoir, a modern graphics library.
	
	Copyright (c) 2012-2016 Coherent Labs AD and/or its licensors. All
	rights reserved in all media.
	
	The coded instructions, statements, computer programs, and/or related
	material (collectively the "Data") in these files contain confidential
	and unpublished information proprietary Coherent Labs and/or its
	licensors, which is protected by United States of America federal
	copyright law and by international treaties.
	
	This software or source code is supplied under the terms of a license
	agreement and nondisclosure agreement with Coherent Labs AD and may
	not be copied, disclosed, or exploited except in accordance with the
	terms of that agreement. The Data may not be disclosed or distributed to
	third parties, in whole or in part, without the prior written consent of
	Coherent Labs AD.
	
	COHERENT LABS MAKES NO REPRESENTATION ABOUT THE SUITABILITY OF THIS
	SOURCE CODE FOR ANY PURPOSE. THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT
	HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
	INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
	MERCHANTABILITY, NONINFRINGEMENT, AND FITNESS FOR A PARTICULAR PURPOSE
	ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER, ITS AFFILIATES,
	PARENT COMPANIES, LICENSORS, SUPPLIERS, OR CONTRIBUTORS BE LIABLE FOR
	ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
	DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
	OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
	HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
	STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
	ANY WAY OUT OF THE USE OR PERFORMANCE OF THIS SOFTWARE OR SOURCE CODE,
	EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
	*/
	
	#include "ShaderConstants.fxh"
	
	#define USE_ADDITIONAL_COORDS 2.0
	
	struct VS_Input {
		float4 Position : HB_POSITION;
		float4 Color : HB_COLOR;
		float4 Additional : HB_ADDITIONAL;
	};
	
	struct PS_Input {
		float4 Position : SV_Position;
		float4 Color : TEXCOORD0;
		float4 Additional: TEXCOORD1;
		float3 ScreenNormalPosition : TEXCOORD2;
		float4 VaryingParam0 : TEXCOORD3;
		float4 VaryingParam1 : TEXCOORD4;
	};
	
	void main(in VS_Input VSInput, out PS_Input PSInput) {
		PSInput.Position = mul(VSInput.Position, TRANSFORM);
		PSInput.ScreenNormalPosition = VSInput.Position.xyz;
	
		float4 coords = VSInput.Position;
		if (VSInput.Additional.z == USE_ADDITIONAL_COORDS) {
			coords = float4(VSInput.Additional.xy, 0, 1);
		}
	
		PSInput.VaryingParam0 = mul(coords, COORD_TRANSFORM);
		PSInput.VaryingParam1.x = VSInput.Position.x * RENOIR_SHADER_VS_PROPS_0.x + RENOIR_SHADER_VS_PROPS_0.z;
		PSInput.VaryingParam1.y = VSInput.Position.y * RENOIR_SHADER_VS_PROPS_0.y + RENOIR_SHADER_VS_PROPS_0.w;
	
		// Translate to -1..1 with perspective correction
		float w = PSInput.Position.w;
		PSInput.Position.x = PSInput.Position.x * 2 - w;
		PSInput.Position.y = (w - PSInput.Position.y) * 2 - w;
	
		PSInput.Color = VSInput.Color;
		PSInput.Additional = VSInput.Additional;
	}
	'''
Moved file "hummingbird/CohShadeGeometry.ihlsl" to "CohShadeGeometry.ihlsl".
Moved file "hummingbird/CohShadeGeometryRare.ihlsl" to "CohShadeGeometryRare.ihlsl".
Moved file "hummingbird/CohShadeGeometryStencil.ihlsl" to "CohShadeGeometryStencil.ihlsl".
Added file "CohStandardPS.hlsl":
	'''
	/*
	This file is part of Renoir, a modern graphics library.
	
	Copyright (c) 2012-2016 Coherent Labs AD and/or its licensors. All
	rights reserved in all media.
	
	The coded instructions, statements, computer programs, and/or related
	material (collectively the "Data") in these files contain confidential
	and unpublished information proprietary Coherent Labs and/or its
	licensors, which is protected by United States of America federal
	copyright law and by international treaties.
	
	This software or source code is supplied under the terms of a license
	agreement and nondisclosure agreement with Coherent Labs AD and may
	not be copied, disclosed, or exploited except in accordance with the
	terms of that agreement. The Data may not be disclosed or distributed to
	third parties, in whole or in part, without the prior written consent of
	Coherent Labs AD.
	
	COHERENT LABS MAKES NO REPRESENTATION ABOUT THE SUITABILITY OF THIS
	SOURCE CODE FOR ANY PURPOSE. THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT
	HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
	INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
	MERCHANTABILITY, NONINFRINGEMENT, AND FITNESS FOR A PARTICULAR PURPOSE
	ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER, ITS AFFILIATES,
	PARENT COMPANIES, LICENSORS, SUPPLIERS, OR CONTRIBUTORS BE LIABLE FOR
	ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
	DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
	OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
	HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
	STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
	ANY WAY OUT OF THE USE OR PERFORMANCE OF THIS SOFTWARE OR SOURCE CODE,
	EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
	*/
	
	#include "ShaderConstants.fxh"
	
	struct PS_Input {
		float4 Position : SV_Position;
		float4 Color : TEXCOORD0;
		float4 Additional: TEXCOORD1;
		float3 ScreenNormalPosition : TEXCOORD2;
	};
	
	struct PS_Output {
		float4 color : SV_Target;
	};
	
	#include "CohShadeGeometry.ihlsl"
	
	void main(in PS_Input PSInput, out PS_Output PSOutput)
	{
		float alpha = 1.0f;
		float4 outColor = PSInput.Color;
	
		ShadeGeometry(PSInput, outColor, alpha);
		PSOutput.color = outColor * alpha;
	}
	'''
Added file "CohStandardRarePS.hlsl":
	'''
	/*
	This file is part of Renoir, a modern graphics library.
	
	Copyright (c) 2012-2016 Coherent Labs AD and/or its licensors. All
	rights reserved in all media.
	
	The coded instructions, statements, computer programs, and/or related
	material (collectively the "Data") in these files contain confidential
	and unpublished information proprietary Coherent Labs and/or its
	licensors, which is protected by United States of America federal
	copyright law and by international treaties.
	
	This software or source code is supplied under the terms of a license
	agreement and nondisclosure agreement with Coherent Labs AD and may
	not be copied, disclosed, or exploited except in accordance with the
	terms of that agreement. The Data may not be disclosed or distributed to
	third parties, in whole or in part, without the prior written consent of
	Coherent Labs AD.
	
	COHERENT LABS MAKES NO REPRESENTATION ABOUT THE SUITABILITY OF THIS
	SOURCE CODE FOR ANY PURPOSE. THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT
	HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
	INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
	MERCHANTABILITY, NONINFRINGEMENT, AND FITNESS FOR A PARTICULAR PURPOSE
	ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER, ITS AFFILIATES,
	PARENT COMPANIES, LICENSORS, SUPPLIERS, OR CONTRIBUTORS BE LIABLE FOR
	ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
	DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
	OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
	HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
	STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
	ANY WAY OUT OF THE USE OR PERFORMANCE OF THIS SOFTWARE OR SOURCE CODE,
	EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
	*/
	
	#include "ShaderConstants.fxh"
	
	struct PS_Input {
		float4 Position : SV_Position;
		float4 Color : TEXCOORD0;
		float4 Additional: TEXCOORD1;
		float3 ScreenNormalPosition : TEXCOORD2;
	};
	
	struct PS_Output {
		float4 color : SV_Target;
	};
	
	#include "CohShadeGeometryRare.ihlsl"
	
	void main(in PS_Input PSInput, out PS_Output PSOutput)
	{
		float alpha = 1.0f;
		float4 outColor = PSInput.Color;
	
		ShadeGeometry(PSInput, outColor, alpha);
		PSOutput.color = outColor * alpha;
	}
	'''
Added file "CohStandardVS.hlsl":
	'''
	/*
	v4lel
	This file is part of Renoir, a modern graphics library.
	
	Copyright (c) 2012-2016 Coherent Labs AD and/or its licensors. All
	rights reserved in all media.
	
	The coded instructions, statements, computer programs, and/or related
	material (collectively the "Data") in these files contain confidential
	and unpublished information proprietary Coherent Labs and/or its
	licensors, which is protected by United States of America federal
	copyright law and by international treaties.
	
	This software or source code is supplied under the terms of a license
	agreement and nondisclosure agreement with Coherent Labs AD and may
	not be copied, disclosed, or exploited except in accordance with the
	terms of that agreement. The Data may not be disclosed or distributed to
	third parties, in whole or in part, without the prior written consent of
	Coherent Labs AD.
	
	COHERENT LABS MAKES NO REPRESENTATION ABOUT THE SUITABILITY OF THIS
	SOURCE CODE FOR ANY PURPOSE. THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT
	HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
	INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
	MERCHANTABILITY, NONINFRINGEMENT, AND FITNESS FOR A PARTICULAR PURPOSE
	ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER, ITS AFFILIATES,
	PARENT COMPANIES, LICENSORS, SUPPLIERS, OR CONTRIBUTORS BE LIABLE FOR
	ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
	DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
	OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
	HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
	STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
	ANY WAY OUT OF THE USE OR PERFORMANCE OF THIS SOFTWARE OR SOURCE CODE,
	EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
	*/
	
	#include "ShaderConstants.fxh"
	
	struct VS_Input {
		float4 Position : HB_POSITION;
		float4 Color : HB_COLOR;
		float4 Additional : HB_ADDITIONAL;
	};
	
	struct PS_Input {
		float4 Position : SV_Position;
		float4 Color : TEXCOORD0;
		float4 Additional: TEXCOORD1;
		float3 ScreenNormalPosition : TEXCOORD2;
	};
	
	void main(in VS_Input VSInput, out PS_Input PSInput) {
		PSInput.Position = mul(VSInput.Position, TRANSFORM);
		PSInput.ScreenNormalPosition = VSInput.Position;
	
		// Translate to -1..1 with perspective correction
		float w = PSInput.Position.w;
		PSInput.Position.x = PSInput.Position.x * 2 - w;
		PSInput.Position.y = (w - PSInput.Position.y) * 2 - w;
	
		PSInput.Color = VSInput.Color;
		PSInput.Additional = VSInput.Additional;
	}
	
	'''
Added file "CohStencilPS.hlsl":
	'''
	/*
	This file is part of Renoir, a modern graphics library.
	
	Copyright (c) 2012-2016 Coherent Labs AD and/or its licensors. All
	rights reserved in all media.
	
	The coded instructions, statements, computer programs, and/or related
	material (collectively the "Data") in these files contain confidential
	and unpublished information proprietary Coherent Labs and/or its
	licensors, which is protected by United States of America federal
	copyright law and by international treaties.
	
	This software or source code is supplied under the terms of a license
	agreement and nondisclosure agreement with Coherent Labs AD and may
	not be copied, disclosed, or exploited except in accordance with the
	terms of that agreement. The Data may not be disclosed or distributed to
	third parties, in whole or in part, without the prior written consent of
	Coherent Labs AD.
	
	COHERENT LABS MAKES NO REPRESENTATION ABOUT THE SUITABILITY OF THIS
	SOURCE CODE FOR ANY PURPOSE. THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT
	HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
	INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
	MERCHANTABILITY, NONINFRINGEMENT, AND FITNESS FOR A PARTICULAR PURPOSE
	ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER, ITS AFFILIATES,
	PARENT COMPANIES, LICENSORS, SUPPLIERS, OR CONTRIBUTORS BE LIABLE FOR
	ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
	DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
	OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
	HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
	STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
	ANY WAY OUT OF THE USE OR PERFORMANCE OF THIS SOFTWARE OR SOURCE CODE,
	EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
	*/
	
	#include "ShaderConstants.fxh"
	
	struct PS_Input {
		float4 Position : SV_Position;
		float4 Color : TEXCOORD0;
		float4 Additional: TEXCOORD1;
		float3 ScreenNormalPosition : TEXCOORD2;
	};
	
	#include "CohShadeGeometryStencil.ihlsl"
	
	void main(in PS_Input PSInput) {
		float alpha = 1.0f;
		float4 outColor = PSInput.Color;
	
		ShadeGeometry(PSInput, outColor, alpha);
	
		// Image
		if (SHADER_TYPE == 3) {
			alpha = outColor.a;
		}
	
		if (alpha < 0.00390625f) {
			discard;
		}
	}
	'''
Moved file "hummingbird/CohStencilPathPS.hlsl" to "CohStencilPathPS.hlsl".
Added file "CohStencilRarePS.hlsl":
	'''
	/*
	This file is part of Renoir, a modern graphics library.
	
	Copyright (c) 2012-2016 Coherent Labs AD and/or its licensors. All
	rights reserved in all media.
	
	The coded instructions, statements, computer programs, and/or related
	material (collectively the "Data") in these files contain confidential
	and unpublished information proprietary Coherent Labs and/or its
	licensors, which is protected by United States of America federal
	copyright law and by international treaties.
	
	This software or source code is supplied under the terms of a license
	agreement and nondisclosure agreement with Coherent Labs AD and may
	not be copied, disclosed, or exploited except in accordance with the
	terms of that agreement. The Data may not be disclosed or distributed to
	third parties, in whole or in part, without the prior written consent of
	Coherent Labs AD.
	
	COHERENT LABS MAKES NO REPRESENTATION ABOUT THE SUITABILITY OF THIS
	SOURCE CODE FOR ANY PURPOSE. THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT
	HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
	INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
	MERCHANTABILITY, NONINFRINGEMENT, AND FITNESS FOR A PARTICULAR PURPOSE
	ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER, ITS AFFILIATES,
	PARENT COMPANIES, LICENSORS, SUPPLIERS, OR CONTRIBUTORS BE LIABLE FOR
	ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
	DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
	OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
	HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
	STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
	ANY WAY OUT OF THE USE OR PERFORMANCE OF THIS SOFTWARE OR SOURCE CODE,
	EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
	*/
	
	#include "ShaderConstants.fxh"
	
	struct PS_Input {
		float4 Position : SV_Position;
		float4 Color : TEXCOORD0;
		float4 Additional: TEXCOORD1;
		float3 ScreenNormalPosition : TEXCOORD2;
	};
	
	#include "CohShadeGeometryRare.ihlsl"
	
	void main(in PS_Input PSInput) {
		float alpha = 1.0f;
		float4 outColor = PSInput.Color;
	
		ShadeGeometry(PSInput, outColor, alpha);
	
		// Image
		if (SHADER_TYPE == 3) {
			alpha = outColor.a;
		}
	
		if (alpha < 0.00390625f) {
			discard;
		}
	}
	'''
Changed file "ShaderConstants.fxh":
	Total line: 270 (+1, -3)
	          '''
	          ...
	206 206   }
	207 207   
	208 208   cbuffer TextConstants
	209 209   {
	210 210       float1 GLYPH_SMOOTH_RADIUS;
	211     -     float1 GLYPH_CUTOFF;
	212     -     float1 OUTLINE_CUTOFF;
	    211 +     float1 OUTLINE_CUTOFF;
	213     -     float4 OUTLINE_COLOR;
	214 212       float1 SHADOW_SMOOTH_RADIUS;
	215 213       float4 SHADOW_COLOR;
	216 214       float2 SHADOW_OFFSET;
	217 215   }
	218 216   cbuffer DebugConstants
	          ...
	257 255       float4 PIXEL_OFFSETS[6];
	258 256   };
	259 257   
	260 258   cbuffer UIRenoirShaderVSConstants
	261 259   {
	    260 +     float4x4 COORD_TRANSFORM;
	262 261       float4 RENOIR_SHADER_VS_PROPS_0;
	263     -     float4x4 COORD_TRANSFORM;
	264 262   };
	265 263   
	266 264   cbuffer UIRenoirShaderPSConstants
	267 265   {
	268 266       float4 RENOIR_SHADER_PS_PROPS_0;
	          ...
	          '''
Changed file "entity.fragment.hlsl":
	Total line: 189 (+8, -0)
	          '''
	          ...
	 64  64   	color = TEXTURE_0.Sample( TextureSampler0, PSInput.uv );
	 65  65   #else
	 66  66   	color = texture2D_AA(TEXTURE_0, TextureSampler0, PSInput.uv);
	 67  67   #endif
	 68  68   
	     69 + #ifdef MASKED_MULTITEXTURE
	     70 + 	float4 tex1 = TEXTURE_1.Sample(TextureSampler1, PSInput.uv);
	     71 + 
	     72 + 	// If tex1 has a non-black color and no alpha, use color; otherwise use tex1 
	     73 + 	float maskedTexture = ceil( dot( tex1.rgb, float3(1.0f, 1.0f, 1.0f) ) * ( 1.0f - tex1.a ) );
	     74 + 	color = lerp(tex1, color, saturate(maskedTexture));
	     75 + #endif // MASKED_MULTITEXTURE
	     76 + 
	 69  77   #if defined(ALPHA_TEST) && !defined(USE_MULTITEXTURE) && !defined(MULTIPLICATIVE_TINT)
	 70  78   	if( NEEDS_DISCARD( color ) )
	 71  79   	{
	 72  80   		discard;
	 73  81   	}
	          ...
	          '''
Removed file "hummingbird/CohPathPS.hlsl":
	'''
	/*
	This file is part of Renoir, a modern graphics library.
	
	Copyright (c) 2012-2016 Coherent Labs AD and/or its licensors. All
	rights reserved in all media.
	
	The coded instructions, statements, computer programs, and/or related
	material (collectively the "Data") in these files contain confidential
	and unpublished information proprietary Coherent Labs and/or its
	licensors, which is protected by United States of America federal
	copyright law and by international treaties.
	
	This software or source code is supplied under the terms of a license
	agreement and nondisclosure agreement with Coherent Labs AD and may
	not be copied, disclosed, or exploited except in accordance with the
	terms of that agreement. The Data may not be disclosed or distributed to
	third parties, in whole or in part, without the prior written consent of
	Coherent Labs AD.
	
	COHERENT LABS MAKES NO REPRESENTATION ABOUT THE SUITABILITY OF THIS
	SOURCE CODE FOR ANY PURPOSE. THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT
	HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
	INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
	MERCHANTABILITY, NONINFRINGEMENT, AND FITNESS FOR A PARTICULAR PURPOSE
	ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER, ITS AFFILIATES,
	PARENT COMPANIES, LICENSORS, SUPPLIERS, OR CONTRIBUTORS BE LIABLE FOR
	ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
	DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
	OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
	HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
	STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
	ANY WAY OUT OF THE USE OR PERFORMANCE OF THIS SOFTWARE OR SOURCE CODE,
	EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
	*/
	
	#include "../ShaderConstants.fxh"
	
	struct PS_Input
	{
		float4 Position : SV_Position; // Why not position3
		float2 ExtraParams : TEXCOORD0;
	};
	
	struct PS_Output {
		float4 color : SV_Target;
	};
	
	void main(in PS_Input PSInput, out PS_Output PSOutput)
	{
		if (SHADER_TYPE == 14)
		{
			// Hairline quads
			float2 px = ddx(PSInput.ExtraParams);
			float2 py = ddy(PSInput.ExtraParams);
	
			float fx = (2 * PSInput.ExtraParams.x) * px.x - px.y;
			float fy = (2 * PSInput.ExtraParams.x) * py.x - py.y;
	
			float edgeAlpha = (PSInput.ExtraParams.x * PSInput.ExtraParams.x - PSInput.ExtraParams.y);
			float sd = sqrt((edgeAlpha * edgeAlpha) / (fx * fx + fy * fy));
	
			float alpha = 1.0 - sd;
	
			PSOutput.color = PRIM_PROPS_0 * PRIM_PROPS_1.x * alpha;
		}
		else if (SHADER_TYPE == 11)
		{
			// Hairline lines
			PSOutput.color = PRIM_PROPS_0 * min(1.0f, (1.0f - abs(PSInput.ExtraParams.y)) * PRIM_PROPS_1.x);
		}
		else
		{
			// non-hairline paths
			PSOutput.color = PRIM_PROPS_0 * PSInput.ExtraParams.y;
		}
	}
	'''
Removed file "hummingbird/CohPathVS.hlsl":
	'''
	/*
	This file is part of Renoir, a modern graphics library.
	
	Copyright (c) 2012-2016 Coherent Labs AD and/or its licensors. All
	rights reserved in all media.
	
	The coded instructions, statements, computer programs, and/or related
	material (collectively the "Data") in these files contain confidential
	and unpublished information proprietary Coherent Labs and/or its
	licensors, which is protected by United States of America federal
	copyright law and by international treaties.
	
	This software or source code is supplied under the terms of a license
	agreement and nondisclosure agreement with Coherent Labs AD and may
	not be copied, disclosed, or exploited except in accordance with the
	terms of that agreement. The Data may not be disclosed or distributed to
	third parties, in whole or in part, without the prior written consent of
	Coherent Labs AD.
	
	COHERENT LABS MAKES NO REPRESENTATION ABOUT THE SUITABILITY OF THIS
	SOURCE CODE FOR ANY PURPOSE. THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT
	HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
	INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
	MERCHANTABILITY, NONINFRINGEMENT, AND FITNESS FOR A PARTICULAR PURPOSE
	ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER, ITS AFFILIATES,
	PARENT COMPANIES, LICENSORS, SUPPLIERS, OR CONTRIBUTORS BE LIABLE FOR
	ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
	DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
	OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
	HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
	STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
	ANY WAY OUT OF THE USE OR PERFORMANCE OF THIS SOFTWARE OR SOURCE CODE,
	EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
	*/
	
	#include "../ShaderConstants.fxh"
	
	struct VS_Input {
		float4 Position : HB_POSITION;
	};
	
	struct PS_Input {
		float4 Position : SV_Position;
		float2 ExtraParams : TEXCOORD0;
	};
	
	void main(in VS_Input VSInput, out PS_Input PSInput)
	{
		PSInput.Position = mul(float4(VSInput.Position.xy, 0.0f, 1.0f), TRANSFORM);
	
		// Translate to -1..1 with perspective correction
		float w = PSInput.Position.w;
		PSInput.Position.x = PSInput.Position.x * 2 - w;
		PSInput.Position.y = (w - PSInput.Position.y) * 2 - w;
	
		PSInput.ExtraParams = VSInput.Position.zw;
	}
	'''
Removed file "hummingbird/CohRenoirShaderPS.hlsl":
	'''
	/*
	This file is part of Renoir, a modern graphics library.
	
	Copyright (c) 2012-2016 Coherent Labs AD and/or its licensors. All
	rights reserved in all media.
	
	The coded instructions, statements, computer programs, and/or related
	material (collectively the "Data") in these files contain confidential
	and unpublished information proprietary Coherent Labs and/or its
	licensors, which is protected by United States of America federal
	copyright law and by international treaties.
	
	This software or source code is supplied under the terms of a license
	agreement and nondisclosure agreement with Coherent Labs AD and may
	not be copied, disclosed, or exploited except in accordance with the
	terms of that agreement. The Data may not be disclosed or distributed to
	third parties, in whole or in part, without the prior written consent of
	Coherent Labs AD.
	
	COHERENT LABS MAKES NO REPRESENTATION ABOUT THE SUITABILITY OF THIS
	SOURCE CODE FOR ANY PURPOSE. THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT
	HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
	INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
	MERCHANTABILITY, NONINFRINGEMENT, AND FITNESS FOR A PARTICULAR PURPOSE
	ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER, ITS AFFILIATES,
	PARENT COMPANIES, LICENSORS, SUPPLIERS, OR CONTRIBUTORS BE LIABLE FOR
	ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
	DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
	OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
	HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
	STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
	ANY WAY OUT OF THE USE OR PERFORMANCE OF THIS SOFTWARE OR SOURCE CODE,
	EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
	*/
	
	#include "../ShaderConstants.fxh"
	
	struct PS_Input {
		float4 Position : SV_Position;
		float4 Color : TEXCOORD0;
		float4 Additional: TEXCOORD1;
		float3 ScreenNormalPosition : TEXCOORD2;
		float4 VaryingParam0 : TEXCOORD3;
		float4 VaryingParam1 : TEXCOORD4;
	};
	
	struct PS_Output {
		float4 color : SV_Target;
	};
	
	#define PS_INPUT_ADDITIONAL_INTERP_MODIFIER centroid
	#define SAMPLE2D(tex, uv) tex.Sample(TextureSampler0, uv)
	#define txMask TEXTURE_1
	#define txGradient TEXTURE_2
	
	static const int PSTF_ColorFromTexture = 0x1;
	static const int PSTF_GradientLinear = 0x2;
	static const int PSTF_GradientRadial = 0x4;
	static const int PSTF_Gradient2Point = 0x8;
	static const int PSTF_Gradient3PointSymmetrical = 0x10;
	static const int PSTF_GradientFromTexture = 0x20;
	static const int PSTF_HasMask = 0x40;
	
	#define IS_SET(value, flag) value & flag
	
	void main(in PS_Input input, out PS_Output PSOutput) {
		float tVal = 0.f;
	
		if (IS_SET(SHADER_TYPE, PSTF_GradientLinear)) {
			tVal = input.VaryingParam0.x;
		}
		else if (IS_SET(SHADER_TYPE, PSTF_GradientRadial)) {
			tVal = length(input.VaryingParam0.xy);
		}
	
		float4 colorTemp;
		if (IS_SET(SHADER_TYPE, PSTF_Gradient2Point)) {
			colorTemp = lerp(RENOIR_SHADER_PS_PROPS_0, RENOIR_SHADER_PS_PROPS_2, saturate(tVal));
		}
		else if (IS_SET(SHADER_TYPE, PSTF_Gradient3PointSymmetrical)) {
			float oneMinus2t = 1.0 - (2.0 * tVal);
			colorTemp = clamp(oneMinus2t, 0.0, 1.0) * RENOIR_SHADER_PS_PROPS_0;
			colorTemp += (1.0 - min(abs(oneMinus2t), 1.0)) * RENOIR_SHADER_PS_PROPS_1;
			colorTemp += clamp(-oneMinus2t, 0.0, 1.0) * RENOIR_SHADER_PS_PROPS_2;
		}
		else if (IS_SET(SHADER_TYPE, PSTF_GradientFromTexture)) {
			float2 coord = float2(tVal, RENOIR_SHADER_PS_PROPS_3.x);
			colorTemp = SAMPLE2D(txGradient, coord);
		}
		else if (IS_SET(SHADER_TYPE, PSTF_ColorFromTexture)) {
			colorTemp = SAMPLE2D(TEXTURE_0, input.Additional.xy);
		}
	
		// Warning X4000 for usage of potentially uninitialized variable can be
		// safely ignored, as there are no ShaderTypes that don't enter any of the
		// branches above.
		if (IS_SET(SHADER_TYPE, PSTF_HasMask)) {
			float mask = SAMPLE2D(txMask, input.VaryingParam1.xy).r;
			colorTemp *= mask;
		}
	
		PSOutput.color = colorTemp;
	}
	
	#undef IS_SET
	'''
Removed file "hummingbird/CohRenoirShaderVS.hlsl":
	'''
	/*
	This file is part of Renoir, a modern graphics library.
	
	Copyright (c) 2012-2016 Coherent Labs AD and/or its licensors. All
	rights reserved in all media.
	
	The coded instructions, statements, computer programs, and/or related
	material (collectively the "Data") in these files contain confidential
	and unpublished information proprietary Coherent Labs and/or its
	licensors, which is protected by United States of America federal
	copyright law and by international treaties.
	
	This software or source code is supplied under the terms of a license
	agreement and nondisclosure agreement with Coherent Labs AD and may
	not be copied, disclosed, or exploited except in accordance with the
	terms of that agreement. The Data may not be disclosed or distributed to
	third parties, in whole or in part, without the prior written consent of
	Coherent Labs AD.
	
	COHERENT LABS MAKES NO REPRESENTATION ABOUT THE SUITABILITY OF THIS
	SOURCE CODE FOR ANY PURPOSE. THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT
	HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
	INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
	MERCHANTABILITY, NONINFRINGEMENT, AND FITNESS FOR A PARTICULAR PURPOSE
	ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER, ITS AFFILIATES,
	PARENT COMPANIES, LICENSORS, SUPPLIERS, OR CONTRIBUTORS BE LIABLE FOR
	ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
	DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
	OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
	HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
	STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
	ANY WAY OUT OF THE USE OR PERFORMANCE OF THIS SOFTWARE OR SOURCE CODE,
	EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
	*/
	
	#include "../ShaderConstants.fxh"
	
	#define USE_ADDITIONAL_COORDS 2.0
	
	struct VS_Input {
		float4 Position : HB_POSITION;
		float4 Color : HB_COLOR;
		float4 Additional : HB_ADDITIONAL;
	};
	
	struct PS_Input {
		float4 Position : SV_Position;
		float4 Color : TEXCOORD0;
		float4 Additional: TEXCOORD1;
		float3 ScreenNormalPosition : TEXCOORD2;
		float4 VaryingParam0 : TEXCOORD3;
		float4 VaryingParam1 : TEXCOORD4;
	};
	
	void main(in VS_Input VSInput, out PS_Input PSInput) {
		PSInput.Position = mul(VSInput.Position, TRANSFORM);
		PSInput.ScreenNormalPosition = VSInput.Position.xyz;
	
		float4 coords = VSInput.Position;
		if (VSInput.Additional.z == USE_ADDITIONAL_COORDS) {
			coords = float4(VSInput.Additional.xy, 0, 1);
		}
	
		PSInput.VaryingParam0 = mul(coords, COORD_TRANSFORM);
		PSInput.VaryingParam1.x = VSInput.Position.x * RENOIR_SHADER_VS_PROPS_0.x + RENOIR_SHADER_VS_PROPS_0.z;
		PSInput.VaryingParam1.y = VSInput.Position.y * RENOIR_SHADER_VS_PROPS_0.y + RENOIR_SHADER_VS_PROPS_0.w;
	
		// Translate to -1..1 with perspective correction
		float w = PSInput.Position.w;
		PSInput.Position.x = PSInput.Position.x * 2 - w;
		PSInput.Position.y = (w - PSInput.Position.y) * 2 - w;
	
		PSInput.Color = VSInput.Color;
		PSInput.Additional = VSInput.Additional;
	}
	'''
Removed file "hummingbird/CohStandardPS.hlsl":
	'''
	/*
	This file is part of Renoir, a modern graphics library.
	
	Copyright (c) 2012-2016 Coherent Labs AD and/or its licensors. All
	rights reserved in all media.
	
	The coded instructions, statements, computer programs, and/or related
	material (collectively the "Data") in these files contain confidential
	and unpublished information proprietary Coherent Labs and/or its
	licensors, which is protected by United States of America federal
	copyright law and by international treaties.
	
	This software or source code is supplied under the terms of a license
	agreement and nondisclosure agreement with Coherent Labs AD and may
	not be copied, disclosed, or exploited except in accordance with the
	terms of that agreement. The Data may not be disclosed or distributed to
	third parties, in whole or in part, without the prior written consent of
	Coherent Labs AD.
	
	COHERENT LABS MAKES NO REPRESENTATION ABOUT THE SUITABILITY OF THIS
	SOURCE CODE FOR ANY PURPOSE. THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT
	HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
	INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
	MERCHANTABILITY, NONINFRINGEMENT, AND FITNESS FOR A PARTICULAR PURPOSE
	ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER, ITS AFFILIATES,
	PARENT COMPANIES, LICENSORS, SUPPLIERS, OR CONTRIBUTORS BE LIABLE FOR
	ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
	DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
	OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
	HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
	STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
	ANY WAY OUT OF THE USE OR PERFORMANCE OF THIS SOFTWARE OR SOURCE CODE,
	EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
	*/
	
	#include "../ShaderConstants.fxh"
	
	struct PS_Input {
		float4 Position : SV_Position;
		float4 Color : TEXCOORD0;
		float4 Additional: TEXCOORD1;
		float3 ScreenNormalPosition : TEXCOORD2;
	};
	
	struct PS_Output {
		float4 color : SV_Target;
	};
	
	#include "CohShadeGeometry.ihlsl"
	
	void main(in PS_Input PSInput, out PS_Output PSOutput)
	{
		float alpha = 1.0f;
		float4 outColor = PSInput.Color;
	
		ShadeGeometry(PSInput, outColor, alpha);
		PSOutput.color = outColor * alpha;
	}
	'''
Removed file "hummingbird/CohStandardRarePS.hlsl":
	'''
	/*
	This file is part of Renoir, a modern graphics library.
	
	Copyright (c) 2012-2016 Coherent Labs AD and/or its licensors. All
	rights reserved in all media.
	
	The coded instructions, statements, computer programs, and/or related
	material (collectively the "Data") in these files contain confidential
	and unpublished information proprietary Coherent Labs and/or its
	licensors, which is protected by United States of America federal
	copyright law and by international treaties.
	
	This software or source code is supplied under the terms of a license
	agreement and nondisclosure agreement with Coherent Labs AD and may
	not be copied, disclosed, or exploited except in accordance with the
	terms of that agreement. The Data may not be disclosed or distributed to
	third parties, in whole or in part, without the prior written consent of
	Coherent Labs AD.
	
	COHERENT LABS MAKES NO REPRESENTATION ABOUT THE SUITABILITY OF THIS
	SOURCE CODE FOR ANY PURPOSE. THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT
	HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
	INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
	MERCHANTABILITY, NONINFRINGEMENT, AND FITNESS FOR A PARTICULAR PURPOSE
	ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER, ITS AFFILIATES,
	PARENT COMPANIES, LICENSORS, SUPPLIERS, OR CONTRIBUTORS BE LIABLE FOR
	ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
	DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
	OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
	HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
	STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
	ANY WAY OUT OF THE USE OR PERFORMANCE OF THIS SOFTWARE OR SOURCE CODE,
	EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
	*/
	
	#include "../ShaderConstants.fxh"
	
	struct PS_Input {
		float4 Position : SV_Position;
		float4 Color : TEXCOORD0;
		float4 Additional: TEXCOORD1;
		float3 ScreenNormalPosition : TEXCOORD2;
	};
	
	struct PS_Output {
		float4 color : SV_Target;
	};
	
	#include "CohShadeGeometryRare.ihlsl"
	
	void main(in PS_Input PSInput, out PS_Output PSOutput)
	{
		float alpha = 1.0f;
		float4 outColor = PSInput.Color;
	
		ShadeGeometry(PSInput, outColor, alpha);
		PSOutput.color = outColor * alpha;
	}
	'''
Removed file "hummingbird/CohStandardVS.hlsl":
	'''
	/*
	v4lel
	This file is part of Renoir, a modern graphics library.
	
	Copyright (c) 2012-2016 Coherent Labs AD and/or its licensors. All
	rights reserved in all media.
	
	The coded instructions, statements, computer programs, and/or related
	material (collectively the "Data") in these files contain confidential
	and unpublished information proprietary Coherent Labs and/or its
	licensors, which is protected by United States of America federal
	copyright law and by international treaties.
	
	This software or source code is supplied under the terms of a license
	agreement and nondisclosure agreement with Coherent Labs AD and may
	not be copied, disclosed, or exploited except in accordance with the
	terms of that agreement. The Data may not be disclosed or distributed to
	third parties, in whole or in part, without the prior written consent of
	Coherent Labs AD.
	
	COHERENT LABS MAKES NO REPRESENTATION ABOUT THE SUITABILITY OF THIS
	SOURCE CODE FOR ANY PURPOSE. THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT
	HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
	INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
	MERCHANTABILITY, NONINFRINGEMENT, AND FITNESS FOR A PARTICULAR PURPOSE
	ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER, ITS AFFILIATES,
	PARENT COMPANIES, LICENSORS, SUPPLIERS, OR CONTRIBUTORS BE LIABLE FOR
	ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
	DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
	OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
	HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
	STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
	ANY WAY OUT OF THE USE OR PERFORMANCE OF THIS SOFTWARE OR SOURCE CODE,
	EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
	*/
	
	#include "../ShaderConstants.fxh"
	
	struct VS_Input {
		float4 Position : HB_POSITION;
		float4 Color : HB_COLOR;
		float4 Additional : HB_ADDITIONAL;
	};
	
	struct PS_Input {
		float4 Position : SV_Position;
		float4 Color : TEXCOORD0;
		float4 Additional: TEXCOORD1;
		float3 ScreenNormalPosition : TEXCOORD2;
	};
	
	void main(in VS_Input VSInput, out PS_Input PSInput) {
		PSInput.Position = mul(VSInput.Position, TRANSFORM);
		PSInput.ScreenNormalPosition = VSInput.Position;
	
		// Translate to -1..1 with perspective correction
		float w = PSInput.Position.w;
		PSInput.Position.x = PSInput.Position.x * 2 - w;
		PSInput.Position.y = (w - PSInput.Position.y) * 2 - w;
	
		PSInput.Color = VSInput.Color;
		PSInput.Additional = VSInput.Additional;
	}
	
	'''
Removed file "hummingbird/CohStencilPS.hlsl":
	'''
	/*
	This file is part of Renoir, a modern graphics library.
	
	Copyright (c) 2012-2016 Coherent Labs AD and/or its licensors. All
	rights reserved in all media.
	
	The coded instructions, statements, computer programs, and/or related
	material (collectively the "Data") in these files contain confidential
	and unpublished information proprietary Coherent Labs and/or its
	licensors, which is protected by United States of America federal
	copyright law and by international treaties.
	
	This software or source code is supplied under the terms of a license
	agreement and nondisclosure agreement with Coherent Labs AD and may
	not be copied, disclosed, or exploited except in accordance with the
	terms of that agreement. The Data may not be disclosed or distributed to
	third parties, in whole or in part, without the prior written consent of
	Coherent Labs AD.
	
	COHERENT LABS MAKES NO REPRESENTATION ABOUT THE SUITABILITY OF THIS
	SOURCE CODE FOR ANY PURPOSE. THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT
	HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
	INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
	MERCHANTABILITY, NONINFRINGEMENT, AND FITNESS FOR A PARTICULAR PURPOSE
	ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER, ITS AFFILIATES,
	PARENT COMPANIES, LICENSORS, SUPPLIERS, OR CONTRIBUTORS BE LIABLE FOR
	ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
	DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
	OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
	HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
	STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
	ANY WAY OUT OF THE USE OR PERFORMANCE OF THIS SOFTWARE OR SOURCE CODE,
	EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
	*/
	
	#include "../ShaderConstants.fxh"
	
	struct PS_Input {
		float4 Position : SV_Position;
		float4 Color : TEXCOORD0;
		float4 Additional: TEXCOORD1;
		float3 ScreenNormalPosition : TEXCOORD2;
	};
	
	#include "CohShadeGeometryStencil.ihlsl"
	
	void main(in PS_Input PSInput) {
		float alpha = 1.0f;
		float4 outColor = PSInput.Color;
	
		ShadeGeometry(PSInput, outColor, alpha);
	
		// Image
		if (SHADER_TYPE == 3) {
			alpha = outColor.a;
		}
	
		if (alpha < 0.00390625f) {
			discard;
		}
	}
	'''
Removed file "hummingbird/CohStencilRarePS.hlsl":
	'''
	/*
	This file is part of Renoir, a modern graphics library.
	
	Copyright (c) 2012-2016 Coherent Labs AD and/or its licensors. All
	rights reserved in all media.
	
	The coded instructions, statements, computer programs, and/or related
	material (collectively the "Data") in these files contain confidential
	and unpublished information proprietary Coherent Labs and/or its
	licensors, which is protected by United States of America federal
	copyright law and by international treaties.
	
	This software or source code is supplied under the terms of a license
	agreement and nondisclosure agreement with Coherent Labs AD and may
	not be copied, disclosed, or exploited except in accordance with the
	terms of that agreement. The Data may not be disclosed or distributed to
	third parties, in whole or in part, without the prior written consent of
	Coherent Labs AD.
	
	COHERENT LABS MAKES NO REPRESENTATION ABOUT THE SUITABILITY OF THIS
	SOURCE CODE FOR ANY PURPOSE. THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT
	HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
	INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
	MERCHANTABILITY, NONINFRINGEMENT, AND FITNESS FOR A PARTICULAR PURPOSE
	ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER, ITS AFFILIATES,
	PARENT COMPANIES, LICENSORS, SUPPLIERS, OR CONTRIBUTORS BE LIABLE FOR
	ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
	DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
	OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
	HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
	STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
	ANY WAY OUT OF THE USE OR PERFORMANCE OF THIS SOFTWARE OR SOURCE CODE,
	EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
	*/
	
	#include "../ShaderConstants.fxh"
	
	struct PS_Input {
		float4 Position : SV_Position;
		float4 Color : TEXCOORD0;
		float4 Additional: TEXCOORD1;
		float3 ScreenNormalPosition : TEXCOORD2;
	};
	
	#include "CohShadeGeometryRare.ihlsl"
	
	void main(in PS_Input PSInput) {
		float alpha = 1.0f;
		float4 outColor = PSInput.Color;
	
		ShadeGeometry(PSInput, outColor, alpha);
	
		// Image
		if (SHADER_TYPE == 3) {
			alpha = outColor.a;
		}
	
		if (alpha < 0.00390625f) {
			discard;
		}
	}
	'''
Changed file "text.fragment.hlsl":
	Total line: 64 (+0, -4)
	        '''
	        ...
	40 40   #ifdef MSDF
	41 41       float4 resultColor = PSInput.color;
	42 42   
	43 43       const float sampleDistance = median(diffuse.r, diffuse.g, diffuse.b);
	44 44   
	45    -     const float innerEdgeAlpha = smoothstep(max(0.0, GLYPH_CUTOFF - GLYPH_SMOOTH_RADIUS), min(1.0, GLYPH_CUTOFF + GLYPH_SMOOTH_RADIUS), sampleDistance);
	46    -     // Apply fill cutoff
	47    -     resultColor = lerp(OUTLINE_COLOR, resultColor, innerEdgeAlpha);
	48    - 
	49 45       const float outerEdgeAlpha = smoothstep(max(0.0, OUTLINE_CUTOFF - GLYPH_SMOOTH_RADIUS), min(1.0, OUTLINE_CUTOFF + GLYPH_SMOOTH_RADIUS), sampleDistance);
	50 46       // Apply stroke (outline) cutoff
	51 47       resultColor = float4(resultColor.rgb, resultColor.a * outerEdgeAlpha);
	52 48   
	53 49       const float2 topLeft = floor(PSInput.uv / GLYPH_UV_SIZE) * GLYPH_UV_SIZE;
	        ...
	        '''