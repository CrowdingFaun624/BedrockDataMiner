Difference of "render_controllers" between "1.19.20.20" (beta of "1.19.20") and "1.19.20.22" (beta of "1.19.20").

Changed file "persona.render_controllers":
	Total resource pack: 2 (+1, -0)
	Added resource pack "experimental":
		field "format_version": "1.8.0"
		field "render_controllers":
			render controller "controller.render.persona_animated_128x128.first_person":
				field "geometry": "Geometry.animated_128x128"
				field "materials": material dict: material "*": "Material.animated"
				field "part_visibility":
					part visibility dict: part visibility "*": false
					part visibility dict: part visibility "rightArm": "query.get_equipped_item_name(0, 1) == '' || query.get_equipped_item_name(0, 1) == 'map'"
					part visibility dict: part visibility "rightSleeve": "query.get_equipped_item_name(0, 1) == '' || query.get_equipped_item_name(0, 1) == 'map'"
					part visibility dict: part visibility "leftArm": "(query.get_equipped_item_name(0, 1) == 'map' && query.get_equipped_item_name('off_hand') != 'shield') || (query.get_equipped_item_name('off_hand') == 'map' && !query.item_is_charged) || (!query.item_is_charged && (variable.item_use_normalized > 0 && variable.item_use_normalized < 1.0))"
					part visibility dict: part visibility "leftSleeve": "(query.get_equipped_item_name(0, 1) == 'map' && query.get_equipped_item_name('off_hand') != 'shield') || (query.get_equipped_item_name('off_hand') == 'map' && !query.item_is_charged) || (!query.item_is_charged && (variable.item_use_normalized > 0 && variable.item_use_normalized < 1.0))"
				field "rebuild_animation_matrices": true
				field "textures": texture: "Texture.animated_128x128"
				field "uv_anim":
					field "offset":
						expression: 0.0
						expression: "Math.mod(Math.floor(query.life_time * 7),variable.animation_frames_128x128)/variable.animation_frames_128x128"
					field "scale": [1.0, 1.0]
			render controller "controller.render.persona_animated_128x128.third_person":
				field "color":
					channel "a": "0.3f"
					channel "b": "1.0f"
					channel "g": "1.0f"
					channel "r": "1.0f"
				field "geometry": "Geometry.animated_128x128"
				field "materials": material dict: material "*": "query.is_spectator ? Material.spectator : Material.animated"
				field "part_visibility":
					part visibility dict: part visibility "*": "!query.is_spectator"
					part visibility dict: part visibility "head": true
					part visibility dict: part visibility "hat": true
					part visibility dict: part visibility "helmet": "variable.helmet_layer_visible"
					part visibility dict: part visibility "leftLegging": "variable.leg_layer_visible && !query.is_spectator"
					part visibility dict: part visibility "rightLegging": "variable.leg_layer_visible && !query.is_spectator"
					part visibility dict: part visibility "leftBoot": "variable.boot_layer_visible && !query.is_spectator"
					part visibility dict: part visibility "rightBoot": "variable.boot_layer_visible && !query.is_spectator"
					part visibility dict: part visibility "leftSock": "variable.boot_layer_visible && variable.leg_layer_visible && !query.is_spectator"
					part visibility dict: part visibility "rightSock": "variable.boot_layer_visible && variable.leg_layer_visible && !query.is_spectator"
					part visibility dict: part visibility "bodyArmor": "variable.chest_layer_visible && !query.has_cape && !query.is_spectator"
					part visibility dict: part visibility "leftArmArmor": "variable.chest_layer_visible && !query.has_cape && !query.is_spectator"
					part visibility dict: part visibility "rightArmArmor": "variable.chest_layer_visible && !query.has_cape && !query.is_spectator"
					part visibility dict: part visibility "belt": "variable.chest_layer_visible && variable.leg_layer_visible && !query.is_spectator"
					part visibility dict: part visibility "cape": "query.has_cape && !query.is_spectator"
				field "rebuild_animation_matrices": true
				field "textures": texture: "Texture.animated_128x128"
				field "uv_anim":
					field "offset":
						expression: 0.0
						expression: "Math.mod(Math.floor(query.life_time * 7),variable.animation_frames_128x128)/variable.animation_frames_128x128"
					field "scale": [1.0, 1.0]
			render controller "controller.render.persona_animated_32x32.first_person":
				field "geometry": "Geometry.animated_32x32"
				field "materials": material dict: material "*": "Material.animated"
				field "part_visibility":
					part visibility dict: part visibility "*": false
					part visibility dict: part visibility "rightArm": "query.get_equipped_item_name(0, 1) == '' || query.get_equipped_item_name(0, 1) == 'map'"
					part visibility dict: part visibility "rightSleeve": "query.get_equipped_item_name(0, 1) == '' || query.get_equipped_item_name(0, 1) == 'map'"
					part visibility dict: part visibility "leftArm": "(query.get_equipped_item_name(0, 1) == 'map' && query.get_equipped_item_name('off_hand') != 'shield') || (query.get_equipped_item_name('off_hand') == 'map' && !query.item_is_charged) || (!query.item_is_charged && (variable.item_use_normalized > 0 && variable.item_use_normalized < 1.0))"
					part visibility dict: part visibility "leftSleeve": "(query.get_equipped_item_name(0, 1) == 'map' && query.get_equipped_item_name('off_hand') != 'shield') || (query.get_equipped_item_name('off_hand') == 'map' && !query.item_is_charged) || (!query.item_is_charged && (variable.item_use_normalized > 0 && variable.item_use_normalized < 1.0))"
				field "rebuild_animation_matrices": true
				field "textures": texture: "Texture.animated_32x32"
				field "uv_anim":
					field "offset":
						expression: 0.0
						expression: "Math.mod(Math.floor(query.life_time * 7),variable.animation_frames_32x32)/variable.animation_frames_32x32"
					field "scale": [1.0, 1.0]
			render controller "controller.render.persona_animated_32x32.third_person":
				field "color":
					channel "a": "0.3f"
					channel "b": "1.0f"
					channel "g": "1.0f"
					channel "r": "1.0f"
				field "geometry": "Geometry.animated_32x32"
				field "materials": material dict: material "*": "query.is_spectator ? Material.spectator : Material.animated"
				field "part_visibility":
					part visibility dict: part visibility "*": "!query.is_spectator"
					part visibility dict: part visibility "head": true
					part visibility dict: part visibility "hat": true
					part visibility dict: part visibility "helmet": "variable.helmet_layer_visible"
					part visibility dict: part visibility "leftLegging": "variable.leg_layer_visible && !query.is_spectator"
					part visibility dict: part visibility "rightLegging": "variable.leg_layer_visible && !query.is_spectator"
					part visibility dict: part visibility "leftBoot": "variable.boot_layer_visible && !query.is_spectator"
					part visibility dict: part visibility "rightBoot": "variable.boot_layer_visible && !query.is_spectator"
					part visibility dict: part visibility "leftSock": "variable.boot_layer_visible && variable.leg_layer_visible && !query.is_spectator"
					part visibility dict: part visibility "rightSock": "variable.boot_layer_visible && variable.leg_layer_visible && !query.is_spectator"
					part visibility dict: part visibility "bodyArmor": "variable.chest_layer_visible && !query.has_cape && !query.is_spectator"
					part visibility dict: part visibility "leftArmArmor": "variable.chest_layer_visible && !query.has_cape && !query.is_spectator"
					part visibility dict: part visibility "rightArmArmor": "variable.chest_layer_visible && !query.has_cape && !query.is_spectator"
					part visibility dict: part visibility "belt": "variable.chest_layer_visible && variable.leg_layer_visible && !query.is_spectator"
					part visibility dict: part visibility "cape": "query.has_cape && !query.is_spectator"
				field "rebuild_animation_matrices": true
				field "textures": texture: "Texture.animated_32x32"
				field "uv_anim":
					field "offset":
						expression: 0.0
						expression: "Math.mod(Math.floor(query.life_time * 7),variable.animation_frames_32x32)/variable.animation_frames_32x32"
					field "scale": [1.0, 1.0]
			render controller "controller.render.persona_animated_face.first_person":
				field "geometry": "Geometry.animated_face"
				field "materials": material dict: material "*": "Material.animated"
				field "part_visibility":
					part visibility dict: part visibility "*": false
					part visibility dict: part visibility "rightArm": "query.get_equipped_item_name(0, 1) == '' || query.get_equipped_item_name(0, 1) == 'map'"
					part visibility dict: part visibility "rightSleeve": "query.get_equipped_item_name(0, 1) == '' || query.get_equipped_item_name(0, 1) == 'map'"
					part visibility dict: part visibility "leftArm": "(query.get_equipped_item_name(0, 1) == 'map' && query.get_equipped_item_name('off_hand') != 'shield') || (query.get_equipped_item_name('off_hand') == 'map' && !query.item_is_charged) || (!query.item_is_charged && (variable.item_use_normalized > 0 && variable.item_use_normalized < 1.0))"
					part visibility dict: part visibility "leftSleeve": "(query.get_equipped_item_name(0, 1) == 'map' && query.get_equipped_item_name('off_hand') != 'shield') || (query.get_equipped_item_name('off_hand') == 'map' && !query.item_is_charged) || (!query.item_is_charged && (variable.item_use_normalized > 0 && variable.item_use_normalized < 1.0))"
				field "rebuild_animation_matrices": true
				field "textures": texture: "Texture.animated_face"
				field "uv_anim":
					field "offset":
						expression: 0.0
						expression: "variable.use_blinking_animation ? variable.is_blinking * 0.5 : Math.mod(Math.floor(query.life_time * 7),variable.animation_frames_face)/variable.animation_frames_face"
					field "scale": [1.0, 1.0]
			render controller "controller.render.persona_animated_face.third_person":
				field "color":
					channel "a": "0.3f"
					channel "b": "1.0f"
					channel "g": "1.0f"
					channel "r": "1.0f"
				field "geometry": "Geometry.animated_face"
				field "materials": material dict: material "*": "query.is_spectator ? Material.spectator : Material.animated"
				field "part_visibility":
					part visibility dict: part visibility "*": "!query.is_spectator"
					part visibility dict: part visibility "head": true
					part visibility dict: part visibility "hat": true
					part visibility dict: part visibility "helmet": "variable.helmet_layer_visible"
					part visibility dict: part visibility "leftLegging": "variable.leg_layer_visible && !query.is_spectator"
					part visibility dict: part visibility "rightLegging": "variable.leg_layer_visible && !query.is_spectator"
					part visibility dict: part visibility "leftBoot": "variable.boot_layer_visible && !query.is_spectator"
					part visibility dict: part visibility "rightBoot": "variable.boot_layer_visible && !query.is_spectator"
					part visibility dict: part visibility "leftSock": "variable.boot_layer_visible && variable.leg_layer_visible && !query.is_spectator"
					part visibility dict: part visibility "rightSock": "variable.boot_layer_visible && variable.leg_layer_visible && !query.is_spectator"
					part visibility dict: part visibility "bodyArmor": "variable.chest_layer_visible && !query.has_cape && !query.is_spectator"
					part visibility dict: part visibility "leftArmArmor": "variable.chest_layer_visible && !query.has_cape && !query.is_spectator"
					part visibility dict: part visibility "rightArmArmor": "variable.chest_layer_visible && !query.has_cape && !query.is_spectator"
					part visibility dict: part visibility "belt": "variable.chest_layer_visible && variable.leg_layer_visible && !query.is_spectator"
					part visibility dict: part visibility "cape": "query.has_cape && !query.is_spectator"
				field "rebuild_animation_matrices": true
				field "textures": texture: "Texture.animated_face"
				field "uv_anim":
					field "offset":
						expression: 0.0
						expression: "variable.use_blinking_animation ? variable.is_blinking * 0.5 : Math.mod(Math.floor(query.life_time * 7),variable.animation_frames_face)/variable.animation_frames_face"
					field "scale": [1.0, 1.0]
			render controller "controller.render.player.map.persona":
				field "arrays":
					field "geometries":
						array "Array.geos":
							array item: "Geometry.default"
							array item: "Geometry.animated_face"
				field "geometry": "Array.geos[query.is_persona_or_premium_skin]"
				field "materials": material dict: material "*": "Material.animated"
				field "part_visibility":
					part visibility dict: part visibility "*": false
					part visibility dict: part visibility "head": true
					part visibility dict: part visibility "hat": true
					part visibility dict: part visibility "helmet": true
				field "textures": texture: "Texture.animated_face"
				field "uv_anim":
					field "offset":
						expression: 0.0
						expression: "variable.is_blinking * 0.5"
					field "scale": [1.0, 1.0]
		field "defined_in": resource pack: "experimental_spectator"
Changed file "player.render_controllers":
	Changed resource pack "experimental":
		Changed field "render_controllers":
			Changed render controller "controller.render.player.third_person_spectator":
				Changed field "part_visibility":
					Total part visibility dict: 4 (+2, -0)
					Added part visibility dict part visibility "hat": true.
					Added part visibility dict part visibility "helmet": "variable.helmet_layer_visible".
Changed file "wolf.render_controllers":
	Changed resource pack "core":
		Changed field "defined_in":
			Total resource pack: 2 (+1, -0)
			Added resource pack "vanilla_1.19.20".
		Changed field "render_controllers":
			Changed render controller "controller.render.wolf":
				Changed field "textures":
					Total texture: 1 (+1, -1)
					Removed texture "query.is_angry ? Texture.angry : (query.has_owner ? Texture.tame : Texture.default)".
					Added texture "query.is_angry ? Texture.angry : (query.is_tamed ? Texture.tame : Texture.default)".