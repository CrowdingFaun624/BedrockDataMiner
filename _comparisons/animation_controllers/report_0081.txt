Difference of "animation_controllers" between "1.20.0.20" (beta of "1.20.0") and "1.20.0.21" (beta of "1.20.0").

Changed file "camel.animation_controllers":
	Moved resource pack "experimental" to "core".
	Changed resource pack "core":
		Changed field "defined_in":
			Total resource pack: 1 (+1, -1)
			Removed resource pack "experimental_next_major_update".
			Added resource pack "vanilla_1.20.0".
Changed file "player.animation_controllers":
	Total resource pack: 1 (+0, -1)
	Changed resource pack "core":
		Changed field "defined_in":
			Total resource pack: 10 (+1, -0)
			Added resource pack "vanilla_1.20.0".
		Changed field "animation_controllers":
			Changed animation controller "controller.animation.player.root":
				Changed field "states":
					Changed state "third_person":
						Changed field "animations":
							Total animation dict: 27 (+4, -2)
							Removed animation dict animation "bob": "!variable.is_holding_spyglass && !variable.is_tooting_goat_horn".
							Removed animation dict animation "use_item_progress": "( variable.use_item_interval_progress > 0.0 ) || ( variable.use_item_startup_progress > 0.0 ) && !variable.is_brandishing_spear && !variable.is_holding_spyglass && !variable.is_tooting_goat_horn && !query.is_item_name_any('slot.weapon.mainhand', 'minecraft:bow')".
							Added animation dict animation "bob": "!variable.is_holding_spyglass && !variable.is_tooting_goat_horn && !variable.is_using_brush".
							Added animation dict animation "use_item_progress": "( variable.use_item_interval_progress > 0.0 ) || ( variable.use_item_startup_progress > 0.0 ) && !variable.is_brandishing_spear && !variable.is_holding_spyglass && !variable.is_tooting_goat_horn && !variable.is_using_brush && !query.is_item_name_any('slot.weapon.mainhand', 'minecraft:bow')".
							Added animation dict animation "holding_brush": "query.get_equipped_item_name == 'brush'".
							Added animation dict animation "brushing": "variable.is_using_brush".
	Removed resource pack "experimental":
		field "defined_in": resource pack: "experimental_next_major_update"
		field "format_version": "1.10.0"
		field "animation_controllers":
			animation controller "controller.animation.player.crossbow":
				field "initial_state": "default"
				field "states":
					state "charge":
						field "animations": animation dict: "third_person_crossbow_equipped"
						field "transitions":
							transition list: transition "default": "query.get_equipped_item_name != 'crossbow' || (query.item_remaining_use_duration <= 0.0 && !query.item_is_charged)"
							transition list: transition "hold": "query.item_is_charged"
					state "default":
						field "transitions":
							transition list: transition "hold": "query.item_is_charged"
							transition list: transition "charge": "query.item_remaining_use_duration > 0.0"
					state "hold":
						field "animations": animation dict: "crossbow_hold"
						field "transitions":
							transition list: transition "default": "query.get_equipped_item_name != 'crossbow' || (query.item_remaining_use_duration <= 0.0 && !query.item_is_charged)"
							transition list: transition "charge": "query.item_remaining_use_duration > 0.0"
			animation controller "controller.animation.player.first_person_attack":
				field "initial_state": "default"
				field "states":
					state "default":
						field "animations": animation dict: "first_person_attack_rotation"
						field "transitions": transition list: transition "vr_attack": "variable.is_using_vr"
					state "vr_attack":
						field "animations": animation dict: "first_person_vr_attack_rotation"
						field "transitions": transition list: transition "default": "!variable.is_using_vr"
			animation controller "controller.animation.player.first_person_map":
				field "initial_state": "default"
				field "states":
					state "default":
						field "transitions":
							transition list: transition "one_hand": "query.get_equipped_item_name('off_hand') == 'filled_map' || query.get_equipped_item_name('off_hand') == 'shield'"
							transition list: transition "two_hand": "query.get_equipped_item_name('off_hand') != 'filled_map' && query.get_equipped_item_name('off_hand') != 'shield'"
					state "one_hand":
						field "animations":
							animation dict: animation "first_person_map_hold_main_hand": "query.get_equipped_item_name(0, 1) == 'filled_map'"
							animation dict: animation "first_person_map_hold_off_hand": "query.get_equipped_item_name('off_hand') == 'filled_map' && (query.get_equipped_item_name == 'bow' ? !(variable.item_use_normalized > 0 && variable.item_use_normalized < 1.0) : 1.0)"
						field "transitions":
							transition list: transition "default": "query.get_equipped_item_name(0, 1) != 'filled_map' && query.get_equipped_item_name('off_hand') != 'filled_map'"
							transition list: transition "two_hand": "query.get_equipped_item_name('off_hand') != 'filled_map' && query.get_equipped_item_name('off_hand') != 'shield'"
					state "two_hand":
						field "animations":
							animation dict: "first_person_map_hold"
							animation dict: "first_person_map_hold_attack"
						field "transitions":
							transition list: transition "default": "query.get_equipped_item_name(0, 1) != 'filled_map' && query.get_equipped_item_name('off_hand') != 'filled_map'"
							transition list: transition "one_hand": "query.get_equipped_item_name('off_hand') == 'filled_map' || query.get_equipped_item_name('off_hand') == 'shield'"
			animation controller "controller.animation.player.root":
				field "initial_state": "first_person"
				field "states":
					state "first_person":
						field "animations":
							animation dict: animation "first_person_swap_item": "!query.blocking"
							animation dict: animation "first_person_shield_block": "query.blocking"
							animation dict: animation "first_person_attack_controller": "variable.attack_time > 0.0f && query.get_equipped_item_name != 'filled_map'"
							animation dict: "first_person_base_pose"
							animation dict: animation "first_person_empty_hand": "query.get_equipped_item_name(0, 1) != 'filled_map'"
							animation dict: animation "first_person_walk": "variable.bob_animation"
							animation dict: animation "first_person_map_controller": "(query.get_equipped_item_name(0, 1) == 'filled_map' || query.get_equipped_item_name('off_hand') == 'filled_map')"
							animation dict: animation "first_person_crossbow_equipped": "query.get_equipped_item_name == 'crossbow' && (variable.item_use_normalized > 0 && variable.item_use_normalized < 1.0)"
							animation dict: animation "first_person_breathing_bob": "variable.attack_time <= 0.0"
						field "transitions":
							transition list: transition "paperdoll": "variable.is_paperdoll"
							transition list: transition "map_player": "variable.map_face_icon"
							transition list: transition "third_person": "!variable.is_first_person"
					state "map_player":
						field "transitions":
							transition list: transition "paperdoll": "variable.is_paperdoll"
							transition list: transition "first_person": "variable.is_first_person"
							transition list: transition "third_person": "!variable.map_face_icon && !variable.is_first_person"
					state "paperdoll":
						field "animations":
							animation dict: "humanoid_base_pose"
							animation dict: "look_at_target_ui"
							animation dict: "move.arms"
							animation dict: "move.legs"
							animation dict: "cape"
						field "transitions":
							transition list: transition "first_person": "!variable.is_paperdoll && variable.is_first_person"
							transition list: transition "map_player": "variable.map_face_icon"
							transition list: transition "third_person": "!variable.is_paperdoll && !variable.is_first_person"
					state "third_person":
						field "animations":
							animation dict: "humanoid_base_pose"
							animation dict: animation "look_at_target": "!query.is_sleeping && !query.is_emoting"
							animation dict: "move.arms"
							animation dict: "move.legs"
							animation dict: "cape"
							animation dict: animation "riding.arms": "query.is_riding"
							animation dict: animation "riding.legs": "query.is_riding"
							animation dict: "holding"
							animation dict: animation "brandish_spear": "variable.is_brandishing_spear"
							animation dict: animation "holding_spyglass": "variable.is_holding_spyglass"
							animation dict: animation "charging": "query.is_charging"
							animation dict: animation "sneaking": "query.is_sneaking && !query.is_sleeping"
							animation dict: animation "bob": "!variable.is_holding_spyglass && !variable.is_tooting_goat_horn && !variable.is_using_brush"
							animation dict: animation "damage_nearby_mobs": "variable.damage_nearby_mobs"
							animation dict: animation "swimming": "variable.swim_amount > 0.0"
							animation dict: animation "swimming.legs": "variable.swim_amount > 0.0"
							animation dict: animation "use_item_progress": "( variable.use_item_interval_progress > 0.0 ) || ( variable.use_item_startup_progress > 0.0 ) && !variable.is_brandishing_spear && !variable.is_holding_spyglass && !variable.is_tooting_goat_horn && !variable.is_using_brush && !query.is_item_name_any('slot.weapon.mainhand', 'minecraft:bow')"
							animation dict: animation "sleeping": "query.is_sleeping && query.is_alive"
							animation dict: animation "attack.positions": "variable.attack_time >= 0.0"
							animation dict: animation "attack.rotations": "variable.attack_time >= 0.0"
							animation dict: animation "shield_block_main_hand": "query.blocking && query.get_equipped_item_name('off_hand') != 'shield' && query.get_equipped_item_name == 'shield'"
							animation dict: animation "shield_block_off_hand": "query.blocking && query.get_equipped_item_name('off_hand') == 'shield'"
							animation dict: animation "crossbow_controller": "query.get_equipped_item_name == 'crossbow'"
							animation dict: animation "third_person_bow_equipped": "query.get_equipped_item_name == 'bow' && (variable.item_use_normalized > 0 && variable.item_use_normalized < 1.0)"
							animation dict: animation "tooting_goat_horn": "variable.is_tooting_goat_horn"
							animation dict: animation "holding_brush": "query.get_equipped_item_name == 'brush'"
							animation dict: animation "brushing": "variable.is_using_brush"
						field "transitions":
							transition list: transition "paperdoll": "variable.is_paperdoll"
							transition list: transition "first_person": "variable.is_first_person"
							transition list: transition "map_player": "variable.map_face_icon"