/* Converted by CmpMigrator 0.1.9 */
settings {
    aliases {
        misc = @structures/misc/misc/
        temp = @structures/misc/template/
    }
}
pool_alias_list inherit temp/Set {
    $ field = "pool alias"
    value_types = #dict
    value_structure = @pool_alias
}
pool_alias :Switch {
    switch_function = :Function {
        function = %get_key
        arguments = {"key" = "type"}
    }
    substructures = {
        "minecraft:direct" = :Key {types = #dict, structure = @pool_alias.direct}
        "minecraft:random" = :Key {types = #dict, structure = @pool_alias.random}
        "minecraft:random_group" = :Key {types = #dict, structure = @pool_alias.random_group}
    }
}
pool_alias:all {
    "type" = :Key {types = #str, delegate_arguments = {"always_print" = true}}
}
pool_alias.direct inherit temp/SortedKeymap {
    keys = @pool_alias:all + {
        "alias" = :Key {types = #str}
        "target" = :Key {types = #str}
    }
}
pool_alias.random inherit temp/SortedKeymap {
    keys = @pool_alias:all + {
        "alias" = :Key {types = #str}
        "targets" = :Key {types = #list, structure = @weighted_list{$data_types=#str, $data_structure=@misc/string, $field="target"}}
    }
}
pool_alias.random_group inherit temp/SortedKeymap {
    keys = @pool_alias:all + {
        "groups" = :Key {types = #list, structure = @weighted_list{$data_types=#list, $data_structure=@pool_alias_list, $field="group"}}
    }
}
weighted_list abstract inherit temp/Set {
    $ (type | list) data_types
    $ (:Structure) data_structure
    value_types = #dict
    value_structure = @weighted_list:item {$data_types=data_types, $data_structure=data_structure}
}
weighted_list:item abstract inherit temp/SortedKeymap {
    $ (type | list) data_types
    $ (:Structure) data_structure
    keys = {
        "weight" = :Key {types = #int}
        "data" = :Key {types = data_types, structure = data_structure, delegate_arguments = {"always_print" = true}}
    }
}