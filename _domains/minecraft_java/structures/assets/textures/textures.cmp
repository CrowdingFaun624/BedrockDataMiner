/* Converted by CmpMigrator 0.1.9 */
settings {
    aliases {
        s = @minecraft_common!serializers/
        t = @structure_tags/
        temp = @structures/misc/template/
    }
}
base inherit temp/base_multiple_pack_files {
    $ name = "textures"
    $ serializer = @s/media_serializer
    $ pack_type = "resource pack"
    $ structure = @texture_data
}
base_single inherit temp/base_single_file {
    $ name = "textures_single"
    $ serializer = @s/media_serializer
    $ structure = @texture_data
}
texture_data inherit temp/SortedKeymap {
    keys = {
        "sha1_hash" = :Key {types = #str, similarity_weight = 256, delegate_arguments = {"always_print" = true}, required = true, tags = [@t/file_hash_tag]}
        "metadata" = :Key {types = #file, structure = @metadata_file, similarity_weight = 0}
        "unknown" = :Key {types = #file, structure = @cache_dummy_file_type, similarity_weight = 0}
        "CUR" = :Key {types = #file, structure = @cache_dummy_file_type, similarity_weight = 0}
        "GIF" = :Key {types = #file, structure = @cache_dummy_file_type, similarity_weight = 0}
        "HDR" = :Key {types = #file, structure = @cache_dummy_file_type, similarity_weight = 0}
        "JPEG" = :Key {types = #file, structure = @cache_dummy_file_type, similarity_weight = 0}
        "M4A" = :Key {types = #file, structure = @cache_dummy_file_type, similarity_weight = 0}
        "MP3" = :Key {types = #file, structure = @cache_dummy_file_type, similarity_weight = 0}
        "MP4" = :Key {types = #file, structure = @cache_dummy_file_type, similarity_weight = 0}
        "OTF" = :Key {types = #file, structure = @cache_dummy_file_type, similarity_weight = 0}
        "PNG" = :Key {types = #file, structure = @cache_dummy_file_type, similarity_weight = 0}
        "PSD" = :Key {types = #file, structure = @cache_dummy_file_type, similarity_weight = 0}
        "SVG" = :Key {types = #file, structure = @cache_dummy_file_type, similarity_weight = 0}
        "TTC" = :Key {types = #file, structure = @cache_dummy_file_type, similarity_weight = 0}
        "TTF" = :Key {types = #file, structure = @cache_dummy_file_type, similarity_weight = 0}
        "WEBM" = :Key {types = #file, structure = @cache_dummy_file_type, similarity_weight = 0}
    }
}
metadata_file :File {
    serializer = @s/json
    outer_types = #file
    inner_types = #dict
    structure = @metadata_dict
}
metadata_dict inherit temp/SortedKeymap {
    keys = {
        "About" = :Key {types = #str}
        "AlphaChannelsNames" = :Key {types = #str}
        "AnimationIterations" = :Key {types = #str}
        "Api" = :Key {types = #float}
        "APP14Flags0" = :Key {types = #str}
        "APP14Flags1" = :Key {types = #str}
        "AppleDataOffsets" = :Key {types = #str}
        "ApplicationRecordVersion" = :Key {types = #int}
        "ArtworkOrObject" = :Key {types = #str}
        "AudioBitrate" = :Key {types = #str}
        "AudioBitsPerSample" = :Key {types = #int}
        "AudioChannels" = :Key {types = #int}
        "AudioFormat" = :Key {types = #str}
        "AudioLayer" = :Key {types = #int}
        "AudioSampleRate" = :Key {types = #int}
        "AvgBitrate" = :Key {types = #str}
        "BackgroundColor" = :Key {types = [#int, #str]}
        "Balance" = :Key {types = #int}
        "BitDepth" = :Key {types = #int}
        "BitsPerPixel" = :Key {types = #int}
        "BitsPerSample" = :Key {types = [#int, #str]}
        "BlueMatrixColumn" = :Key {types = #str}
        "BlueTRC" = :Key {types = #str}
        "BlueX" = :Key {types = #float}
        "BlueY" = :Key {types = #float}
        "Cdec" = :Key {types = #str}
        "ChannelMode" = :Key {types = #str}
        "ChapterList" = :Key {types = #list, structure = @metadata.chapter_list}
        "ChromaticAdaptation" = :Key {types = #str}
        "ChromaticityChannel1" = :Key {types = #str}
        "ChromaticityChannel2" = :Key {types = #str}
        "ChromaticityChannel3" = :Key {types = #str}
        "ChromaticityChannels" = :Key {types = #int}
        "ChromaticityColorant" = :Key {types = #str}
        "CMMFlags" = :Key {types = #str}
        "CodecID" = :Key {types = #str}
        "CodedCharacterSet" = :Key {types = #str}
        "ColorComponents" = :Key {types = #int}
        "ColorMode" = :Key {types = #str}
        "ColorResolutionDepth" = :Key {types = #int}
        "ColorSpace" = :Key {types = #str}
        "ColorSpaceData" = :Key {types = #str}
        "ColorTransform" = :Key {types = #str}
        "ColorType" = :Key {types = #str}
        "Comment" = :Key {types = #str}
        "CompatibleBrands" = :Key {types = [#str, #list], structure = @metadata.compatible_brands}
        "Compression" = :Key {types = #str}
        "ConnectionSpaceIlluminant" = :Key {types = #str}
        "Copyright" = :Key {types = #str}
        "Copyright-en-US" = :Key {types = [#list, #str], structure = @lines}
        "CopyrightFlag" = :Key {types = #bool}
        "CopyrightOwner" = :Key {types = #str}
        "CreateDate" = :Key {types = #str}
        "CreationTime" = :Key {types = #str}
        "CreatorTool" = :Key {types = #str}
        "CurrentIPTCDigest" = :Key {types = #str}
        "CurrentTime" = :Key {types = #str}
        "Datecreate" = :Key {types = #str}
        "DateCreated" = :Key {types = #str}
        "Datemodify" = :Key {types = #str}
        "DateTimeCreated" = :Key {types = #str}
        "DateTimeOriginal" = :Key {types = #str}
        "DCTEncodeVersion" = :Key {types = #int}
        "DerivedFromDocumentID" = :Key {types = #str}
        "DerivedFromInstanceID" = :Key {types = #str}
        "DerivedFromOriginalDocumentID" = :Key {types = #str}
        "Description" = :Key {types = #str}
        "Description-en-US" = :Key {types = [#list, #str], structure = @lines}
        "Designer" = :Key {types = #str}
        "Designer-en-US" = :Key {types = #str}
        "DesignerURL" = :Key {types = #str}
        "DesignerURL-en-US" = :Key {types = #str}
        "DeviceAttributes" = :Key {types = #str}
        "DeviceManufacturer" = :Key {types = #str}
        "DeviceMfgDesc" = :Key {types = #str}
        "DeviceModel" = :Key {types = #str}
        "DeviceModelDesc" = :Key {types = #str}
        "DisplayedUnitsX" = :Key {types = #str}
        "DisplayedUnitsY" = :Key {types = #str}
        "DisplayHeight" = :Key {types = #int}
        "DisplayWidth" = :Key {types = #int}
        "DocType" = :Key {types = #str}
        "DocTypeReadVersion" = :Key {types = #int}
        "DocTypeVersion" = :Key {types = #int}
        "DocumentAncestors" = :Key {types = [#list, #str], structure = @metadata.document_ancestors}
        "DocumentID" = :Key {types = #str}
        "Duration" = :Key {types = #str}
        "EBMLReadVersion" = :Key {types = #int}
        "EBMLVersion" = :Key {types = #int}
        "Emphasis" = :Key {types = #str}
        "Encoder" = :Key {types = #str}
        "EncodingProcess" = :Key {types = #str}
        "Error" = :Key {types = #str}
        "ExifByteOrder" = :Key {types = #str}
        "ExifImageHeight" = :Key {types = #int}
        "ExifImageWidth" = :Key {types = #int}
        "EXIFOrientation" = :Key {types = #int}
        "ExifVersion" = :Key {types = #str}
        "Exposure" = :Key {types = #float}
        "FileSize" = :Key {types = #str}
        "FileTypeExtension" = :Key {types = #str}
        "Filter" = :Key {types = #str}
        "FontFamily" = :Key {types = #str}
        "FontFamily-en-US" = :Key {types = #str}
        "FontName" = :Key {types = #str}
        "FontName-en-US" = :Key {types = #str}
        "FontSubfamily" = :Key {types = #str}
        "FontSubfamily-ca" = :Key {types = #str}
        "FontSubfamily-cs" = :Key {types = #str}
        "FontSubfamily-da" = :Key {types = #str}
        "FontSubfamily-de-DE" = :Key {types = #str}
        "FontSubfamily-el" = :Key {types = #str}
        "FontSubfamily-en-US" = :Key {types = #str}
        "FontSubfamily-es-ES" = :Key {types = #str}
        "FontSubfamily-es-MX" = :Key {types = #str}
        "FontSubfamily-eu" = :Key {types = #str}
        "FontSubfamily-fi" = :Key {types = #str}
        "FontSubfamily-fr-CA" = :Key {types = #str}
        "FontSubfamily-fr-FR" = :Key {types = #str}
        "FontSubfamily-hu" = :Key {types = #str}
        "FontSubfamily-it-IT" = :Key {types = #str}
        "FontSubfamily-nl-NL" = :Key {types = #str}
        "FontSubfamily-no-NO" = :Key {types = #str}
        "FontSubfamily-pl" = :Key {types = #str}
        "FontSubfamily-pt-BR" = :Key {types = #str}
        "FontSubfamily-pt-PT" = :Key {types = #str}
        "FontSubfamily-ru" = :Key {types = #str}
        "FontSubfamily-sk" = :Key {types = #str}
        "FontSubfamily-sl" = :Key {types = #str}
        "FontSubfamily-sv-SE" = :Key {types = #str}
        "FontSubfamily-tr" = :Key {types = #str}
        "FontSubfamily-vi" = :Key {types = #str}
        "FontSubfamilyID" = :Key {types = #str}
        "FontSubfamilyID-en-US" = :Key {types = #str}
        "Format" = :Key {types = #str}
        "FrameCount" = :Key {types = #int}
        "Gamma" = :Key {types = #float}
        "GIFVersion" = :Key {types = #str}
        "GlobalAltitude" = :Key {types = #int}
        "GlobalAngle" = :Key {types = #int}
        "GrayTRC" = :Key {types = #str}
        "GreenMatrixColumn" = :Key {types = #str}
        "GreenTRC" = :Key {types = #str}
        "GreenX" = :Key {types = #float}
        "GreenY" = :Key {types = #float}
        "HandlerDescription" = :Key {types = #str}
        "HandlerName" = :Key {types = #str}
        "HandlerType" = :Key {types = #str}
        "HandlerVendorID" = :Key {types = #str}
        "HasColorMap" = :Key {types = #str}
        "HasExtendedXMP" = :Key {types = #str}
        "HasRealMergedData" = :Key {types = #str}
        "History" = :Key {types = #str}
        "HistoryAction" = :Key {types = [#str, #list], structure = @metadata.history_action}
        "HistoryChanged" = :Key {types = [#str, #list], structure = @metadata.history_changed}
        "HistoryInstanceID" = :Key {types = [#list, #str], structure = @metadata.history_instance_id}
        "HistoryParameters" = :Key {types = [#list, #str], structure = @metadata.history_parameters}
        "HistorySoftwareAgent" = :Key {types = [#list, #str], structure = @metadata.history_software_agent}
        "HistoryWhen" = :Key {types = [#list, #str], structure = @metadata.history_changed}
        "ICCProfileName" = :Key {types = #str}
        "ImageCount" = :Key {types = #int}
        "ImageCreator" = :Key {types = #str}
        "ImageHeight" = :Key {types = #int}
        "ImageOffset" = :Key {types = #str}
        "ImageSize" = :Key {types = #str}
        "ImageSupplier" = :Key {types = #str}
        "ImageWidth" = :Key {types = #int}
        "IngredientsFilePath" = :Key {types = [#str, #list], structure = @metadata.ingredients_file_path}
        "IngredientsLinkForm" = :Key {types = [#str, #list], structure = @metadata.ingredients_link_form}
        "InstanceID" = :Key {types = #str}
        "IntensityStereo" = :Key {types = #str}
        "Interlace" = :Key {types = #str}
        "InteropIndex" = :Key {types = #str}
        "InteropVersion" = :Key {types = #str}
        "IPTCDigest" = :Key {types = #str}
        "iTunSMPB" = :Key {types = #str}
        "JFIFVersion" = :Key {types = #float}
        "LayerBlendModes" = :Key {types = #str}
        "LayerColors" = :Key {types = #str}
        "LayerCount" = :Key {types = #int}
        "LayerModifyDates" = :Key {types = #str}
        "LayerNames" = :Key {types = #str}
        "LayerOpacities" = :Key {types = #str}
        "LayerRectangles" = :Key {types = [#str]}
        "LayerUnicodeNames" = :Key {types = #str}
        "LayerVisible" = :Key {types = #str}
        "LegacyIPTCDigest" = :Key {types = #str}
        "License" = :Key {types = #str}
        "License-en-US" = :Key {types = #str}
        "LicenseInfoURL" = :Key {types = #str}
        "LicenseInfoURL-en-US" = :Key {types = #str}
        "Licensor" = :Key {types = #str}
        "LocationCreated" = :Key {types = #str}
        "LocationShown" = :Key {types = #str}
        "Luminance" = :Key {types = #str}
        "MajorBrand" = :Key {types = #str}
        "MakeAndModel" = :Key {types = #str}
        "Manufacturer" = :Key {types = #str}
        "Manufacturer-en-US" = :Key {types = #str}
        "MatrixStructure" = :Key {types = #str}
        "MeasurementBacking" = :Key {types = #str}
        "MeasurementFlare" = :Key {types = #str}
        "MeasurementGeometry" = :Key {types = #str}
        "MeasurementIlluminant" = :Key {types = #str}
        "MeasurementObserver" = :Key {types = #str}
        "MediaBlackPoint" = :Key {types = #str}
        "MediaCreateDate" = :Key {types = #str}
        "MediaDataOffset" = :Key {types = #int}
        "MediaDataSize" = :Key {types = #int}
        "MediaDuration" = :Key {types = #str}
        "MediaHeaderVersion" = :Key {types = #int}
        "MediaLanguageCode" = :Key {types = #str}
        "MediaModifyDate" = :Key {types = #str}
        "MediaTimeScale" = :Key {types = #int}
        "MediaWhitePoint" = :Key {types = #str}
        "Megapixels" = :Key {types = #float}
        "MetadataDate" = :Key {types = #str}
        "MIMEType" = :Key {types = #str}
        "MinorVersion" = :Key {types = [#int, #str]}
        "ModifyDate" = :Key {types = #str}
        "MovieHeaderVersion" = :Key {types = #int}
        "MPEGAudioVersion" = :Key {types = [#float, #int]}
        "MSStereo" = :Key {types = #str}
        "MuxingApp" = :Key {types = #str}
        "NameTableVersion" = :Key {types = #str}
        "NameTableVersion-en-US" = :Key {types = #str}
        "NativeDigest" = :Key {types = #str}
        "NativeDisplayInfo" = :Key {types = #str}
        "NextTrackID" = :Key {types = #int}
        "NumChannels" = :Key {types = #int}
        "NumFonts" = :Key {types = #int}
        "NumSlices" = :Key {types = #int}
        "Orientation" = :Key {types = #str}
        "OriginalDocumentID" = :Key {types = #str}
        "OriginalMedia" = :Key {types = #bool}
        "Palette" = :Key {types = #str}
        "PhotometricInterpretation" = :Key {types = #str}
        "PhotoshopFormat" = :Key {types = #str}
        "PhotoshopQuality" = :Key {types = #int}
        "PixelAspectRatio" = :Key {types = #int}
        "PixelsPerUnitX" = :Key {types = #int}
        "PixelsPerUnitY" = :Key {types = #int}
        "PixelUnits" = :Key {types = [#str, #int]}
        "Platform" = :Key {types = #str}
        "PosterTime" = :Key {types = #str}
        "PostScriptFontName" = :Key {types = #str}
        "PostScriptFontName-en-US" = :Key {types = #str}
        "PreferredFamily" = :Key {types = #str}
        "PreferredFamily-en-US" = :Key {types = #str}
        "PreferredRate" = :Key {types = #int}
        "PreferredSubfamily" = :Key {types = #str}
        "PreferredSubfamily-en-US" = :Key {types = #str}
        "PreferredVolume" = :Key {types = #str}
        "PreviewDuration" = :Key {types = #str}
        "PreviewTime" = :Key {types = #str}
        "PrimaryPlatform" = :Key {types = #str}
        "PrintPosition" = :Key {types = #str}
        "PrintScale" = :Key {types = #int}
        "PrintStyle" = :Key {types = #str}
        "ProfileClass" = :Key {types = #str}
        "ProfileCMMType" = :Key {types = #str}
        "ProfileConnectionSpace" = :Key {types = #str}
        "ProfileCopyright" = :Key {types = #str}
        "ProfileCreator" = :Key {types = #str}
        "ProfileDateTime" = :Key {types = #str}
        "ProfileDescription" = :Key {types = #str}
        "ProfileDescriptionML" = :Key {types = #str}
        "ProfileDescriptionML-ca-ES" = :Key {types = #str}
        "ProfileDescriptionML-cs-CZ" = :Key {types = #str}
        "ProfileDescriptionML-da-DK" = :Key {types = #str}
        "ProfileDescriptionML-de-DE" = :Key {types = #str}
        "ProfileDescriptionML-el-GR" = :Key {types = #str}
        "ProfileDescriptionML-es-ES" = :Key {types = #str}
        "ProfileDescriptionML-es-XL" = :Key {types = #str}
        "ProfileDescriptionML-fi-FI" = :Key {types = #str}
        "ProfileDescriptionML-fr-FR" = :Key {types = #str}
        "ProfileDescriptionML-it-IT" = :Key {types = #str}
        "ProfileDescriptionML-he-IL" = :Key {types = #str}
        "ProfileDescriptionML-hi-IN" = :Key {types = #str}
        "ProfileDescriptionML-hr-HR" = :Key {types = #str}
        "ProfileDescriptionML-hu-HU" = :Key {types = #str}
        "ProfileDescriptionML-ja-JP" = :Key {types = #str}
        "ProfileDescriptionML-ko-KR" = :Key {types = #str}
        "ProfileDescriptionML-nb-NO" = :Key {types = #str}
        "ProfileDescriptionML-nl-NL" = :Key {types = #str}
        "ProfileDescriptionML-pl-PL" = :Key {types = #str}
        "ProfileDescriptionML-pt-BR" = :Key {types = #str}
        "ProfileDescriptionML-pt-PT" = :Key {types = #str}
        "ProfileDescriptionML-ro-RO" = :Key {types = #str}
        "ProfileDescriptionML-ru-RU" = :Key {types = #str}
        "ProfileDescriptionML-sk-SK" = :Key {types = #str}
        "ProfileDescriptionML-sv-SE" = :Key {types = #str}
        "ProfileDescriptionML-th-TH" = :Key {types = #str}
        "ProfileDescriptionML-tr-TR" = :Key {types = #str}
        "ProfileDescriptionML-uk-UA" = :Key {types = #str}
        "ProfileDescriptionML-vi-VN" = :Key {types = #str}
        "ProfileDescriptionML-zh-CN" = :Key {types = #str}
        "ProfileDescriptionML-zh-TW" = :Key {types = #str}
        "ProfileFileSignature" = :Key {types = #str}
        "ProfileID" = :Key {types = [#int, #str]}
        "ProfileName" = :Key {types = #str}
        "ProfileVersion" = :Key {types = #str}
        "Quality" = :Key {types = #str}
        "ReaderName" = :Key {types = #str}
        "RedMatrixColumn" = :Key {types = #str}
        "RedTRC" = :Key {types = #str}
        "RedX" = :Key {types = #float}
        "RedY" = :Key {types = #float}
        "RegistryID" = :Key {types = #str}
        "RenderingIntent" = :Key {types = #str}
        "ResolutionUnit" = :Key {types = #str}
        "SampleRate" = :Key {types = #int}
        "SamplesPerPixel" = :Key {types = #int}
        "SampleText" = :Key {types = #str}
        "SampleText-en-US" = :Key {types = #str}
        "SelectionDuration" = :Key {types = #str}
        "SelectionTime" = :Key {types = #str}
        "Signature" = :Key {types = #str}
        "SignificantBits" = :Key {types = #str}
        "SlicesGroupName" = :Key {types = #str}
        "Software" = :Key {types = #str}
        "SRGBRendering" = :Key {types = #str}
        "SubfileType" = :Key {types = #str}
        "SVGVersion" = :Key {types = #float}
        "TagTrackUID" = :Key {types = #str}
        "Technology" = :Key {types = #str}
        "TextLayerName" = :Key {types = #list, structure = @metadata.text_layer_name}
        "TextLayerText" = :Key {types = #list, structure = @metadata.text_layer_text}
        "ThumbnailImage" = :Key {types = #str}
        "ThumbnailLength" = :Key {types = #int}
        "ThumbnailOffset" = :Key {types = #int}
        "TimecodeScale" = :Key {types = #str}
        "TimeCreated" = :Key {types = #str}
        "TimeScale" = :Key {types = #int}
        "TimeStamp" = :Key {types = #str}
        "Title" = :Key {types = #str}
        "TrackCreateDate" = :Key {types = #str}
        "TrackDuration" = :Key {types = #str}
        "TrackHeaderVersion" = :Key {types = #int}
        "TrackID" = :Key {types = #int}
        "TrackLanguage" = :Key {types = #str}
        "TrackLayer" = :Key {types = #int}
        "TrackModifyDate" = :Key {types = #str}
        "TrackNumber" = :Key {types = #int}
        "TrackType" = :Key {types = #str}
        "TrackUID" = :Key {types = #str}
        "TrackVolume" = :Key {types = #str}
        "Trademark" = :Key {types = #str}
        "Trademark-en-US" = :Key {types = [#list, #str], structure = @lines}
        "Transparency" = :Key {types = [#int, #str]}
        "TransparentColor" = :Key {types = #int}
        "URL_List" = :Key {types = #list, structure = @metadata.url_list}
        "VendorId" = :Key {types = #str}
        "VendorURL" = :Key {types = #str}
        "VendorURL-en-US" = :Key {types = #str}
        "Version" = :Key {types = #str}
        "VideoCardGamma" = :Key {types = #str}
        "VideoFrameRate" = :Key {types = [#int, #float]}
        "VideoScanType" = :Key {types = #str}
        "ViewBox" = :Key {types = #str}
        "ViewingCondDesc" = :Key {types = #str}
        "ViewingCondIlluminant" = :Key {types = #str}
        "ViewingCondIlluminantType" = :Key {types = #str}
        "ViewingCondSurround" = :Key {types = #str}
        "VirtualImageHeight" = :Key {types = #int}
        "VirtualImageWidth" = :Key {types = #int}
        "VirtualPageUnits" = :Key {types = #int}
        "Warning" = :Key {types = #str}
        "WhitePointX" = :Key {types = #float}
        "WhitePointY" = :Key {types = #float}
        "Writer" = :Key {types = #str}
        "WriterName" = :Key {types = #str}
        "WritingApp" = :Key {types = #str}
        "XMPToolkit" = :Key {types = #str}
        "XResolution" = :Key {types = [#int, #float]}
        "YCbCrSubSampling" = :Key {types = #str}
        "YResolution" = :Key {types = [#int, #float]}
    }
    delegate = :Delegate {
        delegate_class = %DefaultDelegate
        arguments = {"sort" = %sort_by_key}
    }
}
metadata.chapter_list inherit temp/Dict {
    key_weight = 0
    key_types = #int
    this_types = #list
    value_types = #str
    value_structure = null
    delegate = :Delegate {
        delegate_class = %DefaultDelegate
        arguments = {"field" = "chapter", "show_item_key" = false, "measure_length" = true}
    }
}
metadata.compatible_brands :Union {
    substructures = [
        :Key {types = #str},
        :Key {types = #list, structure = inherit temp/Dict {
            key_weight = 0
            key_types = #int
            this_types = #list
            value_types = #str
            value_structure = null
            delegate = :Delegate {
                delegate_class = %DefaultDelegate
                arguments = {"field" = "brand", "show_item_key" = false, "measure_length" = true}
            }
        }},
    ]
}
metadata.document_ancestors :Union {
    substructures = [
        :Key {types = #str},
        :Key {types = #list, structure = inherit temp/Dict {
            key_weight = 0
            key_types = #int
            this_types = #list
            value_types = [#str, #int]
            value_structure = null
            delegate = :Delegate {
                delegate_class = %DefaultDelegate
                arguments = {"field" = "ancestor", "show_item_key" = false, "measure_length" = true}
            }
        }},
    ]
}
metadata.history_action :Union {
    substructures = [
        :Key {types = #str},
        :Key {types = #list, structure = inherit temp/Dict {
            key_weight = 0
            key_types = #int
            this_types = #list
            value_types = #str
            value_structure = null
            delegate = :Delegate {
                delegate_class = %DefaultDelegate
                arguments = {"field" = "action", "show_item_key" = false, "measure_length" = true}
            }
        }},
    ]
}
metadata.history_changed :Union {
    substructures = [
        :Key {types = #str},
        :Key {types = #list, structure = inherit temp/Dict {
            allow_key_moves = false
            key_weight = 0
            key_types = #int
            this_types = #list
            value_types = #str
            value_structure = null
            delegate = :Delegate {
                delegate_class = %DefaultDelegate
                arguments = {"field" = "time", "measure_length" = true}
            }
        }},
    ]
}
metadata.history_instance_id :Union {
    substructures = [
        :Key {types = #str},
        :Key {types = #list, structure = inherit temp/Dict {
            key_weight = 0
            key_types = #int
            this_types = #list
            value_types = #str
            value_structure = null
            delegate = :Delegate {
                delegate_class = %DefaultDelegate
                arguments = {"field" = "instance ID", "show_item_key" = false, "measure_length" = true}
            }
        }},
    ]
}
metadata.history_parameters :Union {
    substructures = [
        :Key {types = #str},
        :Key {types = #list, structure = inherit temp/Dict {
            key_weight = 0
            key_types = #int
            this_types = #list
            value_types = #str
            value_structure = null
            delegate = :Delegate {
                delegate_class = %DefaultDelegate
                arguments = {"field" = "parameter", "show_item_key" = false, "measure_length" = true}
            }
        }},
    ]
}
metadata.history_software_agent :Union {
    substructures = [
        :Key {types = #str},
        :Key {types = #list, structure = inherit temp/Dict {
            key_weight = 0
            key_types = #int
            this_types = #list
            value_types = #str
            value_structure = null
            delegate = :Delegate {
                delegate_class = %DefaultDelegate
                arguments = {"field" = "agent", "show_item_key" = false, "measure_length" = true}
            }
        }},
    ]
}
metadata.ingredients_file_path :Union {
    substructures = [
        :Key {types = #str},
        :Key {types = #list, structure = inherit temp/Dict {
            key_weight = 0
            key_types = #int
            this_types = #list
            value_types = #str
            value_structure = null
            delegate = :Delegate {
                delegate_class = %DefaultDelegate
                arguments = {"field" = "file path", "show_item_key" = false, "measure_length" = true}
            }
        }},
    ]
}
metadata.ingredients_link_form :Union {
    substructures = [
        :Key {types = #str},
        :Key {types = #list, structure = inherit temp/Dict {
            key_weight = 0
            key_types = #int
            this_types = #list
            value_types = #str
            value_structure = null
            delegate = :Delegate {
                delegate_class = %DefaultDelegate
                arguments = {"field" = "link", "show_item_key" = false, "measure_length" = true}
            }
        }},
    ]
}
metadata.text_layer_name inherit temp/Dict {
    key_weight = 0
    key_types = #int
    this_types = #list
    value_types = [#str, #int]
    value_structure = null
    delegate = :Delegate {
        delegate_class = %DefaultDelegate
        arguments = {"field" = "name", "show_item_key" = false, "measure_length" = true}
    }
}
metadata.text_layer_text inherit temp/Dict {
    key_weight = 0
    key_types = #int
    this_types = #list
    value_types = [#str, #int]
    value_structure = null
    delegate = :Delegate {
        delegate_class = %DefaultDelegate
        arguments = {"field" = "item", "show_item_key" = false, "measure_length" = true}
    }
}
metadata.url_list inherit temp/SortedKeymap { // COMPLETELY empty.
    key_types = #int
    this_types = #list
    keys = {}
    delegate = :Delegate {
        delegate_class = %DefaultDelegate
        arguments = {"field" = "URL", "show_item_key" = false, "measure_length" = true}
    }
}
cache_dummy_file_type :Cache {
    this_types = #file
    structure = :File {
        serializer = @s/dummy_serializer
        outer_types = #file
        inner_types = #null
        structure = :Primitive {
            this_types = #null
            delegate = :Delegate {delegate_class=%@PrimitiveDelegate}
        }
    }
}
lines :Normalizer {
    outer_types = [#str, #list]
    inner_types = #list
    functions = :Function {
        function = %scripts/normalizers/normalizers/textures_split_lines
    }
    structure = :Sequence {
        this_types = #list
        value_types = #str
        value_structure = null
        delegate = :Delegate {
            delegate_class = %LongStringDelegate
            arguments = {"measure_length" = true}
        }
    }
}