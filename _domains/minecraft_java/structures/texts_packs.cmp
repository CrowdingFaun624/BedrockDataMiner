/* Converted by CmpMigrator 0.1.9 */
settings {
    aliases {
        s = @serializers/
        misc = @structures/misc/misc/
        temp = @structures/misc/template/
    }
}
base :StructureBase {
    log = @logs/structure_log
    this_types = #dict
    structure = @resource_packs
    delegate = :Delegate {
        delegate_class = %DefaultBaseDelegate
        arguments = {"name" = "text_packs"}
    }
}
resource_packs inherit temp/Dict {
    value_types = #dict
    value_structure = @files
    delegate = :Delegate {
        delegate_class = %DefaultDelegate
        arguments = {"field" = "resource pack", "measure_length" = true}
    }
}
files inherit temp/Dict {
    value_types = #file
    key_structure = @misc/string
    value_structure = @cache
    delegate = :Delegate {
        delegate_class = %DefaultDelegate
        arguments = {"field" = "file", "measure_length" = true}
    }
}
cache :Cache {
    this_types = #file
    structure = :Condition {
        substructures = [
            :Key {types = #file, filter = :EqFilter {
                key = "serializer"
                value = "text_serializer"
            }, structure = :File {
                serializer = @s/text_serializer
                outer_types = #file
                inner_types = #str
                structure = @structures/text_file/lines
            }},
            :Key {types = #file, filter = :EqFilter {
                key = "serializer"
                value = "fsh_serializer"
            }, structure = :File {
                serializer = @s/fsh_serializer
                outer_types = #file
                inner_types = #str
                structure = @structures/text_file/lines
            }},
            :Key {types = #file, filter = :EqFilter {
                key = "serializer"
                value = "vsh_serializer"
            }, structure = :File {
                serializer = @s/vsh_serializer
                outer_types = #file
                inner_types = #str
                structure = @structures/text_file/lines
            }},
            :Key {types = #file, filter = :EqFilter {
                key = "serializer"
                value = "glsl_serializer"
            }, structure = :File {
                serializer = @s/glsl_serializer
                outer_types = #file
                inner_types = #str
                structure = @structures/text_file/lines
            }},
        ]
    }
}