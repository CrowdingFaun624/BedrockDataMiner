/* Converted by CmpMigrator 0.1.9 */
settings {
    aliases {
        misc = @structures/misc/misc/
        t = @structure_tags/
        temp = @structures/misc/template/
    }
}
float_provider :Switch {
    switch_function = :Function {
        function = %scripts/normalizers/normalizers/provider_switch
        arguments = {"key" = "type", "default" = "minecraft:constant_float"}
    }
    substructures = {
        "minecraft:constant_float" = :Key {types = #float} // not a real type
        "minecraft:constant" = :Key {types = #dict, structure = @float_provider.constant}
        "minecraft:uniform" = :Key {types = #dict, structure = @float_provider.uniform}
        "minecraft:clamped_normal" = :Key {types = #dict, structure = @float_provider.clamped_normal}
        "minecraft:trapezoid" = :Key {types = #dict, structure = @float_provider.trapezoid}
    }
}
float_provider:all {
    "type" = :Key {types = #str, delegate_arguments = {"always_print" = true}}
}
float_provider:abstract abstract inherit temp/SortedKeymap {
    $ (:Structure) keys
    keys = @float_provider:all + keys + {
        "value" = :Key {types = #dict, structure = inherit temp/SortedKeymap {
            keys = keys
        }}
    }
}
float_provider.constant inherit temp/SortedKeymap { // does not inherit from float_provider:abstract since its value is just a float.
    keys = @float_provider:all + {
        "value" = :Key {types = #float}
    }
}
float_provider.uniform inherit float_provider:abstract {
    $ keys = {
        "min_inclusive" = :Key {types = #float}
        "max_exclusive" = :Key {types = #float}
        "base" = :Key {types = #float, tags = @t/outdated}
        "spread" = :Key {types = #float, tags = @t/outdated}
    }
}
float_provider.clamped_normal inherit float_provider:abstract {
    $ keys = {
        "min" = :Key {types = #float}
        "max" = :Key {types = #float}
        "mean" = :Key {types = @misc/decimal}
        "deviation" = :Key {types = @misc/decimal}
    }
}
float_provider.trapezoid inherit float_provider:abstract {
    $ keys = {
        "min" = :Key {types = #float}
        "max" = :Key {types = #float}
        "plateau" = :Key {types = #float}
    }
}