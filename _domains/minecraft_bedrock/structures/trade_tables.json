{
    "group_aliases": {
        "s": "serializers",
        "t": "structure_tags",
        "temp": "structures/template"
    },
    "base": {
        "inherit": "temp/base_multiple_pack_files",
        "$name": "trade_tables",
        "$file_field": "trade table",
        "$pack_type": "behavior pack",
        "$structure": "#@trade_table"
    },
    "trade_table": {
        "type": "Keymap",
        "delegate_arguments": {
            "sort": "sort_by_component_order"
        },
        "keys": {
            "format_version": {"types": "str"},
            "tiers": {"types": "list", "structure": "tiers"}
        }
    },
    "tiers": {
        "type": "Dict",
        "allow_key_moves": false,
        "key_weight": 0,
        "key_types": "int",
        "this_types": "list",
        "delegate_arguments": {
            "field": "tier"
        },
        "value_types": "dict",
        "value_structure": "tier"
    },
    "tier": {
        "type": "Keymap",
        "keys": {
            "groups": {"types": "list", "structure": "groups", "similarity_weight": 10},
            "num_to_select": {"types": "int"},
            "total_exp_required": {"types": "int"},
            "trades": {"types": "list", "structure": "trades", "similarity_weight": 10}
        }
    },
    "groups": {
        "type": "Dict",
        "key_weight": 0,
        "key_types": "int",
        "this_types": "list",
        "delegate_arguments": {
            "field": "group",
            "show_item_key": false,
            "measure_length": true
        },
        "value_types": "dict",
        "min_value_similarity_threshold": 0.3,
        "value_structure": "tier"
    },
    "trades": {
        "type": "Dict",
        "key_weight": 0,
        "key_types": "int",
        "this_types": "list",
        "delegate_arguments": {
            "field": "trade",
            "show_item_key": false,
            "measure_length": true
        },
        "value_types": "dict",
        "min_value_similarity_threshold": 0.3,
        "value_structure": "trade"
    },
    "biome_list": {
        "type": "Dict",
        "key_weight": 0,
        "key_types": "int",
        "this_types": "list",
        "delegate_arguments": {
            "field": "biome",
            "show_item_key": false,
            "sort": "sort_by_value",
            "measure_length": true
        },
        "value_types": "str",
        "value_structure": null
    },
    "trade": {
        "type": "Keymap",
        "delegate_arguments": {
            "sort": "sort_by_component_order"
        },
        "keys": {
            "weight": {"types": "int"},
            "max_uses": {"types": "int"},
            "reward_exp": {"types": "bool"},
            "total_exp_required": {"types": "int"},
            "trader_exp": {"types": "int"},
            "gives": {"types": "list", "structure": "trade:gives"},
            "wants": {"types": "list", "structure": "trade:wants"}
        }
    },
    "trade:gives": {
        "type": "Dict",
        "key_weight": 0,
        "key_types": "int",
        "this_types": "list",
        "delegate_arguments": {
            "field": "given item",
            "show_item_key": false,
            "measure_length": true
        },
        "value_types": "dict",
        "min_value_similarity_threshold": 0.75,
        "value_structure": "trade:gives.item"
    },
    "trade:wants": {
        "type": "Dict",
        "key_weight": 0,
        "key_types": "int",
        "this_types": "list",
        "delegate_arguments": {
            "field": "wanted item",
            "show_item_key": false,
            "measure_length": true
        },
        "value_types": "dict",
        "min_value_similarity_threshold": 0.75,
        "value_structure": "trade:wants.item"
    },
    "trade:gives.item": {
        "type": "Keymap",
        "delegate_arguments": {
            "sort": "sort_by_component_order"
        },
        "keys": {
            "item": {"types": "str", "structure": {
                "type": "String"
            }, "similarity_weight": 12, "delegate_arguments": {"always_print": true}},
            "quantity": {"types": ["dict", "int"], "structure": "structures/loot_tables/range_int_or_int"},
            "biomes": {"types": "list", "structure": "biome_list"},
            "choice": {"types": "list", "structure": "trade:gives.item.choice"},
            "filters": {"types": "dict", "structure": "structures/entities/filter"},
            "functions": {"types": "list", "structure": "structures/loot_tables/functions"}
        }
    },
    "trade:gives.item.choice": {
        "type": "Dict",
        "key_weight": 0,
        "key_types": "int",
        "this_types": "list",
        "delegate_arguments": {
            "field": "choice",
            "show_item_key": false,
            "measure_length": true
        },
        "value_types": "dict",
        "value_structure": "trade:gives.item"
    },
    "trade:wants.item": {
        "type": "Keymap",
        "delegate_arguments": {
            "sort": "sort_by_component_order"
        },
        "keys": {
            "item": {"types": "str", "structure": {
                "type": "String"
            }, "similarity_weight": 12, "delegate_arguments": {"always_print": true}},
            "quantity": {"types": ["dict", "int"], "structure": "structures/loot_tables/range_int_or_int"},
            "choice": {"types": "list", "structure": "trade:wants.item.choice"},
            "biomes": {"types": "list", "structure": "biome_list", "tags": ["t/outdated"]},
            "filters": {"types": "dict", "structure": "structures/entities/filter"},
            "functions": {"types": "list", "structure": "structures/loot_tables/functions", "tags": ["t/outdated"]},
            "price_multiplier": {"types": "temp/decimal"}
        }
    },
    "trade:wants.item.choice": {
        "type": "Dict",
        "key_weight": 0,
        "key_types": "int",
        "this_types": "list",
        "delegate_arguments": {
            "field": "choice",
            "show_item_key": false,
            "measure_length": true
        },
        "value_types": "dict",
        "value_structure": "trade:wants.item"
    }
}