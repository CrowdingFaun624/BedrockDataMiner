/* Converted by CmpMigrator 0.1.9 */
settings {
    aliases {
        temp = @structures/template/
    }
}
base :StructureBase {
    log = @logs/structure_log
    this_types = #dict
    structure = @test1
    delegate = :Delegate {
        delegate_class = %DefaultBaseDelegate
        arguments = {"name" = "test7"}
    }
}
test1 inherit temp/SortedKeymap {
    keys = {
        "a" = :Key {types = [#int, #str], structure = @group_int_str}
        "b" = :Key {types = [#int, #str], structure = @group_int_str}
        "c" = :Key {types = [#int, #str], structure = @group_int_str}
        "d" = :Key {types = [#int, #str], structure = @group_int_str}
        "e" = :Key {types = [#int, #str], structure = @group_int_str}
        "f" = :Key {types = [#int, #str], structure = @group_int_str}
        "g" = :Key {types = [#int, #str], structure = @group_int_str}
        "h" = :Key {types = [#int, #str], structure = @group_int_str}
        "i" = :Key {types = [#dict, #str], structure = @group_dict_or_str}
        "j" = :Key {types = [#dict, #str], structure = @group_dict_or_str}
        "k" = :Key {types = [#dict, #str], structure = @group_dict_or_str}
        "l" = :Key {types = [#dict, #str], structure = @group_dict_or_str}
    }
}
group_int_str :Union {
    substructures = [
        :Key {types = #int},
        :Key {types = #str},
    ]
}
group_dict_or_str :Union {
    substructures = [
        :Key {types = #dict, structure = @test2},
        :Key {types = #str},
    ]
}
test2 inherit temp/SortedKeymap {
    keys = {
        "" = :Key {types = #str}
    }
}