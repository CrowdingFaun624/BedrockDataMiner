/* Converted by CmpMigrator 0.1.9 */
settings {
    aliases {
        s = @serializers/
        temp = @structures/template/
    }
}
base inherit temp/base_multiple_files {
    $ name = "personas"
    $ file_field = "persona"
    $ types = [#dict, #list]
    $ structure = @persona
}
color_list inherit temp/Dict {
    allow_key_moves = false
    key_weight = 0
    key_types = #int
    this_types = #list
    value_types = #str
    value_structure = null
    delegate = :Delegate {
        delegate_class = %DefaultDelegate
        arguments = {"field" = "color", "print_all" = true, "print_flat" = true, "measure_length" = false}
    }
}
persona :Union {
    substructures = [
        :Key {types = #dict, structure = inherit temp/SortedKeymap {
            keys = {
                "appearance" = :Key {types = #list, structure = @appearance}
                "name" = :Key {types = #str, structure = @temp/string, delegate_arguments = {"always_print" = true}}
                "thumbnailPath" = :Key {types = #str}
                "uuid" = :Key {types = #str}
            }
        }},
        :Key {types = #list, structure = @appearance},
    ]
}
appearance inherit temp/Dict {
    key_weight = 0
    key_types = #int
    this_types = #list
    value_types = #dict
    value_structure = inherit temp/SortedKeymap {
        keys = {
            "arm" = :Key {types = #str}
            "col" = :Key {types = #list, structure = @color_list}
            "id" = :Key {types = #str}
            "skcol" = :Key {types = #str}
            "skin" = :Key {types = #bool}
        }
    }
    delegate = :Delegate {
        delegate_class = %DefaultDelegate
        arguments = {"field" = "appearance", "show_item_key" = false, "measure_length" = true}
    }
}