/* Converted by CmpMigrator 0.1.9 */
settings {
    aliases {
        s = @serializers/
        temp = @structures/template/
    }
}
base :StructureBase {
    log = @logs/structure_log
    this_types = #file
    structure = @cache
    delegate = :Delegate {
        delegate_class = %DefaultBaseDelegate
        arguments = {"name" = "profanity_filter"}
    }
}
cache :Cache {
    this_types = #file
    structure = :Condition {
        substructures = [
            :Key {types = #file, filter = :EqFilter {
                key = "encrypted"
                value = false
            }, structure = :File {
                serializer = @s/lines_serializer
                outer_types = #file
                inner_types = #list
                structure = @word_list
            }},
            :Key {types = #file, filter = :EqFilter {
                key = "encrypted"
                value = true
            }, structure = :File {
                serializer = @s/profanity_filter_serializer
                outer_types = #file
                inner_types = #list
                structure = @word_list
            }},
        ]
    }
}
word_list inherit temp/Dict {
    key_weight = 0
    key_types = #int
    this_types = #list
    value_types = #str
    value_structure = @temp/string
    delegate = :Delegate {
        delegate_class = %DefaultDelegate
        arguments = {"field" = "word", "show_item_key" = false, "sort" = %sort_by_value}
    }
}