/* Converted by CmpMigrator 0.1.9 */
settings {
    aliases {
        s = @serializers/
        temp = @structures/template/
    }
}
base inherit temp/base_single_file {
    $ name = "categories"
    $ structure = @file
}
file :Normalizer {
    outer_types = #dict
    inner_types = #dict
    functions = :Function {
        function = %scripts/normalizers/normalizers/categories_normalize
    }
    structure = inherit temp/Dict {
        value_types = #dict
        value_structure = @element
        delegate = :Delegate {
            delegate_class = %DefaultDelegate
            arguments = {"field" = "element", "sort" = %sort_by_key, "measure_length" = true}
        }
    }
}
element inherit temp/SortedKeymap {
    keys = {
        "category" = :Key {types = #dict, structure = @element.category}
        "worlds" = :Key {types = #dict, structure = @element.worlds}
    }
    delegate = :Delegate {
        delegate_class = %DefaultDelegate
        arguments = {"passthrough" = true}
    }
}
element.category inherit temp/SortedKeymap {
    keys = {
        "type" = :Key {types = #str, delegate_arguments = {"always_print" = true}}
        "child_icon" = :Key {types = #str}
        "child_title" = :Key {types = #str}
        "default_color" = :Key {types = #list, structure = @color}
        "description" = :Key {types = #str}
        "icon" = :Key {types = #str}
        "interact_color" = :Key {types = #list, structure = @color}
        "is_first_page" = :Key {types = #bool}
        "items_per_row" = :Key {types = #int}
        "label" = :Key {types = #str}
        "screenshot" = :Key {types = #str}
        "screenshot_height_ratio" = :Key {types = #str}
        "sub_categories" = :Key {types = #list, structure = @sub_categories}
    }
}
element.worlds inherit temp/SortedKeymap {
    keys = {
        "type" = :Key {types = #str, delegate_arguments = {"always_print" = true}}
        "child_icon" = :Key {types = #str}
        "child_title" = :Key {types = [#str, #list], structure = @label}
        "default_color" = :Key {types = #list, structure = @color}
        "description" = :Key {types = #str}
        "icon" = :Key {types = #str}
        "interact_color" = :Key {types = #list, structure = @color}
        "label" = :Key {types = [#str, #list], structure = @label}
        "screenshot" = :Key {types = #str}
        "tags" = :Key {types = #list, structure = @tags}
    }
}
color inherit temp/Dict {
    allow_key_moves = false
    key_weight = 0
    key_types = #int
    this_types = #list
    value_types = #float
    value_structure = null
    delegate = :Delegate {
        delegate_class = %DefaultDelegate
        arguments = {"field" = "item", "print_flat" = true, "print_all" = true}
    }
}
label :Union {
    substructures = [
        :Key {types = #str},
        :Key {types = #list, structure = inherit temp/Dict {
            key_weight = 0
            key_types = #int
            this_types = #list
            value_types = #str
            value_structure = @temp/string
            delegate = :Delegate {
                delegate_class = %DefaultDelegate
                arguments = {"show_item_key" = false, "field" = "parameter"}
            }
        }},
    ]
}
sub_categories inherit temp/Dict {
    key_weight = 0
    key_types = #int
    this_types = #list
    value_types = #str
    value_structure = @temp/string
    delegate = :Delegate {
        delegate_class = %DefaultDelegate
        arguments = {"field" = "subcategory", "show_item_key" = false, "measure_length" = true}
    }
}
tags inherit temp/Dict {
    key_weight = 0
    key_types = #int
    this_types = #list
    value_types = #str
    value_structure = @temp/string
    delegate = :Delegate {
        delegate_class = %DefaultDelegate
        arguments = {"field" = "tags", "show_item_key" = false, "measure_length" = true}
    }
}