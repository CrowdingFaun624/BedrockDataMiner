/* Converted by CmpMigrator 0.1.9 */
settings {
    aliases {
        s = @serializers/
        temp = @structures/template/
    }
}
base inherit temp/base_single_file {
    $ name = "bootstrap"
    $ structure = @bootstrap
}
bootstrap inherit temp/SortedKeymap {
    keys = {
        "profile" = :Key {types = [#dict, #list], structure = :Union {
            substructures = [
                :Key {types = #dict, structure = @profile},
                :Key {types = #list, structure = inherit temp/Dict {
                    allow_key_moves = false
                    key_weight = 0
                    key_types = #int
                    this_types = #list
                    value_types = #null
                    value_structure = null
                    delegate = :Delegate {
                        delegate_class = %DefaultDelegate
                        arguments = {"field" = "item"}
                    }
                }},
            ]
        }}
    }
}
profile inherit temp/SortedKeymap {
    keys = {
        "enabled_groups" = :Key {types = #list, structure = @group_list}
        "min_group_stack_depth" = :Key {types = #int}
        "headers_enabled" = :Key {types = #bool}
    }
}
group_list inherit temp/Dict {
    allow_same_key_optimization = false
    key_weight = 0
    key_types = #int
    this_types = #list
    value_types = #str
    value_structure = @temp/string
    delegate = :Delegate {
        delegate_class = %DefaultDelegate
        arguments = {"show_item_key" = false, "field" = "group"}
    }
}